{"version":3,"file":"static/js/271.7ff6b6a5.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/TextButton.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","PageCharacter/CharacterDisplay/LevelSelect.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/BackgroundWorker.ts","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","Formula/solveLP_simplex.ts","Formula/linearUpperBound.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Context/OptimizationTargetContext.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/DBState.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/subproblemUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts","../wasmpack/assembly.js"],"sourcesContent":["import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Button } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterSelectionModal } from '../../Components/Character/CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../../Components/CustomNumberInput';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../../Data/LevelData';\nimport { clamp } from '../../Util/Util';\n\nexport default function LevelSelect() {\n  const { t } = useTranslation(\"page_character\")\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const setLevel = useCallback((level) => {\n    level = clamp(level, 1, 90)\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\n    characterDispatch({ level, ascension })\n  }, [characterDispatch])\n  const setAscension = useCallback(() => {\n    if (!character) return\n    const { level = 1, ascension = 0 } = character\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\n    else characterDispatch({ ascension: lowerAscension })\n  }, [characterDispatch, character])\n  const { level = 1, ascension = 0 } = character\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\n        sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\n        disabled={!characterSheet} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectLevel\")} disabled={!characterSheet}>\n      {milestoneLevels.map(([lv, as]) => {\n        const sameLevel = lv === ascensionMaxLevel[as]\n        const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport KeyMap, { valueString } from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport { uncoloredEleIcons } from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\n        <Grid item>\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\n        </Grid>\n        {allElementsWithPhy.map(element => <Grid item key={element}>\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\n        </Grid>)}\n        <Grid item>\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\n        </Grid>\n      </Grid>\n      <ExpandButton\n        expand={expanded}\n        onClick={toggle}\n        aria-expanded={expanded}\n        aria-label=\"show more\"\n        size=\"small\"\n        sx={{ p: 0 }}\n      >\n        <ExpandMore />\n      </ExpandButton>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\n    <span >{uncoloredEleIcons[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport StatIcon from \"../../Components/StatIcon\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\nimport { allElements, ElementKey, ElementKeyWithPhy } from \"../../Types/consts\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title=\"Detailed Stats\" action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { character: { elementKey }, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = (elementKey ?? characterSheet.elementKey) as ElementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.map(k => input.total[k])\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\n    if (isMelee) eles.concat([\"physical\"])\n\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BackgroundWorker.ad204960.worker.js\");\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { cmp, constant, prod, sum } from './utils';\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: NumNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: NumNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return cmp(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands]) as NumNode[]\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands]) as NumNode[]\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: NumNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: NumNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'const' && bval.operation === 'const') {\n          return branch.value >= bval.value ? ge : lt\n        }\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, cmp(br2, bv2, left, right))\n            return cmp(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(cmp(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode } from \"./type\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { ArtSetExclusion } from \"../Database/Data/BuildsettingData\"\n\nexport function foldSum(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) {\n    if (nodes.length === 1) return nodes[0]\n    return sum(...nodes)\n  }\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: NumNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  // f2 = optimize(f2, {})\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => Math.abs(lower[statKey] - upper[statKey]) < 1e-6)\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: NumNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return cmp(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, NumNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: NumNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, NumNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: NumNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n as NumNode)\n  })\n\n  function toSOP(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","function pivotInplace(A: number[][], { i, j }: { i: number, j: number }) {\n  const Aij = A[i][j]\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    for (let k = 0; k < A[0].length; k++) {\n      if (k === j) continue\n      A[h][k] -= A[i][k] * A[h][j] / Aij\n    }\n  }\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    A[h][j] = -A[h][j] / Aij\n  }\n  for (let k = 0; k < A[0].length; k++) {\n    if (k === j) continue\n    A[i][k] = A[i][k] / Aij\n  }\n  A[i][j] = 1 / Aij\n}\n\nfunction findPiv1(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let j = 0; j < c - 1; j++) {\n    if (A[r - 1][j] >= 0) continue\n    for (let i = 0; i < r - 1; i++) {\n      if (A[i][j] > 1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('UNBOUNDED FEASIBLE')\n  }\n\n  if (minloc.i < 0) throw Error('NO PIVOTS (done)')\n  return { i: minloc.i, j: minloc.j }\n}\n\nfunction findPiv2(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let i = 0; i < r - 1; i++) {\n    if (A[i][c - 1] >= 0) continue\n    for (let j = 0; j < c - 1; j++) {\n      if (A[i][j] < -1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('INFEASIBLE')\n    return { i: minloc.i, j: minloc.j }\n  }\n  throw Error('NO PIVOTS (done)')\n}\n\nfunction backtrack(tableau: number[][], ijTrack: { i: number, j: number }[], targ: number) {\n  let side = 1;  // 0 left, 1 right\n  ijTrack.forEach(({ i, j }) => {\n    if (side === 1 && j === targ) {\n      targ = i\n      side = 0\n    }\n    else if (side === 0 && i === targ) {\n      targ = j\n      side = 1\n    }\n  })\n\n  const ncol = tableau[0].length\n  return side === 0 ? tableau[targ][ncol - 1] : 0\n}\n\n/**\n * Solve a Linear Program defined by:\n *              min  c^T x\n *               x\n *   Subject to:     Ax <= b\n *                    x >= 0\n *\n * Implemented according to:\n *   https://www.math.ucla.edu/~tom/LP.pdf\n *\n * Does not implement any cycle detection, though that *shouldnt* a problem for GO's use\n *   case. This algorithm is fairly numerically unstable though, use with care & always\n *   try to verify the solution. It's also a fair bit slower than it needs to be.\n *\n * @param c        Objective vector\n * @param Ab       Constraints matrix with thresholds. Inputted in block form [A, b]\n * @returns        the optimal solution x\n */\nexport function solveLP(c: number[], Ab: number[][]) {\n  let rows = Ab.length + 1\n  let cols = Ab[0].length\n\n  let tableau = Array(rows).fill(0).map(_ => Array(cols).fill(0))\n  Ab.forEach((Ai, i) => Ai.forEach((Aij, j) => tableau[i][j] = Aij))\n  // b.forEach((bi, i) => tableau[i][cols - 1] = bi)\n  c.forEach((cj, j) => tableau[rows - 1][j] = cj)\n  // console.log('tab', tableau)\n\n  let ijTrack: { i: number, j: number }[] = []\n\n  while (tableau.some((t, i) => i < rows - 1 && t[cols - 1] < 0)) {\n    const ij = findPiv2(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  while (tableau[rows - 1].some((t, j) => j < cols - 1 && t < 0)) {\n    const ij = findPiv1(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  return c.map((_, i) => backtrack(tableau, ijTrack, i))\n}\n","import { NumNode } from \"./type\"\nimport { ArtifactsBySlot, ArtifactsBySlotVec, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { ExpandedPolynomial, Monomial, sumM, prodM, constantM, readM, foldLikeTerms } from './expandPoly'\nimport { precompute, allOperations } from \"./optimization\"\nimport { solveLP } from './solveLP_simplex'\nimport { cartesian } from '../Util/Util'\nimport { fillBuffer } from \"./addedUtils\"\n\nexport type LinearForm = {\n  w: DynStat,\n  c: number,\n  err: number\n}\nexport type LinearFormVec = {\n  w: number[],\n  c: number,\n  err: number\n}\n\nfunction minMax(node: NumNode, lower: DynStat, upper: DynStat) {\n  let [compute, mapping, buffer] = precompute([node], n => n.path[1])\n  fillBuffer(lower, mapping, buffer)\n  const minval = compute()[0]\n  fillBuffer(upper, mapping, buffer)\n  const maxval = compute()[0]\n  return [minval, maxval]\n}\n\n/**\n * `res` is the ONE place where negative arguments & negative slopes are allowed.\n * @param node\n */\nfunction handleResArg(node: { 'operation': 'res', 'operands': NumNode[] }, lower: DynStat, upper: DynStat) {\n  function flipOps(n: NumNode): NumNode {\n    switch (n.operation) {\n      case 'add':\n        return sum(...n.operands.map(n => flipOps(n)))\n      case 'const':\n        return constant(-n.value)\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (ge.operation === 'const' && lt.operation === 'const') {\n          if (ge.value <= lt.value) {\n            return cmp(branch, bval, -ge.value, -lt.value)\n          }\n        }\n        console.log(n)\n        throw Error('(res neg slope): threshold. Something went wrong.')\n      default:\n        console.log(n)\n        throw Error('(res neg slope) Havent written logic to handle this')\n    }\n  }\n\n  const flippedResOp = flipOps(node.operands[0])\n\n  let [a, b] = minMax(flippedResOp, lower, upper)\n  let resf = allOperations['res']\n  let [c, d] = [resf([-a]), resf([-b])]\n\n  if (b > 0 && a > -1.75) {\n    // 1 + x / 2\n    return sum(1, prod(.5, flippedResOp))\n  }\n\n  const intercept = (b * c - a * d) / (b - a)\n  const slope = (c - d) / (b - a)\n  return sum(intercept, prod(slope, flippedResOp))\n}\n\n/**\n * First converts a product of variables (including max, min, sum_frac, threshold, etc.) to\n *   a pure product form consisting of only `read` and `const` nodes, guaranteeing the\n *   product form is an upper bound.\n *\n * Then on the product form, create a linear upper bound using `lub` and return it.\n *\n * @param node The formula to expand\n * @param lower Stat lower bounds\n * @param upper Stat upper bounds\n * @returns\n */\nexport function toLinearUpperBound({ nodes, terms }: ExpandedPolynomial, lower: DynStat, upper: DynStat): LinearForm {\n  let stat2tag = {} as Dict<string, string>\n  Object.entries(nodes).forEach(([tag, n]) => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = tag\n  })\n\n  let linerr = 0\n  function toPureRead(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'const':\n        return constantM(n.value)\n      case 'read':\n        return readM(stat2tag[n.path[1]]!)\n      case 'add':\n        return sumM(...n.operands.map(toPureRead))\n      case 'mul':\n        return prodM(...n.operands.map(toPureRead))\n\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read' && bval.operation === 'const'\n          && lt.operation === 'const' && ge.operation === 'const') {\n          if (ge.value < lt.value) {\n            console.log(n)\n            throw Error('Not Implemented (threshold must be increasing)')\n          }\n\n          let key = branch.path[1]\n          if (lower[key] >= bval.value) return constantM(ge.value)\n          if (upper[key] < bval.value) return constantM(lt.value)\n\n          const slope = (ge.value - lt.value) / (bval.value - lower[key])\n          const mon1 = prodM(constantM(slope), readM(stat2tag[branch.path[1]]!))\n\n          const intercept = lt.value - slope * lower[key]\n          if (intercept === 0) return mon1\n          return sumM(constantM(intercept), mon1)\n          // if (lt.value === 0) return mon1\n          // return sumM(constantM(lt.value), mon1)\n        }\n        console.log(n)\n        throw Error('Not Implemented (threshold must branch between constants)')\n      case 'res':\n        let op = handleResArg(n as { 'operation': 'res', 'operands': NumNode[] }, lower, upper)\n        return toPureRead(op)\n\n      case 'min': case 'max':\n        let [rop, cop] = n.operands\n        if (cop.operation !== 'const')\n          [rop, cop] = [cop, rop]  // Assume min(const, read)\n        if (n.operation === 'min') return toPureRead(rop)\n\n        if (cop.operation === 'const') {\n          const thresh = cop.value\n          const [minVal, maxVal] = minMax(rop, lower, upper)\n          if (minVal > thresh) return toPureRead(rop)\n          if (thresh > maxVal) return constantM(thresh)\n\n          // rescale `rop` to be above thresh, since max(f, 0) is a convex function\n          const m = (maxVal - thresh) / (maxVal - minVal)\n          const b = thresh - m * minVal\n          return sumM(constantM(b), prodM(constantM(m), toPureRead(rop)))\n        }\n        console.log(n)\n        throw Error('Not Implemented (max between two non-constants)')\n\n      case 'sum_frac':\n        const [em, denom] = n.operands\n        if (denom.operation !== 'const') throw Error('Not Implemented (non-constant sum_frac denominator)')\n\n        const [minEM, maxEM] = minMax(em, lower, upper)\n        const k = denom.value\n        // The sum_frac form is concave, so any Taylor expansion of EM / (EM + k) gives an upper bound.\n        // We can solve for the best Taylor approximation location with the following formula.\n        let loc = Math.sqrt((minEM + k) * (maxEM + k)) - k\n        let below = (k + loc) * (k + loc)\n        let slope = k / below\n        let c = loc * loc / below\n\n        // TODO: update linerr\n        return sumM(constantM(c), prodM(constantM(slope), toPureRead(em)))\n\n      default:\n        console.log(n)\n        throw Error('Not Implemented')\n    }\n  }\n\n  // 1. Turn all nodes into linear upper bounds\n  const nodesToMap = Object.fromEntries(Object.entries(nodes).filter(([tag, n]) => n.operation !== 'read').map(([tag, n]) => [tag, toPureRead(n)]))\n\n  // 2. substitute into `terms` and construct a new SOPForm whose nodes are all pure read nodes\n  let t2 = terms.flatMap(({ coeff, terms }) => prodM(constantM(coeff), ...terms.map(t => nodesToMap[t] ?? readM(t))))\n  t2 = foldLikeTerms(t2)\n\n  // 2.5 Re-name all the tags to their read node version\n  t2 = t2.map(({ coeff, terms }) => {\n    terms = terms.map(t => {\n      const nt = nodes[t]\n      if (!nt || nt.operation !== 'read') throw Error('MUST be a read node.')\n      return nt.path[1]\n    })\n    return { coeff, terms }\n  })\n\n  // 3. call lub() on each term\n  const lins = t2.map(({ coeff, terms }) => {\n    if (terms.length === 0) return { w: {}, c: coeff, err: 0 }\n    if (terms.length === 1) return { w: { [terms[0]]: coeff }, c: 0, err: 0 }\n    const { w, c, err } = lub(terms.map(k => ({ lower: lower[k], upper: upper[k] })))\n    const retw = w.reduce((ret, wi, i) => {\n      ret[terms[i]] = wi * coeff + (ret[terms[i]] ?? 0)\n      return ret\n    }, {} as DynStat)\n    return { w: retw, c: coeff * c, err: coeff * err + linerr }\n  })\n\n  return lins.reduce((lin, l) => {\n    lin.c += l.c; lin.err += l.err\n    Object.entries(l.w).forEach(([k, v]) => lin.w[k] = v + (lin.w[k] ?? 0))\n    return lin\n  }, { w: {}, c: 0, err: 0 })\n}\n\n/**\n * Constructs an upper bounding linear form for a function x_1 * x_2 * ... * x_n\n * @param bounds upper and lower bounds for each x_i\n * @returns { w, c, err } with\n */\nfunction lub(bounds: { lower: number, upper: number }[]): { w: number[], c: number, err: number } {\n  if (bounds.length === 0) return { w: [], c: 0, err: 0 }\n  const nVar = bounds.length\n\n  // Re-scale bounds to [0, 1] for numerical stability.\n  const boundScale = bounds.map(({ upper }) => upper)\n  const scaleProd = boundScale.reduce((prod, v) => prod * v, 1)\n  bounds = bounds.map(({ lower, upper }) => ({ lower: lower / upper, upper: 1 }))\n\n  // Setting up the linear program in terms of constraints.\n  let cons = cartesian(...bounds.map(({ lower, upper }) => [lower, upper])).flatMap((coords) => {\n    const prod = coords.reduce((prod, v) => prod * v, 1)\n    return [\n      [...coords.map(v => -v), 1, 0, -prod],\n      [...coords, -1, -1, prod],\n    ]\n  })\n\n  // Force equality at upper & lower corners?\n  // cons.push([...bounds.map(lu => lu.lower), -1, 0, bounds.reduce((prod, { lower }) => prod * lower, 1)])\n  // cons.push([...bounds.map(lu => lu.upper), -1, 0, bounds.reduce((prod, { upper }) => prod * upper, 1)])\n\n  let soln: any\n  const objective = [...bounds.map(_ => 0), 0, 1]\n  try {\n    // TODO: verify solution\n    soln = solveLP(objective, cons)\n  }\n  catch (e) {\n    console.log('ERROR on bounds', bounds)\n    console.log('Possibly numerical instability issue.')\n    throw e\n  }\n  return {\n    w: soln.slice(0, nVar).map((wi, i) => wi * scaleProd / boundScale[i]),\n    c: -scaleProd * soln[nVar],\n    err: scaleProd * soln[nVar + 1]\n  }\n}\n\nexport function maxWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMax([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((maxTotVal, [slotKey, slotArts]) => maxTotVal + sparseMatmulMax([lin], slotArts.map(a => a.values))[0], 0)\n}\nexport function minWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMin([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((minTotVal, [slotKey, slotArts]) => minTotVal + sparseMatmulMin([lin], slotArts.map(a => a.values))[0], 0)\n}\n\nexport function maxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  return Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n}\nexport function minMaxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  const maxw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n\n  const minw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.min(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n  return { minw, maxw }\n}\n\n\n\n// Implement matrix multiply between row-major w's of LinearForm and col-major DynStats that represent artifacts.\n/**\n * Implements sparse matrix multiplication between A and x\n * @param A A list of row-major w's of some LinearForm\n * @param x A list of col-major DynStats that represent some artifacts\n * @returns A col-major 2d array number[][] with shape (A.length, x.length).\n *          ret[0] is [A1 @ x1, A2 @ x1, ..., An @ x1]\n */\nexport function sparseMatmul(A: LinearForm[], x: DynStat[]) {\n  return x.map(dyn => A.map(({ w }) => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0)))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a max() along the rows.\n */\nexport function sparseMatmulMax(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.max(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a min() along the rows.\n */\nexport function sparseMatmulMin(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.min(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype DynMinMax = { [key in string]: MinMax }\ntype MinMax = { min: number, max: number }\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\n\n  function visit(node: NumNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(_op => {\n      const op = _op as NumNode\n      affineNodes.has(op) && topLevelAffine.add(op)\n    })\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const operation = f.operation\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\":\n        if (typeof f.value === \"string\" || f.value === undefined)\n          throw new Error(`Found constant ${f.value} while compacting`)\n        visit(f as NumNode, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return constant(0)\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\n  const range = new Map<NumNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, _f => {\n    const f = _f as NumNode\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"subscript\": current = computeMinMax(f.list); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = computeMinMax([0])\n        else current = computeMinMax([0], [operands[2]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      case \"data\": case \"lookup\": case \"match\":\n        throw new Error(`Unsupported ${operation} node`)\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArtsVec(arts: ArtifactsBySlotVec, filters: RequestFilter): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArts2(arts: ArtifactsBySlot, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function filterArtsVec2(arts: ArtifactsBySlotVec, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\n\nexport type ArtifactBuildDataVecDense = {\n  id: string\n  set?: ArtifactSetKey\n  values: number[]\n  buffer: number[]\n}\n// I dont *think* its worth it to implement sparse vectors n shit\n// export type ArtifactBuildDataVecSparse = {\n//   id: string\n//   set?: ArtifactSetKey\n//   values: number[][]\n// }\nexport type ArtifactsBySlotVec = { keys: string[], base: number[], values: StrictDict<SlotKey, ArtifactBuildDataVecDense[]>, baseBuffer: number[] }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, setBuildSetting),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => fakeData(dataContext), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`tabOptimize.artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`tabOptimize.artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`tabOptimize.artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`tabOptimize.artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`tabOptimize.artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`tabOptimize.artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`tabOptimize.artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`tabOptimize.artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets[setKey]} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\nfunction fakeData(currentContext: dataContextObj): dataContextObj {\n  return {\n    ...currentContext,\n    data: new UIData({ ...currentContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"tabOptimize.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl }) : t(\"tabOptimize.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon, { uncoloredEleIcons } from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{KeyMap.getArtStr(mainStatKey)}</Typography>} disableInteractive>\n              <span>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && KeyMap.getArtStr(stat.key)}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: CharacterKey | \"\" }) {\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from \"../../KeyMap\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon from \"../StatIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\n        <span>{StatIcon[node.info.key]}</span>\n      </BootstrapTooltip>\n      <span>{val}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }) {\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Stack, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ArtifactSlotKey } from 'pipeline';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { Translate } from '../../../../../Components/Translate';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtons?: JSX.Element\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\n    database.chars.equipArtifacts(characterKey, newBuild)\n    database.weapons.set(data.get(input.weapon.id).value!, { location: characterKey })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = data.get(input.art[slotKey].id).value!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <SetBadges currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\n          {extraButtons}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\n  const { data } = useContext(DataContext)\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n  )}</>\n\n}\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n\n  return <Box>\n    <BootstrapTooltip placement=\"top\" title={\n      <Suspense fallback={<Skeleton variant='rectangular' width={100} height={100} />}>\n        <SetToolTipTitle artifactSheet={artifactSheet} numInSet={slotarr.length} />\n      </Suspense>\n    } disableInteractive >\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n      </Typography></SqBadge>\n    </BootstrapTooltip>\n  </Box>\n}\nfunction SetToolTipTitle({ artifactSheet, numInSet }: { artifactSheet: ArtifactSheet, numInSet: number }) {\n  const { t } = useTranslation(\"sheet\")\n  return <Stack spacing={2} sx={{ p: 1 }}>\n    {Object.keys(artifactSheet.setEffects).map((setKey) => <Box sx={{ opacity: parseInt(setKey) <= numInSet ? 1 : 0.5 }}>\n      <Typography><SqBadge color=\"success\">{t(`${setKey}set`)}</SqBadge></Typography>\n      <Typography><Translate ns={`artifact_${artifactSheet.key}_gen`} key18={`setEffects.${setKey}`} /></Typography>\n    </Box>\n    )}\n  </Stack>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: characterKey })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\" >Optimization Target vs</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton title={plotBase ? KeyMap.get(plotBase) : \"Not Selected\"}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>Unselect</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>Show Min Stat Threshold</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>Download Data</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name=\"Optimization Target\" dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name=\"Minimum Stat Requirement Threshold\" dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport StatIcon, { uncoloredEleIcons } from '../../../../../Components/StatIcon';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport KeyMap from '../../../../../KeyMap';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={i < 3 ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong>{KeyMap.getArtStr(mainStatKey)}</strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { input } from \"../../../../../Formula\"\nimport { StatKey } from \"../../../../../KeyMap\"\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\nimport useBuildSetting from \"../useBuildSetting\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\n\n  const statKeys = useMemo(() => {\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n    const charEle = data.get(input.charEle).value as ElementKey\n    statKeys.push(`${charEle}_dmg_`)\n    return statKeys\n  }, [data])\n\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`tabOptimize.constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`tabOptimize.constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import useDBState from \"../../../../ReactHooks/useDBState\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport const defThreads = navigator.hardwareConcurrency || 4\n\nexport function initialTabOptimizeDBState(): {\n  equipmentPriority: CharacterKey[],\n  threads: number,\n} {\n  return {\n    equipmentPriority: [],\n    threads: defThreads\n  }\n}\n\nexport function useOptimizeDBState() {\n  return useDBState(\"TabOptimize\", initialTabOptimizeDBState)\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport { CharacterSelectionModal } from \"../../../../../Components/Character/CharacterSelectionModal\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../useBuildSetting\";\nimport { useOptimizeDBState } from \"../DBState\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useOptimizeDBState()\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\"><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.title\">Character Priority for Equipped Artifacts</Trans></Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"tabOptimize.useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"tabOptimize.useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\"\nimport { fillBuffer, reducePolynomial } from \"../../../../Formula/addedUtils\"\nimport { ExpandedPolynomial, expandPoly, toNumNode } from \"../../../../Formula/expandPoly\"\nimport { LinearForm, minMaxWeightVec, toLinearUpperBound } from \"../../../../Formula/linearUpperBound\"\nimport { precompute } from \"../../../../Formula/optimization\"\nimport { NumNode } from \"../../../../Formula/type\"\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\"\nimport { objectKeyMap, objectKeyValueMap, range } from \"../../../../Util/Util\"\nimport { ArtifactBuildDataVecDense, ArtifactsBySlot, ArtifactsBySlotVec, DynStat, filterArtsVec2, RequestFilter } from \"./common\"\n\nexport type UnionFilter = {\n  uType: true\n  filters: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>[]\n} | (RequestFilter & { uType: false })\n\nexport type RequestFilter2 = {\n  // filter: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>,\n  filterVec: StrictDict<SlotKey, number[]>,  // dict of list of indices (for some particular ArtifactsBySetVec)\n  lower: number[],  // length `k` list of lower bound stats\n  upper: number[],  // length `k` list of upper bound stats\n  minw: number[],   // length `l` list of minimum upper bound estimates\n  maxw: number[],   // length `l` list of maximum upper bound weights\n}\nexport type UnionFilter2 = RequestFilter2[]\nexport type ArtSetExclusionFull = Dict<Exclude<ArtifactSetKey, \"PrayersForDestiny\" | \"PrayersForIllumination\" | \"PrayersForWisdom\" | \"PrayersToSpringtime\"> | \"uniqueKey\", number[]>\n// export type SubProblem = SubProblemNC | SubProblemWC\nexport type SubProblem = SubProblemWC\nexport type SubProblemNC = {\n  cache: false,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  depth: number,\n}\nexport type SubProblemWC = {\n  cache: true,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  lin: LinearForm[],\n  // cachedCompute: CachedCompute,\n  depth: number,\n}\nexport type CachedCompute = {\n  maxEst: number[],\n  lin: LinearForm[],\n  lower: DynStat,\n  upper: DynStat\n}\n\nexport function countBuildsU(f: UnionFilter2): number {\n  return f.reduce((tot, { filterVec }) => tot + allSlotKeys.reduce((_count, slot) => _count * filterVec[slot].length, 1), 0)\n}\n\nexport function unionFilterUpperLower(f: UnionFilter2) {\n  const lower = [...f[0].lower]\n  const upper = [...f[0].upper]\n  const minw = [...f[0].minw]\n  const maxw = [...f[0].maxw]\n\n  for (let i = 1; i < f.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], f[i].lower[j])\n      upper[j] = Math.max(upper[j], f[i].upper[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], f[i].minw[j])\n      maxw[j] = Math.max(maxw[j], f[i].maxw[j])\n    }\n  }\n\n  return { lower, upper, minw, maxw }\n}\n\nexport function applyLinearForm(arts: ArtifactsBySlotVec, lin: LinearForm[]) {\n  const wixs: number[][] = []\n  const ws: number[][] = []\n  const baseC: number[] = []\n  lin.forEach(li => {\n    const ixs0: number[] = []\n    const w0: number[] = []\n    Object.entries(li.w).forEach(([k, w]) => {\n      ixs0.push(arts.keys.indexOf(k))\n      w0.push(w)\n    })\n    wixs.push(ixs0)\n    ws.push(w0)\n\n    baseC.push(ixs0.reduce((accum, ix, i) => accum + arts.base[ix] * w0[i], li.c))\n  })\n\n  arts.baseBuffer = baseC\n  allSlotKeys.forEach(slotKey => arts.values[slotKey].forEach(art =>\n    art.buffer = wixs.map((ixsi, i) => ixsi.reduce((accum, ix, j) => accum + art.values[ix] * ws[i][j], 0))\n  ))\n}\n\nexport function reduceSubProblem(arts: ArtifactsBySlotVec, threshold: number, subp: SubProblem): SubProblemWC | undefined {\n  const { optimizationTarget, constraints, artSetExclusion, depth } = subp\n  let { filters } = subp\n  let nodes = [...constraints.map(({ value }) => value), optimizationTarget]\n  const mins = constraints.map(({ min }) => min)\n\n  // 0. Check for never-feasible constraints\n  filters = filters.filter(({ maxw }) => {\n    if (mins.some((min, j) => maxw[j] < min)) return false\n    if (maxw[mins.length] < threshold) return false\n    return true\n  })\n  if (filters.length === 0) return undefined\n\n  // 0b. Calculate stat bounding box\n  const { lower, upper } = unionFilterUpperLower(filters)\n  const statsMin: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, lower[i]])))\n  const statsMax: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, upper[i]])))\n\n  nodes = reducePolynomial(nodes, statsMin, statsMax)\n\n  // 1. Check for always-feasible constraints.\n  const [compute, mapping, buffer] = precompute(constraints.map(({ value }) => toNumNode(value)), n => n.path[1])\n  fillBuffer(statsMin, mapping, buffer)\n  const result = compute()\n  const active = mins.map((m, i) => m > result[i])\n\n  const newOptTarget = nodes.pop()!\n  const newConstraints = nodes.map((value, i) => ({ value, min: mins[i] })).filter((_, i) => active[i])\n  const newMins = newConstraints.map(({ min }) => min)\n\n  // 2. Check for never-active and always-active ArtSetExcl constraints.\n  const newArtExcl = {} as ArtSetExclusionFull\n  for (const [setKey, exclude] of Object.entries(artSetExclusion)) {\n    if (setKey === 'uniqueKey') {\n      // TODO: Check and exclude rainbow bullshit.\n      newArtExcl[setKey] = exclude\n      const feasibleKeys = allArtifactSets.filter(setKey => statsMax[setKey] > 0)\n      let feasible4sets = 0\n      let feasible2sets = 0\n      feasibleKeys.forEach(k => {\n        let allowedCnts = range(statsMin[k], statsMax[k])\n        if (artSetExclusion[k])\n          allowedCnts = allowedCnts.filter(cnt => !artSetExclusion[k].includes(cnt))\n\n        if (allowedCnts.includes(4) || allowedCnts.includes(5)) feasible4sets++\n        if (allowedCnts.includes(2) || allowedCnts.includes(3)) feasible2sets++\n      })\n\n      if (exclude.includes(5) && feasible4sets === 0) {\n        if (feasible2sets === 0) return; // No feasible 4sets or 2sets along with rainbow5 excluded is never satisfiable\n        if (exclude.includes(3) && feasible2sets < 2) return; // No 4sets, rainbow5 excluded, rainbow3 excluded means we need at least 2 2sets\n      }\n      continue\n    }\n    const reducedExcl = exclude.filter(n => statsMin[setKey] <= n && n <= statsMax[setKey])        // Cut away never-active\n    if (reducedExcl.includes(statsMin[setKey]) && reducedExcl.includes(statsMax[setKey])) return;  // Always active.\n    if (reducedExcl.length > 0) newArtExcl[setKey] = reducedExcl\n  }\n\n  // 3. Estimate Upper Bounds and re-check for never-feasible constraints\n  let f = [...newConstraints.map(({ value }) => value), newOptTarget]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  applyLinearForm(arts, lin)\n  const newFilters = filters\n    .map(filter => {\n      const { filterVec, lower, upper } = filter\n      const a = filterArtsVec2(arts, filter.filterVec)  // CANDIDATE for making this more efficient\n      const minww = [...a.baseBuffer]\n      const maxww = [...a.baseBuffer]\n      allSlotKeys.forEach(slotKey => {\n        const { minw, maxw } = slotUpperLowerVecW(a.values[slotKey])\n        for (let j = 0; j < minww.length; j++) {\n          minww[j] += minw[j]\n          maxww[j] += maxw[j]\n        }\n      })\n      return {\n        filterVec, lower, upper,\n        minw: minww, maxw: maxww,\n      }\n    })\n    .filter(({ maxw }) => {\n      if (newMins.some((min, j) => maxw[j] < min)) return false\n      if (maxw[mins.length] < threshold) return false\n      return true\n    })\n\n  return {\n    cache: true,\n    optimizationTarget: newOptTarget,\n    constraints: newConstraints,\n    artSetExclusion: newArtExcl,\n\n    depth, lin, filters: newFilters\n  }\n}\n\nexport function toArtifactBySlotVec(arts: ArtifactsBySlot): ArtifactsBySlotVec {\n  const allKeys = new Set(Object.keys(arts.base))\n  Object.values(arts.values).forEach(slotArts => {\n    slotArts.forEach(art => {\n      if (art.set) allKeys.add(art.set)\n      Object.keys(art.values).forEach(k => allKeys.add(k))\n    })\n  })\n\n  const allKeysList = [...allKeys]\n  const keys = [...allKeysList.filter(k => !(allArtifactSets as readonly string[]).includes(k)), ...allKeysList.filter(k => (allArtifactSets as readonly string[]).includes(k))]\n\n  return {\n    keys, baseBuffer: [],\n    base: keys.map(k => arts.base[k] ?? 0),\n    values: {\n      flower: arts.values.flower.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      plume: arts.values.plume.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      sands: arts.values.sands.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      goblet: arts.values.goblet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      circlet: arts.values.circlet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n    }\n  }\n}\n\ntype ProblemSetup = {\n  optimizationTargetNode: NumNode,\n  nodes: NumNode[],\n  minimum: number[],\n  artSetExclusion: ArtSetExclusion\n}\nexport function problemSetup(arts: ArtifactsBySlotVec, { optimizationTargetNode, nodes, minimum, artSetExclusion }: ProblemSetup): SubProblemWC {\n  const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n    if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n    return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n  })\n\n  const constraintsEP = nodes\n    .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n    .filter(x => x.min > -Infinity)\n  const opttargetEP = expandPoly(optimizationTargetNode)\n\n  const { lower, upper } = statsUpperLowerVec(arts)\n  const statsMin = Object.fromEntries(arts.keys.map((k, i) => [k, lower[i]]))\n  const statsMax = Object.fromEntries(arts.keys.map((k, i) => [k, upper[i]]))\n  let f = [...constraintsEP.map(({ value }) => value), opttargetEP]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  const minMaxEst = lin.map(li => minMaxWeightVec(arts, li))\n\n  console.log('-----------------------------------------------------------------------')\n  console.log('lin', lin)\n  console.log('-----------------------------------------------------------------------')\n\n  const filterVec = objectKeyMap(allSlotKeys, slotKey => {\n    return arts.values[slotKey].map((v, i) => i)\n  })\n\n  const initialProblem: SubProblemWC = {\n    cache: true,\n    optimizationTarget: opttargetEP,\n    constraints: constraintsEP,\n    artSetExclusion: artSetExclFull,\n\n    filters: [{\n      filterVec, lower, upper,\n      maxw: minMaxEst.map(({ maxw }) => maxw),\n      minw: minMaxEst.map(({ minw }) => minw),\n    }],\n    depth: 0,\n    lin,\n  }\n  const initialReducedProblem = reduceSubProblem(arts, -Infinity, initialProblem)\n  console.log(initialReducedProblem)\n  if (initialReducedProblem === undefined)\n    return initialProblem\n  return initialReducedProblem\n}\n\nexport function slotUpperLowerVec(arts: ArtifactBuildDataVecDense[]) {\n  const lower = [...arts[0].values]\n  const upper = [...arts[0].values]\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], arts[i].values[j])\n      upper[j] = Math.max(upper[j], arts[i].values[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { lower, upper, minw, maxw }\n}\nexport function slotUpperLowerVecW(arts: ArtifactBuildDataVecDense[]) {\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { minw, maxw }\n}\nexport function statsUpperLowerVec(a: ArtifactsBySlotVec) {\n  const lower = [...a.base]\n  const upper = [...a.base]\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVec(slotArts)\n    for (let i = 0; i < lower.length; i++) {\n      lower[i] += slotUL.lower[i]\n      upper[i] += slotUL.upper[i]\n    }\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { lower, upper, minw, maxw }\n}\nexport function statsUpperLowerVecW(a: ArtifactsBySlotVec) {\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVecW(slotArts)\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { minw, maxw }\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography, Pagination } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink } from 'react-router-dom';\n// eslint-disable-next-line\nimport Worker from \"worker-loader!./BackgroundWorker\";\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport KeyMap from '../../../../KeyMap';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useDBState from '../../../../ReactHooks/useDBState';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { initGlobalSettings } from '../../../../stateInit';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { CharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { defThreads, useOptimizeDBState } from './DBState';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { countBuildsU, problemSetup, SubProblem, toArtifactBySlotVec } from './subproblemUtil';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useOptimizeDBState()\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\n  const numBuilds = buildsArts.length\n\n  const [currentPageIndex, setCurrentPageIndex] = useState(0)\n  const { numPages } = useMemo(() => {\n    return { numPages: Math.ceil(numBuilds / maxArtsToShowPerPage) }\n  }, [numBuilds])\n  const setPageIdx = useCallback((e, value: number) => {\n    setCurrentPageIndex(value - 1)\n  }, [setCurrentPageIndex])\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: CharacterKey[] = []\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) cantTakeList = [...equipmentPriority]\n      else cantTakeList = equipmentPriority.slice(0, index)\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === characterKey) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.includes(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    const targetNode = optimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      nodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // Can be further folded after pruning\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    optimizationTargetNode = nodes.pop()!\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const constraints = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const artsVec = toArtifactBySlotVec(arts)\n    const initialProblem = problemSetup(artsVec, { optimizationTargetNode, nodes, minimum, artSetExclusion })\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 5\n    const minFilterCount = 2_000 // Don't split for single worker\n    // const maxRequestFilterInFlight = maxWorkers * 4\n    const maxRequestFilterInFlight = 1\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1] }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuildsU(subproblem.filters)\n      // let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1], subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker()\n      workers.push(worker)\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts, artsVec,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters: constraints\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues.push(...data.buildValues)\n              wrap.buildValues.sort((a, b) => b - a).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n      setCurrentPageIndex(0)\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority, setCurrentPageIndex])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>Main Stat</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Typography><strong>Level Assumption</strong> changes mainstat value to be at least a specific level. Does not change substats.</Typography>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`tabOptimize.allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>Artifact Level Filter</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<TrendingUp />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      {tcMode && <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>}\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>\n                <small>Show New artifact Stats</small>\n              </ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>\n                <small>Compare against equipped artifacts</small>\n              </ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} pageIdx={currentPageIndex} />\n      </OptimizationTargetContext.Provider>\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n    </DataContext.Provider>}\n  </Box>\n}\n\nconst maxArtsToShowPerPage = 5\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled, pageIdx }: {\n  buildsArts: ICachedArtifact[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n  pageIdx: number,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {buildsArts?.slice(maxArtsToShowPerPage * pageIdx, maxArtsToShowPerPage * (pageIdx + 1))\n      .map((build, index) => characterKey && data && <DataContextWrapper\n        key={index + build.join()}\n        characterKey={characterKey}\n        build={build}\n        oldData={data}\n      >\n        <BuildDisplayItem index={maxArtsToShowPerPage * pageIdx + index} compareBuild={compareData} disabled={disabled} />\n      </DataContextWrapper>\n      )}\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled, pageIdx])\n  return list\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: ICachedArtifact[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n\nfunction PageBrowser({ numPages, pageIdx, setPageIdex }: {\n  numPages: number,\n  pageIdx: number,\n  setPageIdex: (e: any, n: number) => void\n}) {\n  return <CardDark ><CardContent>\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Pagination count={numPages} page={pageIdx + 1} onChange={setPageIdex} />\n      </Grid>\n      <Grid item>\n        page {pageIdx + 1} / {numPages}\n        {/* <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} /> */}\n      </Grid>\n    </Grid>\n  </CardContent></CardDark>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n        {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n          <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n        </DataContext.Provider>}\n      </Suspense>\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const filterConfigs = useMemo(() => weaponSheets && weaponFilterConfigs(weaponSheets), [weaponSheets])\n  const sortConfigs = useMemo(() => weaponSheets && weaponSortConfigs(weaponSheets), [weaponSheets])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (filterConfigs && sortConfigs && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, filterConfigs))\n    .sort(sortFunction(\"level\", false, sortConfigs))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, filterConfigs, sortConfigs, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { initCharMeta } from '../../../../stateInit';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport { floatCompare } from '../../../../Util/Util';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !floatCompare(currentEfficiency, currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!floatCompare(currentEfficiency_, maxEfficiency_),\n      value: !floatCompare(maxEfficiency, maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            <BasicFieldDisplay field={rvmField} component={ListItem} />\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, CardContent, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport { uncoloredEleIcons } from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport CharacterSheet, { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport { initCharMeta } from \"../../../../stateInit\";\nimport { allSlotKeys, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {uncoloredEleIcons[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{CharacterSheet.getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <CardContent>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </CardContent>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { CardContent, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useContext, useMemo } from 'react';\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport CharacterAutocomplete from \"../../../Components/Character/CharacterAutocomplete\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={n.info.key} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { data } = useContext(DataContext)\n  return <>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, characterDispatch: activeCharacterDispatch } = useContext(CharacterContext)\n  const activeCharacterKey = active.key\n  const characterKey = active.team[index]\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickHandler = useCharSelectionCallback()\n\n  const dataBundle = teamData[characterKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: dataBundle.character,\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch\n  }, [dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <CardContent>\n      <CharacterAutocomplete fullWidth value={characterKey}\n        onChange={charKey => activeCharacterDispatch({ type: \"team\", index, charKey })}\n        disable={ck => ck === activeCharacterKey || (ck !== \"\" && active.team.includes(ck))}\n        labelText={t(\"teammate\", { count: index + 1 })}\n        defaultText={t(\"none\")}\n        defaultIcon={<PersonAdd />}\n        showDefault\n      />\n    </CardContent>\n    {teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={characterKey}\n          onClickHeader={onClickHandler}\n          artifactChildren={<CharArtifactCondDisplay />}\n          weaponChildren={<CharWeaponCondDisplay />}\n          characterChildren={<CharTalentCondDisplay />}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { data, teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute } from \"./optimization\"\nimport { fillBuffer } from \"./addedUtils\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): NumNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return { operation: \"sum_frac\", operands: [numerator, prod(numerator, -1), denom] }\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return cmp(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return cmp(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n\n      break\n    case \"threshold\":\n      const [value, threshold, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(threshold, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return cmp(value, threshold, ddx(pass, binding, diff), ddx(fail, binding, diff))\n\n    case \"match\": case \"lookup\": case \"subscript\": case \"data\":\n      throw new Error(`Unsupported [${operation}] node in ddx`)\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"info\": { \"key\": \"TenacityOfTheMillelith\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"hp_\", \"source\": \"TenacityOfTheMillelith\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"info\": { \"key\": \"ShimenawasReminiscence\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"atk_\", \"source\": \"ShimenawasReminiscence\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"info\": { \"key\": \"WanderersTroupe\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"eleMas\", \"source\": \"WanderersTroupe\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"eleMas\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"info\": { \"key\": \"CrimsonWitchOfFlames\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"vaporize_dmg_\", \"variant\": \"vaporize\", \"source\": \"CrimsonWitchOfFlames\" }, \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1\n\n  var [compute, mapping, buffer] = precompute([formula2], f => f.path[1])\n  fillBuffer(stats, mapping, buffer)\n  var result = compute()[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  var res2 = compute()[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  var [c_dhp_, mapping2, buffer2] = precompute([dhp_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer2[mapping2[k] ?? 0] = v)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_()[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  var [c_dhp, mapping3, buffer3] = precompute([dhp], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer3[mapping3[k] ?? 0] = v)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp()[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  var [c_datk_, buffer4, mapping4] = precompute([datk_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer4[mapping4[k] ?? 0] = v)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_()[0])\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  var [c_deleMas, mapping5, buffer5] = precompute([deleMas], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer5[mapping5[k] ?? 0] = v)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas()[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.maxSubstatValues(key, 5) / 1000 : Artifact.maxSubstatValues(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\nimport { fillBuffer } from \"../../../../Formula/addedUtils\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.maxSubstatValues(key, art.rarity) / 1000 : Artifact.maxSubstatValues(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: NumNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: NumNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n  const [evalFn, mapping, buffer] = precompute(evalOpt, f => f.path[1])\n\n  let stats = toStats(curBuild)\n  fillBuffer(stats, mapping, buffer)\n  const dmg0 = evalFn()[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    Object.values(mapping).forEach(k => buffer[k] = 0)  // Need to reset buffer before evaluating\n    fillBuffer(stats, mapping, buffer)\n    const out = evalFn()\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database.arts.get(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../TabOptimize/Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objectKeyMap, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { DynStat } from '../TabOptimize/common';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useFilters, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys, levelLow, levelHigh, artSetExclusion } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const equippedArts = database.chars.get(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    const curEquip: QueryBuild = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art ? toQueryArtifact(art) : undefined\n    })\n    const curEquipSetKeys = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art?.setKey ?? ''\n    })\n    function respectSexExclusion(art: ICachedArtifact) {\n      const newSK = { ...curEquipSetKeys }\n      newSK[art.slotKey] = art.setKey\n      const skc: DynStat = {}\n      allSlotKeys.forEach(slotKey => skc[newSK[slotKey]] = (skc[newSK[slotKey]] ?? 0) + 1)\n      let pass = Object.entries(skc).every(([setKey, num]) => {\n        if (!artSetExclusion[setKey]) return true\n        switch (num) {\n          case 0: case 1:\n            return true\n          case 2: case 3:\n            return !artSetExclusion[setKey].includes(2)\n          case 4: case 5:\n            return !artSetExclusion[setKey].includes(4)\n          default:\n            throw Error('error in respectSex: num > 5')\n        }\n      })\n      if (!pass) return false\n\n      if (!artSetExclusion['rainbow']) return true\n      const nRainbow = Object.values(skc).reduce((a, b) => a + (b % 2), 0)\n      switch (nRainbow) {\n        case 0: case 1:\n          return true\n        case 2: case 3:\n          return !artSetExclusion['rainbow'].includes(2)\n        case 4: case 5:\n          return !artSetExclusion['rainbow'].includes(4)\n        default:\n          throw Error('error in respectSex: nRainbow > 5')\n      }\n    }\n\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .filter(respectSexExclusion)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useFilters || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      .filter(art => !useFilters || (levelLow <= art.level && art.level <= levelHigh))\n      .map(art => toQueryArtifact(art, 20))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    let nodes = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useFilters, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useFilters && <CardLight>\n                <CardContent sx={{ py: 1 }}>\n                  Artifact Level Filter\n                </CardContent>\n                <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n                  setLow={levelLow => buildSettingDispatch({ levelLow })}\n                  setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n                  setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n                  disabled={false}\n                />\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              }\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useFilters ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useFilters ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useFilters)}>enable filters</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editor />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { sgt } from '../../Data/SheetUtil';\n\nexport default function TravelerElementSelect() {\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { elementKey = \"anemo\", } = character\n\n  if (!(\"talents\" in characterSheet.sheet)) return null\n\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\n    {Object.keys(characterSheet.sheet.talents).map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { allCharacterKeys, CharacterKey } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport LevelSelect from './LevelSelect';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\nimport TravelerElementSelect from './TravelerElementSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation()\n  useTitle(`${t(`char_${characterKey}_gen:name`)} - ${t(`page_character:tabs.${tab}`)}`)\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Box display=\"flex\" >\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n            <CharSelectDropdown />\n            <TravelerElementSelect />\n            <DetailStatButton />\n            <CustomMultiTargetButton />\n            <FormulasButton />\n          </Box>\n          {!!onClose && <CloseButton onClick={onClose} />}\n        </Box>\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          <LevelSelect />\n          <HitModeToggle size=\"small\" />\n          <InfusionAuraDropdown />\n          <ReactionToggle size=\"small\" />\n        </Box>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <CharacterPanel />\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent></FormulaDataWrapper>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const [open, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>Detailed Stats</Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete'\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.weapons.set(weaponId, { location: charKey }), [database, weaponId],)\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        {canEquip\n          ? <CharacterAutocomplete size=\"small\" sx={{ flexGrow: 1 }} disable={(v: any) => v === \"\"}\n            showDefault defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\n            value={location} onChange={equipOnChar} filter={filter} disableClearable />\n          : <LocationName location={location} />}\n        <ButtonGroup>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","import { strPadLeft } from \"./Util\"\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = 60 * SECOND_MS\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\n\nexport function msToUnits(ms: number) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nexport function timeString(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nexport function timeStringMs(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\n","import { WeaponKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nimport i18n from \"../i18n\";\nexport const weaponSortKeys = [\"level\", \"rarity\"]\nexport type WeaponSortKey = typeof weaponSortKeys[number]\n\nexport function weaponSortConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): SortConfigs<WeaponSortKey, ICachedWeapon> {\n  return {\n    level: {\n      getValue: wp => wp.level * wp.ascension ?? 0,\n      tieBreaker: \"rarity\"\n    },\n    rarity: {\n      getValue: wp => weaponSheets?.[wp.key]?.rarity,\n      tieBreaker: \"level\"\n    }\n  }\n}\nexport function weaponFilterConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\n  return {\n    rarity: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.rarity),\n    weaponType: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.weaponType),\n    // TODO: Add types to this. filter may or may not be an array?\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\n  }\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","value","TypeError","l","h","useEffect","sx","width","display","alignItems","bgcolor","onChange","val","clamp","px","pl","undefined","inputProps","textAlign","startAdornment","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","variant","ConditionalSelector","conditional","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","entries","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","color","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","props","children","ml","key","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","description","displayTitle","InfoTooltip","Typography","DisabledButton","styled","theme","backgroundColor","palette","primary","secondary","TextButton","CharSelectDropdown","t","useTranslation","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","show","onHide","onSelect","ThumbSide","src","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","height","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","usePromise","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","KeyMap","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","LevelSelect","setLevel","level","ascension","ascensionMaxLevel","ascenML","setAscension","lowerAscension","contentDark","main","CustomNumberInput","ambiguousLevel","milestoneLevels","lv","as","lvlstr","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","container","spacing","item","Chip","label","allElementsWithPhy","element","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","uncoloredEleIcons","bsProps","xs","md","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","component","href","target","rel","contentLight","type","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","includes","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","elementKey","specialNode","charEle","isMelee","otherStatReadNodes","useMemo","eles","allElements","concat","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","StatIcon","py","Worker_fn","Worker","makeid","disallowed","characters","charactersLength","_","result","charAt","Math","floor","random","Error","readKey","operation","operands","accu","isShallow","f","deleteKey","a","base","flower","forEach","art","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","cmp","foldProd","constant","source","console","log","sum","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","toFold","orig","reduce","todistrib","mapped","pop","prod","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","push","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","set","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","NaN","reduceFormula","allStats","slotArts","rows","mat","dyn","record","Array","fill","selectedPivots","c","pivot","r","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","b","slotKey","allArtifactSets","con","sumM","monomials","flat","prodM","cartesian","monos","ret","nxt","terms","constantM","readM","tag","foldLikeTerms","mono","mon","sort","termsA","termsB","ai","splice","expandPoly","inheritTags","varMap","tagMap","varTags","lookup","hsh","hashNode","z","cmpNode","next","newTag","stat2tag","sop","toSOP","slotsLeft","sCount","fromEntries","slotUsage","filterProductPossible","pivotInplace","A","Aij","findPiv1","minloc","findPiv2","minMax","precompute","compute","mapping","buffer","fillBuffer","minval","toLinearUpperBound","toPureRead","slope","mon1","intercept","op","flippedResOp","flipOps","resf","d","handleResArg","rop","cop","thresh","minVal","maxVal","em","denom","minEM","maxEM","loc","sqrt","below","nodesToMap","t2","nt","lins","err","bounds","nVar","boundScale","scaleProd","soln","cons","coords","objective","Ab","tableau","Ai","cj","ijTrack","ij","targ","side","ncol","backtrack","solveLP","slice","wi","lub","lin","constVal","pv","thresholdExclusions","excl","exc","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","forceRename","affineNodes","topLevelAffine","visit","isAffine","_op","dynKeys","nonConst","assertUnreachable","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","objectMap","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","ranges","range","reads","_f","computeMinMax","minMaxes","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","build","kind","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","ArtifactSheet","document","setEffectDocument","useBuildSetting","characterKey","database","DatabaseContext","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artifactSheets","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","currentContext","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","set4CondNums","setEffects","doc","rarity","defIconSrc","stars","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","useTheme","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","levelVariant","ele","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","LocationIcon","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","Artifact","SubstatDisplay","numRolls","rolls","rollColor","alignContent","CharacterSheet","marginTop","BusinessCenter","OptimizationTargetContext","createContext","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","refinement","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","BuildDisplayItem","index","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","newBuild","chars","equipArtifacts","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","SetToolTipTitle","numInSet","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","mainStatKeys","numSel","mt","cursor","StatFilterCard","defThreads","navigator","hardwareConcurrency","initialTabOptimizeDBState","equipmentPriority","threads","useOptimizeDBState","useDBState","UseEquipped","useEquippedArts","useBoolState","tempEquipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","allMainStatKeys","allSubstatKeys","compactArtifacts","allowPartial","mainStatVal","endsWith","substat","accurateValue","reduceSubProblem","subp","constraints","depth","filters","mins","maxw","minw","unionFilterUpperLower","tagNodePairs","reducedNodes","tagsToKill","newTerms","reducePolynomial","toNumNode","active","newOptTarget","newConstraints","newMins","newArtExcl","feasibleKeys","feasible4sets","feasible2sets","allowedCnts","cnt","reducedExcl","fi","wixs","ws","baseC","li","ixs0","w0","accum","ix","baseBuffer","ixsi","applyLinearForm","newFilters","filterVec","filterIxs","slotVals","filterArtsVec2","minww","maxww","slotUpperLowerVecW","cache","toArtifactBySlotVec","allKeysList","problemSetup","optimizationTargetNode","artSetExclFull","objectKeyValueMap","constraintsEP","opttargetEP","slotUL","slotUpperLowerVec","statsUpperLowerVec","minMaxEst","ixs","ww","baseVal","wtot","minMaxWeightVec","initialProblem","initialReducedProblem","TabBuild","compareData","initGlobalSettings","tcMode","buildStatus","setBuildStatus","setchartData","setArtsDirty","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","numBuilds","currentPageIndex","setCurrentPageIndex","numPages","ceil","maxArtsToShowPerPage","setPageIdx","cancelToken","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","numBuild","_count","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","cantTakeList","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","objPathValue","targetNode","valueFilter","cancelled","Promise","optimize","plotBaseNode","artsVec","masterInfo","ready","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","PageBrowser","pageIdx","setPageIdex","Provider","BuildList","DataContextWrapper","join","providerValue","Pagination","page","CompareBuildButton","artId","onShow","newArt","artmap","dataProviderValue","arrow","Difference","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","weaponFilterConfigs","sortConfigs","weaponSortConfigs","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","sortFunction","star","TextField","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","aid","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","floatCompare","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","colored","whiteSpace","top","Favorite","FavoriteBorder","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","style","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","resonanceSheets","res","desc","titleTypographyProps","activeCharacterDispatch","activeCharacterKey","onClickHandler","dataBundle","teammateCharacterContext","teamMateDataContext","CharacterAutocomplete","charKey","disable","labelText","defaultText","defaultIcon","PersonAdd","showDefault","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","getTalent","sheets","sts","zero_deriv","funct","binding","diff","ddx","ops","da","db","numerator","arg1","arg2","quadrinomials","quadrinomial","nextRow","prev","gaussPDF","mu","sig2","exp","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","slow","calc4th","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","toEval","fo","evalOpt","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","artifacts","gaussConstrained","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","parseFloat","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","CustomTooltip","payload","aspect","margin","Label","offset","angle","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","dot","legendType","tooltipType","activeDot","ReferenceLine","ReferenceDot","shape","radius","direction","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useFilters","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","arti","pageIdex","setpageIdex","invScrollRef","artifactsToShow","toShow","minObj0","maxObj0","thr","setPage","zz","respectSexExclusion","newSK","curEquipSetKeys","skc","equippedArts","curEquip","artUpOpt","upOpt","faCalculator","ShowingArt","numShowing","TravelerElementSelect","sgt","talents","CharacterDisplay","useParams","allCharacterKeys","my","CharacterDisplayCard","charUIData","useMatch","params","tab","useTitle","dataContextValue","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Calculate","BarChart","onModalOpen","onDelete","cs","falseWrapperFunc","equipOnChar","lock","falseWrapper","noWrap","displayVal","disableClearable","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","getValue","wp","tieBreaker","i18n","toLowerCase","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","replace","module","ex","ExitStatus","reason","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","startsWith","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","toString","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","runCaller"],"sourceRoot":""}