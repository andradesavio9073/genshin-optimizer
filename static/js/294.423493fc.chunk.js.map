{"version":3,"file":"static/js/294.423493fc.chunk.js","mappings":"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","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","Formula/solveLP_simplex.ts","Formula/linearUpperBound.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Context/OptimizationTargetContext.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/subproblemUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts","../wasmpack/assembly.js"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => artifactSheets(key).nameRaw}\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets(key).nameRaw}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../Assets/Assets\"\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\nimport CardDark from \"../Card/CardDark\"\nimport CardLight from \"../Card/CardLight\"\nimport CloseButton from \"../CloseButton\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport { StarsDisplay } from \"../StarDisplay\"\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\n\ntype WeaponSelectionModalProps = {\n  show: boolean,\n  ascension?: number,\n  onHide: () => void,\n  onSelect: (wKey: WeaponKey) => void,\n  filter?: (sheet: WeaponSheet) => boolean,\n  weaponTypeFilter?: WeaponTypeKey,\n}\n\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\n\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets(wKey)))\n    .filter(wKey => weaponFilter.includes(weaponSheets(wKey).weaponType))\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\n    .sort((a, b) => weaponSheets(b).rarity - weaponSheets(a).rarity)\n\n  if (!weaponSheets) return null\n\n  return <ModalWrapper open={show} onClose={onHide}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\n          </Grid >\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid >\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {weaponIdList.map(weaponKey => {\n          const weaponSheet = weaponSheets(weaponKey)\n          return <Grid item key={weaponKey} lg={3} md={4}>\n            <CardLight sx={{ height: \"100%\" }} >\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\n                <Box sx={{ flexGrow: 1, px: 1 }}>\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n                </Box>\n              </CardActionArea>\n            </CardLight>\n          </Grid>\n        })}\n      </Grid></CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onHide} />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Button } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterSelectionModal } from '../CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport KeyMap, { valueString } from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\n        <Grid item>\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\n        </Grid>\n        {allElementsWithPhy.map(element => <Grid item key={element}>\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\n        </Grid>)}\n        <Grid item>\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\n        </Grid>\n      </Grid>\n      <ExpandButton\n        expand={expanded}\n        onClick={toggle}\n        aria-expanded={expanded}\n        aria-label=\"show more\"\n        size=\"small\"\n        sx={{ p: 0 }}\n      >\n        <ExpandMore />\n      </ExpandButton>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} IMMUNE</span> :\n    <span >{StatIcon[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport StatIcon from \"../../Components/StatIcon\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\nimport { allElements, ElementKeyWithPhy } from \"../../Types/consts\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  const { t } = useTranslation(\"page_character\")\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = characterSheet.elementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.map(k => input.total[k])\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\n    if (isMelee) eles.concat([\"physical\"])\n\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { cmp, constant, prod, sum } from './utils';\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: NumNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: NumNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return cmp(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands]) as NumNode[]\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands]) as NumNode[]\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: NumNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: NumNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'const' && bval.operation === 'const') {\n          return branch.value >= bval.value ? ge : lt\n        }\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, cmp(br2, bv2, left, right))\n            return cmp(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(cmp(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode } from \"./type\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { ArtSetExclusion } from \"../Database/Data/BuildsettingData\"\n\nexport function foldSum(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) {\n    if (nodes.length === 1) return nodes[0]\n    return sum(...nodes)\n  }\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: NumNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  // f2 = optimize(f2, {})\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => Math.abs(lower[statKey] - upper[statKey]) < 1e-6)\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: NumNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return cmp(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, NumNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: NumNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, NumNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: NumNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n as NumNode)\n  })\n\n  function toSOP(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","function pivotInplace(A: number[][], { i, j }: { i: number, j: number }) {\n  const Aij = A[i][j]\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    for (let k = 0; k < A[0].length; k++) {\n      if (k === j) continue\n      A[h][k] -= A[i][k] * A[h][j] / Aij\n    }\n  }\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    A[h][j] = -A[h][j] / Aij\n  }\n  for (let k = 0; k < A[0].length; k++) {\n    if (k === j) continue\n    A[i][k] = A[i][k] / Aij\n  }\n  A[i][j] = 1 / Aij\n}\n\nfunction findPiv1(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let j = 0; j < c - 1; j++) {\n    if (A[r - 1][j] >= 0) continue\n    for (let i = 0; i < r - 1; i++) {\n      if (A[i][j] > 1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('UNBOUNDED FEASIBLE')\n  }\n\n  if (minloc.i < 0) throw Error('NO PIVOTS (done)')\n  return { i: minloc.i, j: minloc.j }\n}\n\nfunction findPiv2(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let i = 0; i < r - 1; i++) {\n    if (A[i][c - 1] >= 0) continue\n    for (let j = 0; j < c - 1; j++) {\n      if (A[i][j] < -1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('INFEASIBLE')\n    return { i: minloc.i, j: minloc.j }\n  }\n  throw Error('NO PIVOTS (done)')\n}\n\nfunction backtrack(tableau: number[][], ijTrack: { i: number, j: number }[], targ: number) {\n  let side = 1;  // 0 left, 1 right\n  ijTrack.forEach(({ i, j }) => {\n    if (side === 1 && j === targ) {\n      targ = i\n      side = 0\n    }\n    else if (side === 0 && i === targ) {\n      targ = j\n      side = 1\n    }\n  })\n\n  const ncol = tableau[0].length\n  return side === 0 ? tableau[targ][ncol - 1] : 0\n}\n\n/**\n * Solve a Linear Program defined by:\n *              min  c^T x\n *               x\n *   Subject to:     Ax <= b\n *                    x >= 0\n *\n * Implemented according to:\n *   https://www.math.ucla.edu/~tom/LP.pdf\n *\n * Does not implement any cycle detection, though that *shouldnt* a problem for GO's use\n *   case. This algorithm is fairly numerically unstable though, use with care & always\n *   try to verify the solution. It's also a fair bit slower than it needs to be.\n *\n * @param c        Objective vector\n * @param Ab       Constraints matrix with thresholds. Inputted in block form [A, b]\n * @returns        the optimal solution x\n */\nexport function solveLP(c: number[], Ab: number[][]) {\n  let rows = Ab.length + 1\n  let cols = Ab[0].length\n\n  let tableau = Array(rows).fill(0).map(_ => Array(cols).fill(0))\n  Ab.forEach((Ai, i) => Ai.forEach((Aij, j) => tableau[i][j] = Aij))\n  // b.forEach((bi, i) => tableau[i][cols - 1] = bi)\n  c.forEach((cj, j) => tableau[rows - 1][j] = cj)\n  // console.log('tab', tableau)\n\n  let ijTrack: { i: number, j: number }[] = []\n\n  while (tableau.some((t, i) => i < rows - 1 && t[cols - 1] < 0)) {\n    const ij = findPiv2(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  while (tableau[rows - 1].some((t, j) => j < cols - 1 && t < 0)) {\n    const ij = findPiv1(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  return c.map((_, i) => backtrack(tableau, ijTrack, i))\n}\n","import { NumNode } from \"./type\"\nimport { ArtifactsBySlot, ArtifactsBySlotVec, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { ExpandedPolynomial, Monomial, sumM, prodM, constantM, readM, foldLikeTerms } from './expandPoly'\nimport { precompute, allOperations } from \"./optimization\"\nimport { solveLP } from './solveLP_simplex'\nimport { cartesian } from '../Util/Util'\nimport { fillBuffer } from \"./addedUtils\"\n\nexport type LinearForm = {\n  w: DynStat,\n  c: number,\n  err: number\n}\nexport type LinearFormVec = {\n  w: number[],\n  c: number,\n  err: number\n}\n\nfunction minMax(node: NumNode, lower: DynStat, upper: DynStat) {\n  const compute = precompute([node], {}, n => n.path[1], 1)\n  const minval = compute([{ id: '', values: lower }])[0]\n  const maxval = compute([{ id: '', values: upper }])[0]\n  return [minval, maxval]\n}\n\n/**\n * `res` is the ONE place where negative arguments & negative slopes are allowed.\n * @param node\n */\nfunction handleResArg(node: { 'operation': 'res', 'operands': NumNode[] }, lower: DynStat, upper: DynStat) {\n  function flipOps(n: NumNode): NumNode {\n    switch (n.operation) {\n      case 'add':\n        return sum(...n.operands.map(n => flipOps(n)))\n      case 'const':\n        return constant(-n.value)\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (ge.operation === 'const' && lt.operation === 'const') {\n          if (ge.value <= lt.value) {\n            return cmp(branch, bval, -ge.value, -lt.value)\n          }\n        }\n        console.log(n)\n        throw Error('(res neg slope): threshold. Something went wrong.')\n      default:\n        console.log(n)\n        throw Error('(res neg slope) Havent written logic to handle this')\n    }\n  }\n\n  const flippedResOp = flipOps(node.operands[0])\n\n  let [a, b] = minMax(flippedResOp, lower, upper)\n  let resf = allOperations['res']\n  let [c, d] = [resf([-a]), resf([-b])]\n\n  if (b > 0 && a > -1.75) {\n    // 1 + x / 2\n    return sum(1, prod(.5, flippedResOp))\n  }\n\n  const intercept = (b * c - a * d) / (b - a)\n  const slope = (c - d) / (b - a)\n  return sum(intercept, prod(slope, flippedResOp))\n}\n\n/**\n * First converts a product of variables (including max, min, sum_frac, threshold, etc.) to\n *   a pure product form consisting of only `read` and `const` nodes, guaranteeing the\n *   product form is an upper bound.\n *\n * Then on the product form, create a linear upper bound using `lub` and return it.\n *\n * @param node The formula to expand\n * @param lower Stat lower bounds\n * @param upper Stat upper bounds\n * @returns\n */\nexport function toLinearUpperBound({ nodes, terms }: ExpandedPolynomial, lower: DynStat, upper: DynStat): LinearForm {\n  let stat2tag = {} as Dict<string, string>\n  Object.entries(nodes).forEach(([tag, n]) => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = tag\n  })\n\n  let linerr = 0\n  function toPureRead(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'const':\n        return constantM(n.value)\n      case 'read':\n        return readM(stat2tag[n.path[1]]!)\n      case 'add':\n        return sumM(...n.operands.map(toPureRead))\n      case 'mul':\n        return prodM(...n.operands.map(toPureRead))\n\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read' && bval.operation === 'const'\n          && lt.operation === 'const' && ge.operation === 'const') {\n          if (ge.value < lt.value) {\n            console.log(n)\n            throw Error('Not Implemented (threshold must be increasing)')\n          }\n\n          let key = branch.path[1]\n          if (lower[key] >= bval.value) return constantM(ge.value)\n          if (upper[key] < bval.value) return constantM(lt.value)\n\n          const slope = (ge.value - lt.value) / (bval.value - lower[key])\n          const mon1 = prodM(constantM(slope), readM(stat2tag[branch.path[1]]!))\n\n          const intercept = lt.value - slope * lower[key]\n          if (intercept === 0) return mon1\n          return sumM(constantM(intercept), mon1)\n          // if (lt.value === 0) return mon1\n          // return sumM(constantM(lt.value), mon1)\n        }\n        console.log(n)\n        throw Error('Not Implemented (threshold must branch between constants)')\n      case 'res':\n        let op = handleResArg(n as { 'operation': 'res', 'operands': NumNode[] }, lower, upper)\n        return toPureRead(op)\n\n      case 'min': case 'max':\n        let [rop, cop] = n.operands\n        if (cop.operation !== 'const')\n          [rop, cop] = [cop, rop]  // Assume min(const, read)\n        if (n.operation === 'min') return toPureRead(rop)\n\n        if (cop.operation === 'const') {\n          const thresh = cop.value\n          const [minVal, maxVal] = minMax(rop, lower, upper)\n          if (minVal > thresh) return toPureRead(rop)\n          if (thresh > maxVal) return constantM(thresh)\n\n          // rescale `rop` to be above thresh, since max(f, 0) is a convex function\n          const m = (maxVal - thresh) / (maxVal - minVal)\n          const b = thresh - m * minVal\n          return sumM(constantM(b), prodM(constantM(m), toPureRead(rop)))\n        }\n        console.log(n)\n        throw Error('Not Implemented (max between two non-constants)')\n\n      case 'sum_frac':\n        const [em, denom] = n.operands\n        if (denom.operation !== 'const') throw Error('Not Implemented (non-constant sum_frac denominator)')\n\n        const [minEM, maxEM] = minMax(em, lower, upper)\n        const k = denom.value\n        // The sum_frac form is concave, so any Taylor expansion of EM / (EM + k) gives an upper bound.\n        // We can solve for the best Taylor approximation location with the following formula.\n        let loc = Math.sqrt((minEM + k) * (maxEM + k)) - k\n        let below = (k + loc) * (k + loc)\n        let slope = k / below\n        let c = loc * loc / below\n\n        // TODO: update linerr\n        return sumM(constantM(c), prodM(constantM(slope), toPureRead(em)))\n\n      default:\n        console.log(n)\n        throw Error('Not Implemented')\n    }\n  }\n\n  // 1. Turn all nodes into linear upper bounds\n  const nodesToMap = Object.fromEntries(Object.entries(nodes).filter(([tag, n]) => n.operation !== 'read').map(([tag, n]) => [tag, toPureRead(n)]))\n\n  // 2. substitute into `terms` and construct a new SOPForm whose nodes are all pure read nodes\n  let t2 = terms.flatMap(({ coeff, terms }) => prodM(constantM(coeff), ...terms.map(t => nodesToMap[t] ?? readM(t))))\n  t2 = foldLikeTerms(t2)\n\n  // 2.5 Re-name all the tags to their read node version\n  t2 = t2.map(({ coeff, terms }) => {\n    terms = terms.map(t => {\n      const nt = nodes[t]\n      if (!nt || nt.operation !== 'read') throw Error('MUST be a read node.')\n      return nt.path[1]\n    })\n    return { coeff, terms }\n  })\n\n  // 3. call lub() on each term\n  const lins = t2.map(({ coeff, terms }) => {\n    if (terms.length === 0) return { w: {}, c: coeff, err: 0 }\n    if (terms.length === 1) return { w: { [terms[0]]: coeff }, c: 0, err: 0 }\n    const { w, c, err } = lub(terms.map(k => ({ lower: lower[k], upper: upper[k] })))\n    const retw = w.reduce((ret, wi, i) => {\n      ret[terms[i]] = wi * coeff + (ret[terms[i]] ?? 0)\n      return ret\n    }, {} as DynStat)\n    return { w: retw, c: coeff * c, err: coeff * err + linerr }\n  })\n\n  return lins.reduce((lin, l) => {\n    lin.c += l.c; lin.err += l.err\n    Object.entries(l.w).forEach(([k, v]) => lin.w[k] = v + (lin.w[k] ?? 0))\n    return lin\n  }, { w: {}, c: 0, err: 0 })\n}\n\n/**\n * Constructs an upper bounding linear form for a function x_1 * x_2 * ... * x_n\n * @param bounds upper and lower bounds for each x_i\n * @returns { w, c, err } with\n */\nfunction lub(bounds: { lower: number, upper: number }[]): { w: number[], c: number, err: number } {\n  if (bounds.length === 0) return { w: [], c: 0, err: 0 }\n  const nVar = bounds.length\n\n  // Re-scale bounds to [0, 1] for numerical stability.\n  const boundScale = bounds.map(({ upper }) => upper)\n  const scaleProd = boundScale.reduce((prod, v) => prod * v, 1)\n  bounds = bounds.map(({ lower, upper }) => ({ lower: lower / upper, upper: 1 }))\n\n  // Setting up the linear program in terms of constraints.\n  let cons = cartesian(...bounds.map(({ lower, upper }) => [lower, upper])).flatMap((coords) => {\n    const prod = coords.reduce((prod, v) => prod * v, 1)\n    return [\n      [...coords.map(v => -v), 1, 0, -prod],\n      [...coords, -1, -1, prod],\n    ]\n  })\n\n  // Force equality at upper & lower corners?\n  // cons.push([...bounds.map(lu => lu.lower), -1, 0, bounds.reduce((prod, { lower }) => prod * lower, 1)])\n  // cons.push([...bounds.map(lu => lu.upper), -1, 0, bounds.reduce((prod, { upper }) => prod * upper, 1)])\n\n  let soln: any\n  const objective = [...bounds.map(_ => 0), 0, 1]\n  try {\n    // TODO: verify solution\n    soln = solveLP(objective, cons)\n  }\n  catch (e) {\n    console.log('ERROR on bounds', bounds)\n    console.log('Possibly numerical instability issue.')\n    throw e\n  }\n  return {\n    w: soln.slice(0, nVar).map((wi, i) => wi * scaleProd / boundScale[i]),\n    c: -scaleProd * soln[nVar],\n    err: scaleProd * soln[nVar + 1]\n  }\n}\n\nexport function maxWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMax([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((maxTotVal, [slotKey, slotArts]) => maxTotVal + sparseMatmulMax([lin], slotArts.map(a => a.values))[0], 0)\n}\nexport function minWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMin([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((minTotVal, [slotKey, slotArts]) => minTotVal + sparseMatmulMin([lin], slotArts.map(a => a.values))[0], 0)\n}\n\nexport function maxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  return Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n}\nexport function minMaxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  const maxw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n\n  const minw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.min(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n  return { minw, maxw }\n}\n\n\n\n// Implement matrix multiply between row-major w's of LinearForm and col-major DynStats that represent artifacts.\n/**\n * Implements sparse matrix multiplication between A and x\n * @param A A list of row-major w's of some LinearForm\n * @param x A list of col-major DynStats that represent some artifacts\n * @returns A col-major 2d array number[][] with shape (A.length, x.length).\n *          ret[0] is [A1 @ x1, A2 @ x1, ..., An @ x1]\n */\nexport function sparseMatmul(A: LinearForm[], x: DynStat[]) {\n  return x.map(dyn => A.map(({ w }) => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0)))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a max() along the rows.\n */\nexport function sparseMatmulMax(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.max(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a min() along the rows.\n */\nexport function sparseMatmulMin(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.min(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype DynMinMax = { [key in string]: MinMax }\ntype MinMax = { min: number, max: number }\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\n\n  function visit(node: NumNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(_op => {\n      const op = _op as NumNode\n      affineNodes.has(op) && topLevelAffine.add(op)\n    })\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const operation = f.operation\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\":\n        if (typeof f.value === \"string\" || f.value === undefined)\n          throw new Error(`Found constant ${f.value} while compacting`)\n        visit(f as NumNode, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return f.operands[3]\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\n  const range = new Map<NumNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, _f => {\n    const f = _f as NumNode\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"subscript\": current = computeMinMax(f.list); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = operands[3]\n        else current = computeMinMax([], [operands[2], operands[3]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      case \"data\": case \"lookup\": case \"match\":\n        throw new Error(`Unsupported ${operation} node`)\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArtsVec(arts: ArtifactsBySlotVec, filters: RequestFilter): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArts2(arts: ArtifactsBySlot, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function filterArtsVec2(arts: ArtifactsBySlotVec, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\n\nexport type ArtifactBuildDataVecDense = {\n  id: string\n  set?: ArtifactSetKey\n  values: number[]\n  buffer: number[]\n}\n// I dont *think* its worth it to implement sparse vectors n shit\n// export type ArtifactBuildDataVecSparse = {\n//   id: string\n//   set?: ArtifactSetKey\n//   values: number[][]\n// }\nexport type ArtifactsBySlotVec = { keys: string[], base: number[], values: StrictDict<SlotKey, ArtifactBuildDataVecDense[]>, baseBuffer: number[] }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useContext } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport useGender from \"../../ReactHooks/useGender\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const { database } = useContext(DatabaseContext)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { DatabaseContext } from \"../../Database/Database\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from \"../../KeyMap\";\nimport useGender from \"../../ReactHooks/useGender\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\nimport { LocationKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon from \"../StatIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\n        <span>{StatIcon[node.info.key]}</span>\n      </BootstrapTooltip>\n      <span>{val}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: LocationKey }) {\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ArtifactSlotKey } from 'pipeline';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, charKeyToLocCharKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtons?: JSX.Element\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    allSlotKeys.forEach(s => {\n      const aid = data.get(input.art[s].id).value\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\n    })\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = data.get(input.art[slotKey].id).value!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <SetBadges currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\n          {extraButtons}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\n  const { data } = useContext(DataContext)\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n  )}</>\n\n}\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography >{t`tcGraph.vs`}</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton size='small' title={plotBase ? KeyMap.get(plotBase) : t`tcGraph.notSel`}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>{t`ui:unselect`}</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showMinStatThr`}</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name={t`tcGraph.optTarget`} dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name={t`tcGraph.minStatReqThr`} dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { input } from \"../../../../../Formula\"\nimport { StatKey } from \"../../../../../KeyMap\"\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\nimport useBuildSetting from \"../useBuildSetting\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\n\n  const statKeys = useMemo(() => {\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n    const charEle = data.get(input.charEle).value as ElementKey\n    statKeys.push(`${charEle}_dmg_`)\n    return statKeys\n  }, [data])\n\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport { initialTabOptimizeDBState } from \"../../../../../Database/Data/StateData\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport useDBState from \"../../../../../ReactHooks/useDBState\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport { CharacterSelectionModal } from \"../../../../CharacterSelectionModal\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useDBState(\"TabOptimize\", initialTabOptimizeDBState)\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\"\nimport { reducePolynomial } from \"../../../../Formula/addedUtils\"\nimport { ExpandedPolynomial, expandPoly, toNumNode } from \"../../../../Formula/expandPoly\"\nimport { LinearForm, minMaxWeightVec, toLinearUpperBound } from \"../../../../Formula/linearUpperBound\"\nimport { precompute } from \"../../../../Formula/optimization\"\nimport { NumNode } from \"../../../../Formula/type\"\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\"\nimport { objectKeyMap, objectKeyValueMap, range } from \"../../../../Util/Util\"\nimport { ArtifactBuildDataVecDense, ArtifactsBySlot, ArtifactsBySlotVec, DynStat, filterArtsVec2, RequestFilter } from \"./common\"\n\nexport type UnionFilter = {\n  uType: true\n  filters: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>[]\n} | (RequestFilter & { uType: false })\n\nexport type RequestFilter2 = {\n  // filter: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>,\n  filterVec: StrictDict<SlotKey, number[]>,  // dict of list of indices (for some particular ArtifactsBySetVec)\n  lower: number[],  // length `k` list of lower bound stats\n  upper: number[],  // length `k` list of upper bound stats\n  minw: number[],   // length `l` list of minimum upper bound estimates\n  maxw: number[],   // length `l` list of maximum upper bound weights\n}\nexport type UnionFilter2 = RequestFilter2[]\nexport type ArtSetExclusionFull = Dict<Exclude<ArtifactSetKey, \"PrayersForDestiny\" | \"PrayersForIllumination\" | \"PrayersForWisdom\" | \"PrayersToSpringtime\"> | \"uniqueKey\", number[]>\n// export type SubProblem = SubProblemNC | SubProblemWC\nexport type SubProblem = SubProblemWC\nexport type SubProblemNC = {\n  cache: false,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  depth: number,\n}\nexport type SubProblemWC = {\n  cache: true,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  lin: LinearForm[],\n  // cachedCompute: CachedCompute,\n  depth: number,\n}\nexport type CachedCompute = {\n  maxEst: number[],\n  lin: LinearForm[],\n  lower: DynStat,\n  upper: DynStat\n}\n\nexport function countBuildsU(f: UnionFilter2): number {\n  return f.reduce((tot, { filterVec }) => tot + allSlotKeys.reduce((_count, slot) => _count * filterVec[slot].length, 1), 0)\n}\n\nexport function unionFilterUpperLower(f: UnionFilter2) {\n  const lower = [...f[0].lower]\n  const upper = [...f[0].upper]\n  const minw = [...f[0].minw]\n  const maxw = [...f[0].maxw]\n\n  for (let i = 1; i < f.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], f[i].lower[j])\n      upper[j] = Math.max(upper[j], f[i].upper[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], f[i].minw[j])\n      maxw[j] = Math.max(maxw[j], f[i].maxw[j])\n    }\n  }\n\n  return { lower, upper, minw, maxw }\n}\n\nexport function applyLinearForm(arts: ArtifactsBySlotVec, lin: LinearForm[]) {\n  const wixs: number[][] = []\n  const ws: number[][] = []\n  const baseC: number[] = []\n  lin.forEach(li => {\n    const ixs0: number[] = []\n    const w0: number[] = []\n    Object.entries(li.w).forEach(([k, w]) => {\n      ixs0.push(arts.keys.indexOf(k))\n      w0.push(w)\n    })\n    wixs.push(ixs0)\n    ws.push(w0)\n\n    baseC.push(ixs0.reduce((accum, ix, i) => accum + arts.base[ix] * w0[i], li.c))\n  })\n\n  arts.baseBuffer = baseC\n  allSlotKeys.forEach(slotKey => arts.values[slotKey].forEach(art =>\n    art.buffer = wixs.map((ixsi, i) => ixsi.reduce((accum, ix, j) => accum + art.values[ix] * ws[i][j], 0))\n  ))\n}\n\nexport function reduceSubProblem(arts: ArtifactsBySlotVec, threshold: number, subp: SubProblem): SubProblemWC | undefined {\n  const { optimizationTarget, constraints, artSetExclusion, depth } = subp\n  let { filters } = subp\n  let nodes = [...constraints.map(({ value }) => value), optimizationTarget]\n  const mins = constraints.map(({ min }) => min)\n\n  // 0. Check for never-feasible constraints\n  filters = filters.filter(({ maxw }) => {\n    if (mins.some((min, j) => maxw[j] < min)) return false\n    if (maxw[mins.length] < threshold) return false\n    return true\n  })\n  if (filters.length === 0) return undefined\n\n  // 0b. Calculate stat bounding box\n  const { lower, upper } = unionFilterUpperLower(filters)\n  const statsMin: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, lower[i]])))\n  const statsMax: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, upper[i]])))\n\n  nodes = reducePolynomial(nodes, statsMin, statsMax)\n\n  // 1. Check for always-feasible constraints.\n  const compute = precompute(constraints.map(({ value }) => toNumNode(value)), {}, n => n.path[1], 1)\n  const result = compute([{ id: '', values: statsMin }])\n\n  const active = mins.map((m, i) => m > result[i])\n\n  const newOptTarget = nodes.pop()!\n  const newConstraints = nodes.map((value, i) => ({ value, min: mins[i] })).filter((_, i) => active[i])\n  const newMins = newConstraints.map(({ min }) => min)\n\n  // 2. Check for never-active and always-active ArtSetExcl constraints.\n  const newArtExcl = {} as ArtSetExclusionFull\n  for (const [setKey, exclude] of Object.entries(artSetExclusion)) {\n    if (setKey === 'uniqueKey') {\n      // TODO: Check and exclude rainbow bullshit.\n      newArtExcl[setKey] = exclude\n      const feasibleKeys = allArtifactSets.filter(setKey => statsMax[setKey] > 0)\n      let feasible4sets = 0\n      let feasible2sets = 0\n      feasibleKeys.forEach(k => {\n        let allowedCnts = range(statsMin[k], statsMax[k])\n        if (artSetExclusion[k])\n          allowedCnts = allowedCnts.filter(cnt => !artSetExclusion[k].includes(cnt))\n\n        if (allowedCnts.includes(4) || allowedCnts.includes(5)) feasible4sets++\n        if (allowedCnts.includes(2) || allowedCnts.includes(3)) feasible2sets++\n      })\n\n      if (exclude.includes(5) && feasible4sets === 0) {\n        if (feasible2sets === 0) return; // No feasible 4sets or 2sets along with rainbow5 excluded is never satisfiable\n        if (exclude.includes(3) && feasible2sets < 2) return; // No 4sets, rainbow5 excluded, rainbow3 excluded means we need at least 2 2sets\n      }\n      continue\n    }\n    const reducedExcl = exclude.filter(n => statsMin[setKey] <= n && n <= statsMax[setKey])        // Cut away never-active\n    if (reducedExcl.includes(statsMin[setKey]) && reducedExcl.includes(statsMax[setKey])) return;  // Always active.\n    if (reducedExcl.length > 0) newArtExcl[setKey] = reducedExcl\n  }\n\n  // 3. Estimate Upper Bounds and re-check for never-feasible constraints\n  let f = [...newConstraints.map(({ value }) => value), newOptTarget]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  applyLinearForm(arts, lin)\n  const newFilters = filters\n    .map(filter => {\n      const { filterVec, lower, upper } = filter\n      const a = filterArtsVec2(arts, filter.filterVec)  // CANDIDATE for making this more efficient\n      const minww = [...a.baseBuffer]\n      const maxww = [...a.baseBuffer]\n      allSlotKeys.forEach(slotKey => {\n        const { minw, maxw } = slotUpperLowerVecW(a.values[slotKey])\n        for (let j = 0; j < minww.length; j++) {\n          minww[j] += minw[j]\n          maxww[j] += maxw[j]\n        }\n      })\n      return {\n        filterVec, lower, upper,\n        minw: minww, maxw: maxww,\n      }\n    })\n    .filter(({ maxw }) => {\n      if (newMins.some((min, j) => maxw[j] < min)) return false\n      if (maxw[mins.length] < threshold) return false\n      return true\n    })\n\n  return {\n    cache: true,\n    optimizationTarget: newOptTarget,\n    constraints: newConstraints,\n    artSetExclusion: newArtExcl,\n\n    depth, lin, filters: newFilters\n  }\n}\n\nexport function toArtifactBySlotVec(arts: ArtifactsBySlot): ArtifactsBySlotVec {\n  const allKeys = new Set(Object.keys(arts.base))\n  Object.values(arts.values).forEach(slotArts => {\n    slotArts.forEach(art => {\n      if (art.set) allKeys.add(art.set)\n      Object.keys(art.values).forEach(k => allKeys.add(k))\n    })\n  })\n\n  const allKeysList = [...allKeys]\n  const keys = [...allKeysList.filter(k => !(allArtifactSets as readonly string[]).includes(k)), ...allKeysList.filter(k => (allArtifactSets as readonly string[]).includes(k))]\n\n  return {\n    keys, baseBuffer: [],\n    base: keys.map(k => arts.base[k] ?? 0),\n    values: {\n      flower: arts.values.flower.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      plume: arts.values.plume.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      sands: arts.values.sands.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      goblet: arts.values.goblet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      circlet: arts.values.circlet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n    }\n  }\n}\n\ntype ProblemSetup = {\n  optimizationTargetNode: NumNode,\n  nodes: NumNode[],\n  minimum: number[],\n  artSetExclusion: ArtSetExclusion\n}\nexport function problemSetup(arts: ArtifactsBySlotVec, { optimizationTargetNode, nodes, minimum, artSetExclusion }: ProblemSetup): SubProblemWC {\n  const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n    if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n    return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n  })\n\n  const constraintsEP = nodes\n    .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n    .filter(x => x.min > -Infinity)\n  const opttargetEP = expandPoly(optimizationTargetNode)\n\n  const { lower, upper } = statsUpperLowerVec(arts)\n  const statsMin = Object.fromEntries(arts.keys.map((k, i) => [k, lower[i]]))\n  const statsMax = Object.fromEntries(arts.keys.map((k, i) => [k, upper[i]]))\n  let f = [...constraintsEP.map(({ value }) => value), opttargetEP]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  const minMaxEst = lin.map(li => minMaxWeightVec(arts, li))\n\n  console.log('-----------------------------------------------------------------------')\n  console.log('lin', lin)\n  console.log('-----------------------------------------------------------------------')\n\n  const filterVec = objectKeyMap(allSlotKeys, slotKey => {\n    return arts.values[slotKey].map((v, i) => i)\n  })\n\n  const initialProblem: SubProblemWC = {\n    cache: true,\n    optimizationTarget: opttargetEP,\n    constraints: constraintsEP,\n    artSetExclusion: artSetExclFull,\n\n    filters: [{\n      filterVec, lower, upper,\n      maxw: minMaxEst.map(({ maxw }) => maxw),\n      minw: minMaxEst.map(({ minw }) => minw),\n    }],\n    depth: 0,\n    lin,\n  }\n  const initialReducedProblem = reduceSubProblem(arts, -Infinity, initialProblem)\n  console.log(initialReducedProblem)\n\n  const statsBase = Object.fromEntries(arts.keys.map((k, i) => [k, arts.base[i]]))\n  evaluateExpandedPolynomial(opttargetEP, statsBase)\n\n  if (initialReducedProblem === undefined)\n    return initialProblem\n  return initialReducedProblem\n}\n\nexport function slotUpperLowerVec(arts: ArtifactBuildDataVecDense[]) {\n  const lower = [...arts[0].values]\n  const upper = [...arts[0].values]\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], arts[i].values[j])\n      upper[j] = Math.max(upper[j], arts[i].values[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { lower, upper, minw, maxw }\n}\nexport function slotUpperLowerVecW(arts: ArtifactBuildDataVecDense[]) {\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { minw, maxw }\n}\nexport function statsUpperLowerVec(a: ArtifactsBySlotVec) {\n  const lower = [...a.base]\n  const upper = [...a.base]\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVec(slotArts)\n    for (let i = 0; i < lower.length; i++) {\n      lower[i] += slotUL.lower[i]\n      upper[i] += slotUL.upper[i]\n    }\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { lower, upper, minw, maxw }\n}\nexport function statsUpperLowerVecW(a: ArtifactsBySlotVec) {\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVecW(slotArts)\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { minw, maxw }\n}\nexport function evaluateExpandedPolynomial(poly: ExpandedPolynomial, x: DynStat) {\n  // 1. evaluate each component node\n  const nodeVals = Object.fromEntries(Object.entries(poly.nodes).map(([fk, f]) => {\n    const compute = precompute([f], {}, n => n.path[1], 1);\n    return [fk, compute([{ id: '', values: x }])[0]]\n  }))\n\n  const termVals = poly.terms.map(({ coeff, terms }) => coeff * terms.reduce((v, t) => v * nodeVals[t], 1))\n  console.log('Value of {poly(x)}: ', termVals.reduce((a, b) => a + b))\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography, Pagination } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink } from 'react-router-dom';\n// eslint-disable-next-line\n\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { defThreads, initialTabOptimizeDBState } from '../../../../Database/Data/StateData';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport KeyMap from '../../../../KeyMap';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useDBState from '../../../../ReactHooks/useDBState';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { countBuildsU, problemSetup, SubProblem, toArtifactBySlotVec } from './subproblemUtil';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useDBState(\"TabOptimize\", initialTabOptimizeDBState)\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\n  const numBuilds = buildsArts.length\n\n  const [currentPageIndex, setCurrentPageIndex] = useState(0)\n  const { numPages } = useMemo(() => {\n    return { numPages: Math.ceil(numBuilds / maxArtsToShowPerPage) }\n  }, [numBuilds])\n  const setPageIdx = useCallback((e, value: number) => {\n    setCurrentPageIndex(value - 1)\n  }, [setCurrentPageIndex])\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    const targetNode = optimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      nodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // Can be further folded after pruning\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    optimizationTargetNode = nodes.pop()!\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const constraints = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const artsVec = toArtifactBySlotVec(arts)\n    const initialProblem = problemSetup(artsVec, { optimizationTargetNode, nodes, minimum, artSetExclusion })\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 5\n    const minFilterCount = 2_000 // Don't split for single worker\n    // const maxRequestFilterInFlight = maxWorkers * 4\n    const maxRequestFilterInFlight = 1\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    // const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1].val }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuildsU(subproblem.filters)\n      // let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1].val, subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1].val, minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\n      workers.push(worker)\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts, artsVec,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters: constraints\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              // wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n      setCurrentPageIndex(0)\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority, setCurrentPageIndex])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Box>\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\n              </Box>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>{t`levelFilter`}</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<TrendingUp />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} pageIdx={currentPageIndex} />\n      </OptimizationTargetContext.Provider>\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n    </DataContext.Provider>}\n  </Box>\n}\n\nconst maxArtsToShowPerPage = 5\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled, pageIdx }: {\n  buildsArts: ICachedArtifact[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n  pageIdx: number,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {buildsArts?.slice(maxArtsToShowPerPage * pageIdx, maxArtsToShowPerPage * (pageIdx + 1))\n      .map((build, index) => characterKey && data && <DataContextWrapper\n        key={index + build.join()}\n        characterKey={characterKey}\n        build={build}\n        oldData={data}\n      >\n        <BuildDisplayItem index={maxArtsToShowPerPage * pageIdx + index} compareBuild={compareData} disabled={disabled} />\n      </DataContextWrapper>\n      )}\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled, pageIdx])\n  return list\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: ICachedArtifact[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n\nfunction PageBrowser({ numPages, pageIdx, setPageIdex }: {\n  numPages: number,\n  pageIdx: number,\n  setPageIdex: (e: any, n: number) => void\n}) {\n  return <CardDark ><CardContent>\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Pagination count={numPages} page={pageIdx + 1} onChange={setPageIdex} />\n      </Grid>\n      <Grid item>\n        page {pageIdx + 1} / {numPages}\n        {/* <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} /> */}\n      </Grid>\n    </Grid>\n  </CardContent></CardDark>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap).filter(a => a)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n      <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n    </DataContext.Provider>}\n  </Suspense>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { initCharMeta } from '../../../../Database/Data/StateData';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { initCharMeta } from \"../../../../Database/Data/StateData\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <Box>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </Box>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from 'react';\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { CardContent, CardHeader, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { initCharMeta } from \"../../../Database/Data/StateData\";\nimport { DatabaseContext } from \"../../../Database/Database\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport useGender from \"../../../ReactHooks/useGender\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={(n.info.key ?? \"\") + i} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { t } = useTranslation(\"page_character\")\n  const { data } = useContext(DataContext)\n  const { character: { team } } = useContext(CharacterContext)\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\n  return <>\n    <CardLight>\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\n    </CardLight>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\n  const onClickHandler = useCharSelectionCallback()\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\n      setChar={setTeammate}\n      label={t(\"teammate\", { count: index + 1 })}\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n\nfunction TeammateAutocomplete({ characterKey, team, label, setChar }: { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void }) {\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\n  const isFavorite = useCallback((key: CharacterKey) => database.states.getWithInit(`charMeta_${key}`, initCharMeta).favorite, [database])\n  const onDisable = useCallback((key: CharacterKey | \"\") => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\n    key: \"\",\n    label: t`page_character:none`,\n  },\n  ...database.chars.keys\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} disable={onDisable} toImg={toImg} /></Suspense>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Stack, ToggleButton, Typography } from \"@mui/material\";\nimport { WeaponTypeKey } from \"pipeline\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ColorText from \"../../../../Components/ColoredText\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponSelectionModal from \"../../../../Components/Weapon/WeaponSelectionModal\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/Data/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      Object.values(character.equippedArtifacts).forEach(a => {\n        const art = database.arts.get(a)\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat => {\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        })\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n\n      setData(newData)\n    },\n    [database, data, character.equippedArtifacts, character.equippedWeapon, setData],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const overriderArtData = useMemo(() => {\n    const stats = { ...data.artifact.substats.stats }\n    Object.values(data.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(data.artifact.sets, v => constant(v)),\n    }\n  }, [data])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [charUIData, teamData, compareData, oldData])\n\n  return <Stack spacing={1}>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Box>\n        <CardLight>\n          <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n            <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n              <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n              <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n            </Box>\n            <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup>\n          </Box>\n        </CardLight>\n      </Box>\n      <Box>\n        <Grid container spacing={1} sx={{ justifyContent: \"center\" }} columns={4}>\n          <Grid item sx={{ flexGrow: -1 }}  >\n            <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          </Grid>\n          <Grid item sx={{ flexGrow: 1 }}  >\n            <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n          </Grid>\n          <Grid item sx={{ flexGrow: 1 }}  >\n            <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\n          </Grid>\n        </Grid >\n      </Box>\n      <CardLight sx={{ flexGrow: 1, p: 1 }}>\n        <StatDisplayComponent />\n      </CardLight>\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />}\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, height: \"100%\" }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} sx={{ height: \"100%\" }}>\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const unit = KeyMap.unit(statKey)\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const rv = value / Artifact.substatValue(statKey) * 100\n  const rolls = value / substatValue\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\n  const maxRolls = (5 - numMains) * 6\n  const invalid = rolls > maxRolls\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n    </CardDark>\n    <CustomNumberInput\n      color={value ? \"success\" : \"primary\"}\n      float={KeyMap.unit(statKey) === \"%\"}\n      endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n      value={parseFloat(value.toFixed(2))}\n      onChange={v => v !== undefined && setValue(v)}\n      sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n      inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n    <CustomNumberInput\n      color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\n      float\n      startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n      value={parseFloat(rolls.toFixed(2))}\n      onChange={v => v !== undefined && setValue(v * substatValue)}\n      sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n      inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\n      <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n        <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n      </CardDark>\n    </BootstrapTooltip>\n  </Box>\n\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute } from \"./optimization\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): NumNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return { operation: \"sum_frac\", operands: [numerator, sum(prod(numerator, -1), denom)] }\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return cmp(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return cmp(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n\n      break\n    case \"threshold\":\n      const [value, threshold, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(threshold, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return cmp(value, threshold, ddx(pass, binding, diff), ddx(fail, binding, diff))\n\n    case \"match\": case \"lookup\": case \"subscript\": case \"data\":\n      throw new Error(`Unsupported [${operation}] node in ddx`)\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"info\": { \"key\": \"TenacityOfTheMillelith\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"hp_\", \"source\": \"TenacityOfTheMillelith\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"info\": { \"key\": \"ShimenawasReminiscence\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"atk_\", \"source\": \"ShimenawasReminiscence\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"info\": { \"key\": \"WanderersTroupe\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"eleMas\", \"source\": \"WanderersTroupe\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"eleMas\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"info\": { \"key\": \"CrimsonWitchOfFlames\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"vaporize_dmg_\", \"variant\": \"vaporize\", \"source\": \"CrimsonWitchOfFlames\" }, \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1\n\n  const compute = precompute([formula2], {}, f => f.path[1], 1)\n\n  var result = compute([{ id: '', values: stats }])[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  var res2 = compute([{ id: '', values: stat2 }])[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  const c_dhp_ = precompute([dhp_], {}, f => f.path[1], 1)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  const c_dhp = precompute([dhp], {}, f => f.path[1], 1)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  const c_datk_ = precompute([datk_], {}, f => f.path[1], 1)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['atk'] = eps + (stat2['atk'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var datk = ddx(formula2, f => f.path[1], 'atk')\n  const c_datk = precompute([datk], {}, f => f.path[1], 1)\n  console.log('diff atk (numeric/symbolic)', (res2 - result) / eps, c_datk([{ id: '', values: stats }])[0])\n\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  const c_deleMas = precompute([deleMas], {}, f => f.path[1], 1)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas([{ id: '', values: stats }])[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, 5) / 1000 : Artifact.substatValue(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, art.rarity) / 1000 : Artifact.substatValue(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: NumNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: NumNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n\n  const evalFn = precompute(evalOpt, {}, f => f.path[1], 1)\n  let stats = toStats(curBuild)\n  const dmg0 = evalFn([{ id: '', values: stats }])[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    const out = evalFn([{ id: '', values: stats }])\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database.arts.get(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../TabOptimize/Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objectKeyMap, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { DynStat } from '../TabOptimize/common';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useFilters, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys, levelLow, levelHigh, artSetExclusion } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const equippedArts = database.chars.get(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    const curEquip: QueryBuild = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art ? toQueryArtifact(art) : undefined\n    })\n    const curEquipSetKeys = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art?.setKey ?? ''\n    })\n    function respectSexExclusion(art: ICachedArtifact) {\n      const newSK = { ...curEquipSetKeys }\n      newSK[art.slotKey] = art.setKey\n      const skc: DynStat = {}\n      allSlotKeys.forEach(slotKey => skc[newSK[slotKey]] = (skc[newSK[slotKey]] ?? 0) + 1)\n      let pass = Object.entries(skc).every(([setKey, num]) => {\n        if (!artSetExclusion[setKey]) return true\n        switch (num) {\n          case 0: case 1:\n            return true\n          case 2: case 3:\n            return !artSetExclusion[setKey].includes(2)\n          case 4: case 5:\n            return !artSetExclusion[setKey].includes(4)\n          default:\n            throw Error('error in respectSex: num > 5')\n        }\n      })\n      if (!pass) return false\n\n      if (!artSetExclusion['rainbow']) return true\n      const nRainbow = Object.values(skc).reduce((a, b) => a + (b % 2), 0)\n      switch (nRainbow) {\n        case 0: case 1:\n          return true\n        case 2: case 3:\n          return !artSetExclusion['rainbow'].includes(2)\n        case 4: case 5:\n          return !artSetExclusion['rainbow'].includes(4)\n        default:\n          throw Error('error in respectSex: nRainbow > 5')\n      }\n    }\n\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .filter(respectSexExclusion)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useFilters || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      .filter(art => !useFilters || (levelLow <= art.level && art.level <= levelHigh))\n      .map(art => toQueryArtifact(art, 20))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    let nodes = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useFilters, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useFilters && <CardLight>\n                <CardContent sx={{ py: 1 }}>\n                  Artifact Level Filter\n                </CardContent>\n                <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n                  setLow={levelLow => buildSettingDispatch({ levelLow })}\n                  setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n                  setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n                  disabled={false}\n                />\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              }\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useFilters ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useFilters ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useFilters)}>enable filters</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editor />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { sgt } from '../../Data/SheetUtil';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\n\nexport default function TravelerElementSelect() {\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const setCharacter = useCharSelectionCallback()\n  if (!(key.startsWith(\"Traveler\"))) return null\n\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\n\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\n    {travelerElements.map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { Female, Male } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport useGender from '../../ReactHooks/useGender';\n\nexport default function TravelerGenderSelect() {\n  const { t } = useTranslation(\"ui\")\n  const { database } = useContext(DatabaseContext)\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const gender = useGender(database)\n  const toggleGender = useCallback(() => database.states.set(\"dbMeta\", { gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\n  if (!(key.startsWith(\"Traveler\"))) return null\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport LevelSelect from '../../Components/LevelSelect';\nimport SqBadge from '../../Components/SqBadge';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useGender from '../../ReactHooks/useGender';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\nimport TravelerElementSelect from './TravelerElementSelect';\nimport TravelerGenderSelect from './TravelerGenderSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const { database } = useContext(DatabaseContext)\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const gender = useGender(database)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\n\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\n\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Box display=\"flex\" >\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n            <CharSelectDropdown />\n            <TravelerElementSelect />\n            <TravelerGenderSelect />\n            <DetailStatButton />\n            <CustomMultiTargetButton />\n            <FormulasButton />\n          </Box>\n          {!!onClose && <CloseButton onClick={onClose} />}\n        </Box>\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n          <HitModeToggle size=\"small\" />\n          <InfusionAuraDropdown />\n          <ReactionToggle size=\"small\" />\n        </Box>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <CharacterPanel />\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent></FormulaDataWrapper>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const { t } = useTranslation(\"page_character\")\n  const [open, onOpen, onClose] = useBoolState()\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const bStatsNum = Object.keys(bonusStats).length\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\n    </Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","import { strPadLeft } from \"./Util\"\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = 60 * SECOND_MS\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\n\nexport function msToUnits(ms: number) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nexport function timeString(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nexport function timeStringMs(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\n","import { AllWeaponSheets } from \"../Data/Weapons/WeaponSheet\";\nimport i18n from \"../i18n\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nexport const weaponSortKeys = [\"level\", \"rarity\", \"name\"] as const\nexport type WeaponSortKey = typeof weaponSortKeys[number]\nexport function weaponSortConfigs(weaponSheets: AllWeaponSheets): SortConfigs<WeaponSortKey, ICachedWeapon> {\n  return {\n    level: wp => wp.level * (wp.ascension + 1) ?? 0,\n    rarity: wp => weaponSheets(wp.key).rarity,\n    name: wp => i18n.t(`weaponNames_gen:${wp.key}`) as string\n  }\n}\nexport function weaponFilterConfigs(weaponSheets: AllWeaponSheets): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\n  return {\n    rarity: (wp, filter) => filter.includes(weaponSheets(wp.key).rarity),\n    weaponType: (wp, filter) => filter.includes(weaponSheets(wp.key).weaponType),\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\n  }\n}\n\nexport const weaponSortMap: Partial<Record<WeaponSortKey, WeaponSortKey[]>> = {\n  name: [\"name\"],\n  level: [\"level\", \"rarity\", \"name\"],\n  rarity: [\"rarity\", \"level\", \"name\"],\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","KeyMap","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","WeaponSelectionModal","show","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","allWeaponTypeKeys","weaponFilter","setWeaponfilter","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","weaponType","toLowerCase","open","onClose","py","container","spacing","item","autoFocus","target","InputProps","weaponKey","weaponSheet","lg","md","src","getImg","className","Assets","colored","large","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","href","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","eles","allElements","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","makeid","disallowed","characters","charactersLength","result","charAt","Math","floor","random","Error","readKey","operation","operands","accu","isShallow","f","deleteKey","base","flower","forEach","art","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","cmp","foldProd","constant","source","console","log","sum","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","toFold","orig","reduce","todistrib","mapped","pop","prod","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","push","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","NaN","reduceFormula","allStats","slotArts","rows","mat","dyn","record","Array","fill","selectedPivots","c","pivot","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","slotKey","allArtifactSets","con","sumM","monomials","flat","prodM","cartesian","monos","ret","nxt","terms","constantM","readM","tag","foldLikeTerms","mono","mon","termsA","termsB","ai","splice","expandPoly","inheritTags","varMap","tagMap","varTags","lookup","hsh","hashNode","z","cmpNode","next","newTag","stat2tag","sop","toSOP","slotsLeft","sCount","fromEntries","slotUsage","filterProductPossible","pivotInplace","A","Aij","findPiv1","minloc","findPiv2","minMax","compute","precompute","id","toLinearUpperBound","toPureRead","slope","mon1","intercept","op","flippedResOp","flipOps","resf","d","handleResArg","rop","cop","thresh","minVal","maxVal","em","denom","minEM","maxEM","loc","sqrt","below","nodesToMap","t2","nt","lins","err","bounds","nVar","boundScale","scaleProd","soln","cons","coords","objective","Ab","tableau","Ai","cj","ijTrack","ij","targ","side","ncol","backtrack","solveLP","slice","wi","lub","lin","constVal","pv","thresholdExclusions","excl","exc","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","forceRename","affineNodes","topLevelAffine","visit","isAffine","_op","dynKeys","nonConst","assertUnreachable","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","objectMap","objectKeyMap","allSlotKeys","slot","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","ranges","range","reads","_f","computeMinMax","minMaxes","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","build","kind","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","setExclusionSet","slots","set4CondNums","setEffects","doc","defIconSrc","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","alignContent","gender","useGender","CharacterSheet","marginTop","BusinessCenter","OptimizationTargetContext","createContext","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","computeUIData","dataObjForWeapon","WeaponNameTooltip","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","useDBState","initialTabOptimizeDBState","tempEquipmentPriority","equipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","CharacterSelectionModal","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","mainStatVal","endsWith","substat","accurateValue","reduceSubProblem","subp","constraints","depth","filters","mins","maxw","minw","unionFilterUpperLower","tagNodePairs","reducedNodes","tagsToKill","newTerms","reducePolynomial","toNumNode","active","newOptTarget","newConstraints","newMins","newArtExcl","feasibleKeys","feasible4sets","feasible2sets","allowedCnts","cnt","reducedExcl","fi","wixs","ws","baseC","li","ixs0","w0","accum","ix","baseBuffer","buffer","ixsi","applyLinearForm","newFilters","filterVec","filterIxs","slotVals","filterArtsVec2","minww","maxww","slotUpperLowerVecW","cache","toArtifactBySlotVec","allKeysList","problemSetup","optimizationTargetNode","artSetExclFull","objectKeyValueMap","constraintsEP","opttargetEP","slotUL","slotUpperLowerVec","statsUpperLowerVec","minMaxEst","ixs","ww","baseVal","wtot","minMaxWeightVec","initialProblem","initialReducedProblem","poly","nodeVals","fk","termVals","evaluateExpandedPolynomial","TabBuild","compareData","buildStatus","setBuildStatus","setchartData","setArtsDirty","threads","defThreads","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","numBuilds","currentPageIndex","setCurrentPageIndex","numPages","ceil","maxArtsToShowPerPage","setPageIdx","cancelToken","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","numBuild","_count","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","objPathValue","targetNode","valueFilter","cancelled","Promise","optimize","plotBaseNode","artsVec","masterInfo","ready","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","Worker","URL","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","PageBrowser","pageIdx","setPageIdex","Provider","BuildList","DataContextWrapper","join","providerValue","Pagination","page","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","setRarity","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","Favorite","FavoriteBorder","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","ThumbSide","pr","isFavorite","getWithInit","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","TabTheorycraft","defWeapon","charTCs","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFromEquipped","eWeapon","newData","artifact","lock","setArtifact","data_","setSubstatsType","setSubstats","overriderArtData","overrideWeapon","charUIData","dataContextValue","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","setValue","deleteValue","rest","remaining","ArtifactSetEditor","disableClearable","shape","setName","DeleteForever","rv","substatType","ArtifactSubstatEditor","substatValue","numMains","ms","maxRolls","invalid","parseFloat","zero_deriv","funct","binding","diff","ddx","ops","da","db","numerator","arg1","arg2","quadrinomials","quadrinomial","nextRow","prev","gaussPDF","mu","sig2","exp","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","slow","calc4th","newBuild","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","toEval","fo","evalOpt","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","artifacts","gaussConstrained","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","CustomTooltip","payload","aspect","margin","Label","offset","angle","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","dot","legendType","tooltipType","activeDot","ReferenceLine","ReferenceDot","radius","direction","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useFilters","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","arti","pageIdex","setpageIdex","invScrollRef","artifactsToShow","toShow","minObj0","maxObj0","thr","setPage","zz","respectSexExclusion","newSK","curEquipSetKeys","skc","equippedArts","curEquip","artUpOpt","upOpt","faCalculator","ShowingArt","numShowing","TravelerElementSelect","sgt","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Calculate","Science","bStatsNum","BarChart","onModalOpen","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","displayVal","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","wp","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","replace","module","ex","ExitStatus","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","runCaller"],"sourceRoot":""}