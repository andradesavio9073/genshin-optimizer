{"version":3,"file":"static/js/319.d81087ac.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/BackgroundWorker.ts","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","Formula/solveLP_simplex.ts","Formula/linearUpperBound.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Context/OptimizationTargetContext.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/DBState.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/subproblemUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts","../wasmpack/assembly.js"],"sourcesContent":["import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => artifactSheets[key].nameRaw}\n    getImage={(key: ArtifactSetKey) => artifactSheets[key].defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets[key].nameRaw}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets[key].defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../Assets/Assets\"\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\nimport CardDark from \"../Card/CardDark\"\nimport CardLight from \"../Card/CardLight\"\nimport CloseButton from \"../CloseButton\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport { StarsDisplay } from \"../StarDisplay\"\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\n\ntype WeaponSelectionModalProps = {\n  show: boolean,\n  ascension?: number,\n  onHide: () => void,\n  onSelect: (wKey: WeaponKey) => void,\n  filter?: (sheet: WeaponSheet) => boolean,\n  weaponTypeFilter?: WeaponTypeKey,\n}\n\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\n\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets[wKey]))\n    .filter(wKey => weaponFilter.includes(weaponSheets?.[wKey]?.weaponType))\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\n\n  if (!weaponSheets) return null\n\n  return <ModalWrapper open={show} onClose={onHide}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\n          </Grid >\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid >\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {weaponIdList.map(weaponKey => {\n          const weaponSheet = weaponSheets[weaponKey]\n          return <Grid item key={weaponKey} lg={3} md={4}>\n            <CardLight sx={{ height: \"100%\" }} >\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\n                <Box sx={{ flexGrow: 1, px: 1 }}>\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n                </Box>\n              </CardActionArea>\n            </CardLight>\n          </Grid>\n        })}\n      </Grid></CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onHide} />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Button } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterSelectionModal } from '../CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport KeyMap, { valueString } from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\n        <Grid item>\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\n        </Grid>\n        {allElementsWithPhy.map(element => <Grid item key={element}>\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\n        </Grid>)}\n        <Grid item>\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\n        </Grid>\n      </Grid>\n      <ExpandButton\n        expand={expanded}\n        onClick={toggle}\n        aria-expanded={expanded}\n        aria-label=\"show more\"\n        size=\"small\"\n        sx={{ p: 0 }}\n      >\n        <ExpandMore />\n      </ExpandButton>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} IMMUNE</span> :\n    <span >{StatIcon[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport StatIcon from \"../../Components/StatIcon\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\nimport { allElements, ElementKey, ElementKeyWithPhy } from \"../../Types/consts\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title=\"Detailed Stats\" action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { character: { elementKey }, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = (elementKey ?? characterSheet.elementKey) as ElementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.map(k => input.total[k])\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\n    if (isMelee) eles.concat([\"physical\"])\n\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BackgroundWorker.820b968b.worker.js\");\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { cmp, constant, prod, sum } from './utils';\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: NumNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: NumNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return cmp(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands]) as NumNode[]\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands]) as NumNode[]\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: NumNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: NumNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'const' && bval.operation === 'const') {\n          return branch.value >= bval.value ? ge : lt\n        }\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, cmp(br2, bv2, left, right))\n            return cmp(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(cmp(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode } from \"./type\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { ArtSetExclusion } from \"../Database/Data/BuildsettingData\"\n\nexport function foldSum(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) {\n    if (nodes.length === 1) return nodes[0]\n    return sum(...nodes)\n  }\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: NumNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  // f2 = optimize(f2, {})\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => Math.abs(lower[statKey] - upper[statKey]) < 1e-6)\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: NumNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return cmp(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, NumNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: NumNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, NumNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: NumNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n as NumNode)\n  })\n\n  function toSOP(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","function pivotInplace(A: number[][], { i, j }: { i: number, j: number }) {\n  const Aij = A[i][j]\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    for (let k = 0; k < A[0].length; k++) {\n      if (k === j) continue\n      A[h][k] -= A[i][k] * A[h][j] / Aij\n    }\n  }\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    A[h][j] = -A[h][j] / Aij\n  }\n  for (let k = 0; k < A[0].length; k++) {\n    if (k === j) continue\n    A[i][k] = A[i][k] / Aij\n  }\n  A[i][j] = 1 / Aij\n}\n\nfunction findPiv1(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let j = 0; j < c - 1; j++) {\n    if (A[r - 1][j] >= 0) continue\n    for (let i = 0; i < r - 1; i++) {\n      if (A[i][j] > 1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('UNBOUNDED FEASIBLE')\n  }\n\n  if (minloc.i < 0) throw Error('NO PIVOTS (done)')\n  return { i: minloc.i, j: minloc.j }\n}\n\nfunction findPiv2(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let i = 0; i < r - 1; i++) {\n    if (A[i][c - 1] >= 0) continue\n    for (let j = 0; j < c - 1; j++) {\n      if (A[i][j] < -1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('INFEASIBLE')\n    return { i: minloc.i, j: minloc.j }\n  }\n  throw Error('NO PIVOTS (done)')\n}\n\nfunction backtrack(tableau: number[][], ijTrack: { i: number, j: number }[], targ: number) {\n  let side = 1;  // 0 left, 1 right\n  ijTrack.forEach(({ i, j }) => {\n    if (side === 1 && j === targ) {\n      targ = i\n      side = 0\n    }\n    else if (side === 0 && i === targ) {\n      targ = j\n      side = 1\n    }\n  })\n\n  const ncol = tableau[0].length\n  return side === 0 ? tableau[targ][ncol - 1] : 0\n}\n\n/**\n * Solve a Linear Program defined by:\n *              min  c^T x\n *               x\n *   Subject to:     Ax <= b\n *                    x >= 0\n *\n * Implemented according to:\n *   https://www.math.ucla.edu/~tom/LP.pdf\n *\n * Does not implement any cycle detection, though that *shouldnt* a problem for GO's use\n *   case. This algorithm is fairly numerically unstable though, use with care & always\n *   try to verify the solution. It's also a fair bit slower than it needs to be.\n *\n * @param c        Objective vector\n * @param Ab       Constraints matrix with thresholds. Inputted in block form [A, b]\n * @returns        the optimal solution x\n */\nexport function solveLP(c: number[], Ab: number[][]) {\n  let rows = Ab.length + 1\n  let cols = Ab[0].length\n\n  let tableau = Array(rows).fill(0).map(_ => Array(cols).fill(0))\n  Ab.forEach((Ai, i) => Ai.forEach((Aij, j) => tableau[i][j] = Aij))\n  // b.forEach((bi, i) => tableau[i][cols - 1] = bi)\n  c.forEach((cj, j) => tableau[rows - 1][j] = cj)\n  // console.log('tab', tableau)\n\n  let ijTrack: { i: number, j: number }[] = []\n\n  while (tableau.some((t, i) => i < rows - 1 && t[cols - 1] < 0)) {\n    const ij = findPiv2(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  while (tableau[rows - 1].some((t, j) => j < cols - 1 && t < 0)) {\n    const ij = findPiv1(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  return c.map((_, i) => backtrack(tableau, ijTrack, i))\n}\n","import { NumNode } from \"./type\"\nimport { ArtifactsBySlot, ArtifactsBySlotVec, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { ExpandedPolynomial, Monomial, sumM, prodM, constantM, readM, foldLikeTerms } from './expandPoly'\nimport { precompute, allOperations } from \"./optimization\"\nimport { solveLP } from './solveLP_simplex'\nimport { cartesian } from '../Util/Util'\nimport { fillBuffer } from \"./addedUtils\"\n\nexport type LinearForm = {\n  w: DynStat,\n  c: number,\n  err: number\n}\nexport type LinearFormVec = {\n  w: number[],\n  c: number,\n  err: number\n}\n\nfunction minMax(node: NumNode, lower: DynStat, upper: DynStat) {\n  let [compute, mapping, buffer] = precompute([node], n => n.path[1])\n  fillBuffer(lower, mapping, buffer)\n  const minval = compute()[0]\n  fillBuffer(upper, mapping, buffer)\n  const maxval = compute()[0]\n  return [minval, maxval]\n}\n\n/**\n * `res` is the ONE place where negative arguments & negative slopes are allowed.\n * @param node\n */\nfunction handleResArg(node: { 'operation': 'res', 'operands': NumNode[] }, lower: DynStat, upper: DynStat) {\n  function flipOps(n: NumNode): NumNode {\n    switch (n.operation) {\n      case 'add':\n        return sum(...n.operands.map(n => flipOps(n)))\n      case 'const':\n        return constant(-n.value)\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (ge.operation === 'const' && lt.operation === 'const') {\n          if (ge.value <= lt.value) {\n            return cmp(branch, bval, -ge.value, -lt.value)\n          }\n        }\n        console.log(n)\n        throw Error('(res neg slope): threshold. Something went wrong.')\n      default:\n        console.log(n)\n        throw Error('(res neg slope) Havent written logic to handle this')\n    }\n  }\n\n  const flippedResOp = flipOps(node.operands[0])\n\n  let [a, b] = minMax(flippedResOp, lower, upper)\n  let resf = allOperations['res']\n  let [c, d] = [resf([-a]), resf([-b])]\n\n  if (b > 0 && a > -1.75) {\n    // 1 + x / 2\n    return sum(1, prod(.5, flippedResOp))\n  }\n\n  const intercept = (b * c - a * d) / (b - a)\n  const slope = (c - d) / (b - a)\n  return sum(intercept, prod(slope, flippedResOp))\n}\n\n/**\n * First converts a product of variables (including max, min, sum_frac, threshold, etc.) to\n *   a pure product form consisting of only `read` and `const` nodes, guaranteeing the\n *   product form is an upper bound.\n *\n * Then on the product form, create a linear upper bound using `lub` and return it.\n *\n * @param node The formula to expand\n * @param lower Stat lower bounds\n * @param upper Stat upper bounds\n * @returns\n */\nexport function toLinearUpperBound({ nodes, terms }: ExpandedPolynomial, lower: DynStat, upper: DynStat): LinearForm {\n  let stat2tag = {} as Dict<string, string>\n  Object.entries(nodes).forEach(([tag, n]) => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = tag\n  })\n\n  let linerr = 0\n  function toPureRead(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'const':\n        return constantM(n.value)\n      case 'read':\n        return readM(stat2tag[n.path[1]]!)\n      case 'add':\n        return sumM(...n.operands.map(toPureRead))\n      case 'mul':\n        return prodM(...n.operands.map(toPureRead))\n\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read' && bval.operation === 'const'\n          && lt.operation === 'const' && ge.operation === 'const') {\n          if (ge.value < lt.value) {\n            console.log(n)\n            throw Error('Not Implemented (threshold must be increasing)')\n          }\n\n          let key = branch.path[1]\n          if (lower[key] >= bval.value) return constantM(ge.value)\n          if (upper[key] < bval.value) return constantM(lt.value)\n\n          const slope = (ge.value - lt.value) / (bval.value - lower[key])\n          const mon1 = prodM(constantM(slope), readM(stat2tag[branch.path[1]]!))\n\n          const intercept = lt.value - slope * lower[key]\n          if (intercept === 0) return mon1\n          return sumM(constantM(intercept), mon1)\n          // if (lt.value === 0) return mon1\n          // return sumM(constantM(lt.value), mon1)\n        }\n        console.log(n)\n        throw Error('Not Implemented (threshold must branch between constants)')\n      case 'res':\n        let op = handleResArg(n as { 'operation': 'res', 'operands': NumNode[] }, lower, upper)\n        return toPureRead(op)\n\n      case 'min': case 'max':\n        let [rop, cop] = n.operands\n        if (cop.operation !== 'const')\n          [rop, cop] = [cop, rop]  // Assume min(const, read)\n        if (n.operation === 'min') return toPureRead(rop)\n\n        if (cop.operation === 'const') {\n          const thresh = cop.value\n          const [minVal, maxVal] = minMax(rop, lower, upper)\n          if (minVal > thresh) return toPureRead(rop)\n          if (thresh > maxVal) return constantM(thresh)\n\n          // rescale `rop` to be above thresh, since max(f, 0) is a convex function\n          const m = (maxVal - thresh) / (maxVal - minVal)\n          const b = thresh - m * minVal\n          return sumM(constantM(b), prodM(constantM(m), toPureRead(rop)))\n        }\n        console.log(n)\n        throw Error('Not Implemented (max between two non-constants)')\n\n      case 'sum_frac':\n        const [em, denom] = n.operands\n        if (denom.operation !== 'const') throw Error('Not Implemented (non-constant sum_frac denominator)')\n\n        const [minEM, maxEM] = minMax(em, lower, upper)\n        const k = denom.value\n        // The sum_frac form is concave, so any Taylor expansion of EM / (EM + k) gives an upper bound.\n        // We can solve for the best Taylor approximation location with the following formula.\n        let loc = Math.sqrt((minEM + k) * (maxEM + k)) - k\n        let below = (k + loc) * (k + loc)\n        let slope = k / below\n        let c = loc * loc / below\n\n        // TODO: update linerr\n        return sumM(constantM(c), prodM(constantM(slope), toPureRead(em)))\n\n      default:\n        console.log(n)\n        throw Error('Not Implemented')\n    }\n  }\n\n  // 1. Turn all nodes into linear upper bounds\n  const nodesToMap = Object.fromEntries(Object.entries(nodes).filter(([tag, n]) => n.operation !== 'read').map(([tag, n]) => [tag, toPureRead(n)]))\n\n  // 2. substitute into `terms` and construct a new SOPForm whose nodes are all pure read nodes\n  let t2 = terms.flatMap(({ coeff, terms }) => prodM(constantM(coeff), ...terms.map(t => nodesToMap[t] ?? readM(t))))\n  t2 = foldLikeTerms(t2)\n\n  // 2.5 Re-name all the tags to their read node version\n  t2 = t2.map(({ coeff, terms }) => {\n    terms = terms.map(t => {\n      const nt = nodes[t]\n      if (!nt || nt.operation !== 'read') throw Error('MUST be a read node.')\n      return nt.path[1]\n    })\n    return { coeff, terms }\n  })\n\n  // 3. call lub() on each term\n  const lins = t2.map(({ coeff, terms }) => {\n    if (terms.length === 0) return { w: {}, c: coeff, err: 0 }\n    if (terms.length === 1) return { w: { [terms[0]]: coeff }, c: 0, err: 0 }\n    const { w, c, err } = lub(terms.map(k => ({ lower: lower[k], upper: upper[k] })))\n    const retw = w.reduce((ret, wi, i) => {\n      ret[terms[i]] = wi * coeff + (ret[terms[i]] ?? 0)\n      return ret\n    }, {} as DynStat)\n    return { w: retw, c: coeff * c, err: coeff * err + linerr }\n  })\n\n  return lins.reduce((lin, l) => {\n    lin.c += l.c; lin.err += l.err\n    Object.entries(l.w).forEach(([k, v]) => lin.w[k] = v + (lin.w[k] ?? 0))\n    return lin\n  }, { w: {}, c: 0, err: 0 })\n}\n\n/**\n * Constructs an upper bounding linear form for a function x_1 * x_2 * ... * x_n\n * @param bounds upper and lower bounds for each x_i\n * @returns { w, c, err } with\n */\nfunction lub(bounds: { lower: number, upper: number }[]): { w: number[], c: number, err: number } {\n  if (bounds.length === 0) return { w: [], c: 0, err: 0 }\n  const nVar = bounds.length\n\n  // Re-scale bounds to [0, 1] for numerical stability.\n  const boundScale = bounds.map(({ upper }) => upper)\n  const scaleProd = boundScale.reduce((prod, v) => prod * v, 1)\n  bounds = bounds.map(({ lower, upper }) => ({ lower: lower / upper, upper: 1 }))\n\n  // Setting up the linear program in terms of constraints.\n  let cons = cartesian(...bounds.map(({ lower, upper }) => [lower, upper])).flatMap((coords) => {\n    const prod = coords.reduce((prod, v) => prod * v, 1)\n    return [\n      [...coords.map(v => -v), 1, 0, -prod],\n      [...coords, -1, -1, prod],\n    ]\n  })\n\n  // Force equality at upper & lower corners?\n  // cons.push([...bounds.map(lu => lu.lower), -1, 0, bounds.reduce((prod, { lower }) => prod * lower, 1)])\n  // cons.push([...bounds.map(lu => lu.upper), -1, 0, bounds.reduce((prod, { upper }) => prod * upper, 1)])\n\n  let soln: any\n  const objective = [...bounds.map(_ => 0), 0, 1]\n  try {\n    // TODO: verify solution\n    soln = solveLP(objective, cons)\n  }\n  catch (e) {\n    console.log('ERROR on bounds', bounds)\n    console.log('Possibly numerical instability issue.')\n    throw e\n  }\n  return {\n    w: soln.slice(0, nVar).map((wi, i) => wi * scaleProd / boundScale[i]),\n    c: -scaleProd * soln[nVar],\n    err: scaleProd * soln[nVar + 1]\n  }\n}\n\nexport function maxWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMax([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((maxTotVal, [slotKey, slotArts]) => maxTotVal + sparseMatmulMax([lin], slotArts.map(a => a.values))[0], 0)\n}\nexport function minWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMin([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((minTotVal, [slotKey, slotArts]) => minTotVal + sparseMatmulMin([lin], slotArts.map(a => a.values))[0], 0)\n}\n\nexport function maxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  return Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n}\nexport function minMaxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  const maxw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n\n  const minw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.min(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n  return { minw, maxw }\n}\n\n\n\n// Implement matrix multiply between row-major w's of LinearForm and col-major DynStats that represent artifacts.\n/**\n * Implements sparse matrix multiplication between A and x\n * @param A A list of row-major w's of some LinearForm\n * @param x A list of col-major DynStats that represent some artifacts\n * @returns A col-major 2d array number[][] with shape (A.length, x.length).\n *          ret[0] is [A1 @ x1, A2 @ x1, ..., An @ x1]\n */\nexport function sparseMatmul(A: LinearForm[], x: DynStat[]) {\n  return x.map(dyn => A.map(({ w }) => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0)))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a max() along the rows.\n */\nexport function sparseMatmulMax(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.max(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a min() along the rows.\n */\nexport function sparseMatmulMin(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.min(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype DynMinMax = { [key in string]: MinMax }\ntype MinMax = { min: number, max: number }\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\n\n  function visit(node: NumNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(_op => {\n      const op = _op as NumNode\n      affineNodes.has(op) && topLevelAffine.add(op)\n    })\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const operation = f.operation\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\":\n        if (typeof f.value === \"string\" || f.value === undefined)\n          throw new Error(`Found constant ${f.value} while compacting`)\n        visit(f as NumNode, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return constant(0)\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\n  const range = new Map<NumNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, _f => {\n    const f = _f as NumNode\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"subscript\": current = computeMinMax(f.list); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = computeMinMax([0])\n        else current = computeMinMax([0], [operands[2]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      case \"data\": case \"lookup\": case \"match\":\n        throw new Error(`Unsupported ${operation} node`)\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArtsVec(arts: ArtifactsBySlotVec, filters: RequestFilter): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArts2(arts: ArtifactsBySlot, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function filterArtsVec2(arts: ArtifactsBySlotVec, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\n\nexport type ArtifactBuildDataVecDense = {\n  id: string\n  set?: ArtifactSetKey\n  values: number[]\n  buffer: number[]\n}\n// I dont *think* its worth it to implement sparse vectors n shit\n// export type ArtifactBuildDataVecSparse = {\n//   id: string\n//   set?: ArtifactSetKey\n//   values: number[][]\n// }\nexport type ArtifactsBySlotVec = { keys: string[], base: number[], values: StrictDict<SlotKey, ArtifactBuildDataVecDense[]>, baseBuffer: number[] }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, setBuildSetting),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`tabOptimize.artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`tabOptimize.artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`tabOptimize.artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`tabOptimize.artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`tabOptimize.artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`tabOptimize.artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`tabOptimize.artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`tabOptimize.artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets[setKey]} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"tabOptimize.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl }) : t(\"tabOptimize.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: CharacterKey | \"\" }) {\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from \"../../KeyMap\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon from \"../StatIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\n        <span>{StatIcon[node.info.key]}</span>\n      </BootstrapTooltip>\n      <span>{val}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }) {\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ArtifactSlotKey } from 'pipeline';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtons?: JSX.Element\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\n    database.chars.equipArtifacts(characterKey, newBuild)\n    database.weapons.set(data.get(input.weapon.id).value!, { location: characterKey })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = data.get(input.art[slotKey].id).value!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <SetBadges currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\n          {extraButtons}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\n  const { data } = useContext(DataContext)\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n  )}</>\n\n}\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: characterKey })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\" >Optimization Target vs</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton title={plotBase ? KeyMap.get(plotBase) : \"Not Selected\"}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>Unselect</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>Show Min Stat Threshold</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>Download Data</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name=\"Optimization Target\" dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name=\"Minimum Stat Requirement Threshold\" dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { input } from \"../../../../../Formula\"\nimport { StatKey } from \"../../../../../KeyMap\"\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\nimport useBuildSetting from \"../useBuildSetting\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\n\n  const statKeys = useMemo(() => {\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n    const charEle = data.get(input.charEle).value as ElementKey\n    statKeys.push(`${charEle}_dmg_`)\n    return statKeys\n  }, [data])\n\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`tabOptimize.constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`tabOptimize.constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import useDBState from \"../../../../ReactHooks/useDBState\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport const defThreads = navigator.hardwareConcurrency || 4\n\nexport function initialTabOptimizeDBState(): {\n  equipmentPriority: CharacterKey[],\n  threads: number,\n} {\n  return {\n    equipmentPriority: [],\n    threads: defThreads\n  }\n}\n\nexport function useOptimizeDBState() {\n  return useDBState(\"TabOptimize\", initialTabOptimizeDBState)\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport { CharacterSelectionModal } from \"../../../../CharacterSelectionModal\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../useBuildSetting\";\nimport { useOptimizeDBState } from \"../DBState\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useOptimizeDBState()\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\"><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.title\">Character Priority for Equipped Artifacts</Trans></Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"tabOptimize.useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"tabOptimize.useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\"\nimport { fillBuffer, reducePolynomial } from \"../../../../Formula/addedUtils\"\nimport { ExpandedPolynomial, expandPoly, toNumNode } from \"../../../../Formula/expandPoly\"\nimport { LinearForm, minMaxWeightVec, toLinearUpperBound } from \"../../../../Formula/linearUpperBound\"\nimport { precompute } from \"../../../../Formula/optimization\"\nimport { NumNode } from \"../../../../Formula/type\"\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\"\nimport { objectKeyMap, objectKeyValueMap, range } from \"../../../../Util/Util\"\nimport { ArtifactBuildDataVecDense, ArtifactsBySlot, ArtifactsBySlotVec, DynStat, filterArtsVec2, RequestFilter } from \"./common\"\n\nexport type UnionFilter = {\n  uType: true\n  filters: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>[]\n} | (RequestFilter & { uType: false })\n\nexport type RequestFilter2 = {\n  // filter: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>,\n  filterVec: StrictDict<SlotKey, number[]>,  // dict of list of indices (for some particular ArtifactsBySetVec)\n  lower: number[],  // length `k` list of lower bound stats\n  upper: number[],  // length `k` list of upper bound stats\n  minw: number[],   // length `l` list of minimum upper bound estimates\n  maxw: number[],   // length `l` list of maximum upper bound weights\n}\nexport type UnionFilter2 = RequestFilter2[]\nexport type ArtSetExclusionFull = Dict<Exclude<ArtifactSetKey, \"PrayersForDestiny\" | \"PrayersForIllumination\" | \"PrayersForWisdom\" | \"PrayersToSpringtime\"> | \"uniqueKey\", number[]>\n// export type SubProblem = SubProblemNC | SubProblemWC\nexport type SubProblem = SubProblemWC\nexport type SubProblemNC = {\n  cache: false,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  depth: number,\n}\nexport type SubProblemWC = {\n  cache: true,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  lin: LinearForm[],\n  // cachedCompute: CachedCompute,\n  depth: number,\n}\nexport type CachedCompute = {\n  maxEst: number[],\n  lin: LinearForm[],\n  lower: DynStat,\n  upper: DynStat\n}\n\nexport function countBuildsU(f: UnionFilter2): number {\n  return f.reduce((tot, { filterVec }) => tot + allSlotKeys.reduce((_count, slot) => _count * filterVec[slot].length, 1), 0)\n}\n\nexport function unionFilterUpperLower(f: UnionFilter2) {\n  const lower = [...f[0].lower]\n  const upper = [...f[0].upper]\n  const minw = [...f[0].minw]\n  const maxw = [...f[0].maxw]\n\n  for (let i = 1; i < f.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], f[i].lower[j])\n      upper[j] = Math.max(upper[j], f[i].upper[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], f[i].minw[j])\n      maxw[j] = Math.max(maxw[j], f[i].maxw[j])\n    }\n  }\n\n  return { lower, upper, minw, maxw }\n}\n\nexport function applyLinearForm(arts: ArtifactsBySlotVec, lin: LinearForm[]) {\n  const wixs: number[][] = []\n  const ws: number[][] = []\n  const baseC: number[] = []\n  lin.forEach(li => {\n    const ixs0: number[] = []\n    const w0: number[] = []\n    Object.entries(li.w).forEach(([k, w]) => {\n      ixs0.push(arts.keys.indexOf(k))\n      w0.push(w)\n    })\n    wixs.push(ixs0)\n    ws.push(w0)\n\n    baseC.push(ixs0.reduce((accum, ix, i) => accum + arts.base[ix] * w0[i], li.c))\n  })\n\n  arts.baseBuffer = baseC\n  allSlotKeys.forEach(slotKey => arts.values[slotKey].forEach(art =>\n    art.buffer = wixs.map((ixsi, i) => ixsi.reduce((accum, ix, j) => accum + art.values[ix] * ws[i][j], 0))\n  ))\n}\n\nexport function reduceSubProblem(arts: ArtifactsBySlotVec, threshold: number, subp: SubProblem): SubProblemWC | undefined {\n  const { optimizationTarget, constraints, artSetExclusion, depth } = subp\n  let { filters } = subp\n  let nodes = [...constraints.map(({ value }) => value), optimizationTarget]\n  const mins = constraints.map(({ min }) => min)\n\n  // 0. Check for never-feasible constraints\n  filters = filters.filter(({ maxw }) => {\n    if (mins.some((min, j) => maxw[j] < min)) return false\n    if (maxw[mins.length] < threshold) return false\n    return true\n  })\n  if (filters.length === 0) return undefined\n\n  // 0b. Calculate stat bounding box\n  const { lower, upper } = unionFilterUpperLower(filters)\n  const statsMin: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, lower[i]])))\n  const statsMax: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, upper[i]])))\n\n  nodes = reducePolynomial(nodes, statsMin, statsMax)\n\n  // 1. Check for always-feasible constraints.\n  const [compute, mapping, buffer] = precompute(constraints.map(({ value }) => toNumNode(value)), n => n.path[1])\n  fillBuffer(statsMin, mapping, buffer)\n  const result = compute()\n  const active = mins.map((m, i) => m > result[i])\n\n  const newOptTarget = nodes.pop()!\n  const newConstraints = nodes.map((value, i) => ({ value, min: mins[i] })).filter((_, i) => active[i])\n  const newMins = newConstraints.map(({ min }) => min)\n\n  // 2. Check for never-active and always-active ArtSetExcl constraints.\n  const newArtExcl = {} as ArtSetExclusionFull\n  for (const [setKey, exclude] of Object.entries(artSetExclusion)) {\n    if (setKey === 'uniqueKey') {\n      // TODO: Check and exclude rainbow bullshit.\n      newArtExcl[setKey] = exclude\n      const feasibleKeys = allArtifactSets.filter(setKey => statsMax[setKey] > 0)\n      let feasible4sets = 0\n      let feasible2sets = 0\n      feasibleKeys.forEach(k => {\n        let allowedCnts = range(statsMin[k], statsMax[k])\n        if (artSetExclusion[k])\n          allowedCnts = allowedCnts.filter(cnt => !artSetExclusion[k].includes(cnt))\n\n        if (allowedCnts.includes(4) || allowedCnts.includes(5)) feasible4sets++\n        if (allowedCnts.includes(2) || allowedCnts.includes(3)) feasible2sets++\n      })\n\n      if (exclude.includes(5) && feasible4sets === 0) {\n        if (feasible2sets === 0) return; // No feasible 4sets or 2sets along with rainbow5 excluded is never satisfiable\n        if (exclude.includes(3) && feasible2sets < 2) return; // No 4sets, rainbow5 excluded, rainbow3 excluded means we need at least 2 2sets\n      }\n      continue\n    }\n    const reducedExcl = exclude.filter(n => statsMin[setKey] <= n && n <= statsMax[setKey])        // Cut away never-active\n    if (reducedExcl.includes(statsMin[setKey]) && reducedExcl.includes(statsMax[setKey])) return;  // Always active.\n    if (reducedExcl.length > 0) newArtExcl[setKey] = reducedExcl\n  }\n\n  // 3. Estimate Upper Bounds and re-check for never-feasible constraints\n  let f = [...newConstraints.map(({ value }) => value), newOptTarget]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  applyLinearForm(arts, lin)\n  const newFilters = filters\n    .map(filter => {\n      const { filterVec, lower, upper } = filter\n      const a = filterArtsVec2(arts, filter.filterVec)  // CANDIDATE for making this more efficient\n      const minww = [...a.baseBuffer]\n      const maxww = [...a.baseBuffer]\n      allSlotKeys.forEach(slotKey => {\n        const { minw, maxw } = slotUpperLowerVecW(a.values[slotKey])\n        for (let j = 0; j < minww.length; j++) {\n          minww[j] += minw[j]\n          maxww[j] += maxw[j]\n        }\n      })\n      return {\n        filterVec, lower, upper,\n        minw: minww, maxw: maxww,\n      }\n    })\n    .filter(({ maxw }) => {\n      if (newMins.some((min, j) => maxw[j] < min)) return false\n      if (maxw[mins.length] < threshold) return false\n      return true\n    })\n\n  return {\n    cache: true,\n    optimizationTarget: newOptTarget,\n    constraints: newConstraints,\n    artSetExclusion: newArtExcl,\n\n    depth, lin, filters: newFilters\n  }\n}\n\nexport function toArtifactBySlotVec(arts: ArtifactsBySlot): ArtifactsBySlotVec {\n  const allKeys = new Set(Object.keys(arts.base))\n  Object.values(arts.values).forEach(slotArts => {\n    slotArts.forEach(art => {\n      if (art.set) allKeys.add(art.set)\n      Object.keys(art.values).forEach(k => allKeys.add(k))\n    })\n  })\n\n  const allKeysList = [...allKeys]\n  const keys = [...allKeysList.filter(k => !(allArtifactSets as readonly string[]).includes(k)), ...allKeysList.filter(k => (allArtifactSets as readonly string[]).includes(k))]\n\n  return {\n    keys, baseBuffer: [],\n    base: keys.map(k => arts.base[k] ?? 0),\n    values: {\n      flower: arts.values.flower.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      plume: arts.values.plume.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      sands: arts.values.sands.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      goblet: arts.values.goblet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      circlet: arts.values.circlet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n    }\n  }\n}\n\ntype ProblemSetup = {\n  optimizationTargetNode: NumNode,\n  nodes: NumNode[],\n  minimum: number[],\n  artSetExclusion: ArtSetExclusion\n}\nexport function problemSetup(arts: ArtifactsBySlotVec, { optimizationTargetNode, nodes, minimum, artSetExclusion }: ProblemSetup): SubProblemWC {\n  const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n    if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n    return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n  })\n\n  const constraintsEP = nodes\n    .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n    .filter(x => x.min > -Infinity)\n  const opttargetEP = expandPoly(optimizationTargetNode)\n\n  const { lower, upper } = statsUpperLowerVec(arts)\n  const statsMin = Object.fromEntries(arts.keys.map((k, i) => [k, lower[i]]))\n  const statsMax = Object.fromEntries(arts.keys.map((k, i) => [k, upper[i]]))\n  let f = [...constraintsEP.map(({ value }) => value), opttargetEP]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  const minMaxEst = lin.map(li => minMaxWeightVec(arts, li))\n\n  console.log('-----------------------------------------------------------------------')\n  console.log('lin', lin)\n  console.log('-----------------------------------------------------------------------')\n\n  const filterVec = objectKeyMap(allSlotKeys, slotKey => {\n    return arts.values[slotKey].map((v, i) => i)\n  })\n\n  const initialProblem: SubProblemWC = {\n    cache: true,\n    optimizationTarget: opttargetEP,\n    constraints: constraintsEP,\n    artSetExclusion: artSetExclFull,\n\n    filters: [{\n      filterVec, lower, upper,\n      maxw: minMaxEst.map(({ maxw }) => maxw),\n      minw: minMaxEst.map(({ minw }) => minw),\n    }],\n    depth: 0,\n    lin,\n  }\n  const initialReducedProblem = reduceSubProblem(arts, -Infinity, initialProblem)\n  console.log(initialReducedProblem)\n  if (initialReducedProblem === undefined)\n    return initialProblem\n  return initialReducedProblem\n}\n\nexport function slotUpperLowerVec(arts: ArtifactBuildDataVecDense[]) {\n  const lower = [...arts[0].values]\n  const upper = [...arts[0].values]\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], arts[i].values[j])\n      upper[j] = Math.max(upper[j], arts[i].values[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { lower, upper, minw, maxw }\n}\nexport function slotUpperLowerVecW(arts: ArtifactBuildDataVecDense[]) {\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { minw, maxw }\n}\nexport function statsUpperLowerVec(a: ArtifactsBySlotVec) {\n  const lower = [...a.base]\n  const upper = [...a.base]\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVec(slotArts)\n    for (let i = 0; i < lower.length; i++) {\n      lower[i] += slotUL.lower[i]\n      upper[i] += slotUL.upper[i]\n    }\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { lower, upper, minw, maxw }\n}\nexport function statsUpperLowerVecW(a: ArtifactsBySlotVec) {\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVecW(slotArts)\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { minw, maxw }\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography, Pagination } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink } from 'react-router-dom';\n// eslint-disable-next-line\nimport Worker from \"worker-loader!./BackgroundWorker\";\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport KeyMap from '../../../../KeyMap';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useDBState from '../../../../ReactHooks/useDBState';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { initGlobalSettings } from '../../../../stateInit';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { CharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { defThreads, useOptimizeDBState } from './DBState';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { countBuildsU, problemSetup, SubProblem, toArtifactBySlotVec } from './subproblemUtil';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useOptimizeDBState()\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\n  const numBuilds = buildsArts.length\n\n  const [currentPageIndex, setCurrentPageIndex] = useState(0)\n  const { numPages } = useMemo(() => {\n    return { numPages: Math.ceil(numBuilds / maxArtsToShowPerPage) }\n  }, [numBuilds])\n  const setPageIdx = useCallback((e, value: number) => {\n    setCurrentPageIndex(value - 1)\n  }, [setCurrentPageIndex])\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: CharacterKey[] = []\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) cantTakeList = [...equipmentPriority]\n      else cantTakeList = equipmentPriority.slice(0, index)\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === characterKey) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.includes(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    const targetNode = optimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      nodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // Can be further folded after pruning\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    optimizationTargetNode = nodes.pop()!\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const constraints = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const artsVec = toArtifactBySlotVec(arts)\n    const initialProblem = problemSetup(artsVec, { optimizationTargetNode, nodes, minimum, artSetExclusion })\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 5\n    const minFilterCount = 2_000 // Don't split for single worker\n    // const maxRequestFilterInFlight = maxWorkers * 4\n    const maxRequestFilterInFlight = 1\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1] }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuildsU(subproblem.filters)\n      // let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1], subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker()\n      workers.push(worker)\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts, artsVec,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters: constraints\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues.push(...data.buildValues)\n              wrap.buildValues.sort((a, b) => b - a).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n      setCurrentPageIndex(0)\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority, setCurrentPageIndex])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>Main Stat</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Typography><strong>Level Assumption</strong> changes mainstat value to be at least a specific level. Does not change substats.</Typography>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`tabOptimize.allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>Artifact Level Filter</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<TrendingUp />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      {tcMode && <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>}\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} pageIdx={currentPageIndex} />\n      </OptimizationTargetContext.Provider>\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n    </DataContext.Provider>}\n  </Box>\n}\n\nconst maxArtsToShowPerPage = 5\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled, pageIdx }: {\n  buildsArts: ICachedArtifact[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n  pageIdx: number,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {buildsArts?.slice(maxArtsToShowPerPage * pageIdx, maxArtsToShowPerPage * (pageIdx + 1))\n      .map((build, index) => characterKey && data && <DataContextWrapper\n        key={index + build.join()}\n        characterKey={characterKey}\n        build={build}\n        oldData={data}\n      >\n        <BuildDisplayItem index={maxArtsToShowPerPage * pageIdx + index} compareBuild={compareData} disabled={disabled} />\n      </DataContextWrapper>\n      )}\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled, pageIdx])\n  return list\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: ICachedArtifact[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n\nfunction PageBrowser({ numPages, pageIdx, setPageIdex }: {\n  numPages: number,\n  pageIdx: number,\n  setPageIdex: (e: any, n: number) => void\n}) {\n  return <CardDark ><CardContent>\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Pagination count={numPages} page={pageIdx + 1} onChange={setPageIdex} />\n      </Grid>\n      <Grid item>\n        page {pageIdx + 1} / {numPages}\n        {/* <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} /> */}\n      </Grid>\n    </Grid>\n  </CardContent></CardDark>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n        {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n          <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n        </DataContext.Provider>}\n      </Suspense>\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const filterConfigs = useMemo(() => weaponSheets && weaponFilterConfigs(weaponSheets), [weaponSheets])\n  const sortConfigs = useMemo(() => weaponSheets && weaponSortConfigs(weaponSheets), [weaponSheets])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (filterConfigs && sortConfigs && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, filterConfigs))\n    .sort(sortFunction(\"level\", false, sortConfigs))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, filterConfigs, sortConfigs, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { initCharMeta } from '../../../../stateInit';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, CardContent, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport { initCharMeta } from \"../../../../stateInit\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <CardContent>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </CardContent>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Stack, ToggleButton } from \"@mui/material\";\nimport { WeaponTypeKey } from \"pipeline\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponSelectionModal from \"../../../../Components/Weapon/WeaponSelectionModal\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/Data/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      Object.values(character.equippedArtifacts).forEach(a => {\n        const art = database.arts.get(a)\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat =>\n          newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        )\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n\n      setData(newData)\n    },\n    [database, data, character.equippedArtifacts, character.equippedWeapon, setData],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const overriderArtData = useMemo(() => {\n    const stats = { ...data.artifact.substats.stats }\n    Object.values(data.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(data.artifact.sets, v => constant(v)),\n    }\n  }, [data])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [charUIData, teamData, compareData, oldData])\n\n  return <Stack spacing={1}>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Box>\n        <CardLight>\n          <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n            <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n              <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n              <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n            </Box>\n            <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup>\n          </Box>\n        </CardLight>\n      </Box>\n      <Box>\n        <Grid container spacing={1} sx={{ justifyContent: \"center\" }} columns={4}>\n          <Grid item sx={{ flexGrow: -1 }}  >\n            <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          </Grid>\n          <Grid item sx={{ flexGrow: 1 }}  >\n            <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n          </Grid>\n          <Grid item sx={{ flexGrow: 1 }}  >\n            <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} />\n          </Grid>\n        </Grid >\n      </Box>\n      <CardLight sx={{ flexGrow: 1, p: 1 }}>\n        <StatDisplayComponent />\n      </CardLight>\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />}\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, height: \"100%\" }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}>{weaponSheet?.name}</Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} sx={{ height: \"100%\" }}>\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets[setKey].setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.[setKey] || Object.keys(artifactSheets[setKey].setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"10em\" }}>\n        Tot. RV: <strong>{rv.toFixed(1)}%</strong>\n      </CardDark>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType }) {\n  const unit = KeyMap.unit(statKey)\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const rv = value / Artifact.substatValue(statKey) * 100\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n      {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n    </CardDark>\n    <CustomNumberInput\n      color={value ? \"success\" : \"primary\"}\n      float={KeyMap.unit(statKey) === \"%\"}\n      endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n      value={parseFloat(value.toFixed(2))}\n      onChange={v => v !== undefined && setValue(v)}\n      sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n      inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n    <CustomNumberInput\n      color={value ? \"success\" : \"primary\"}\n      float\n      startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n      value={parseFloat((value / substatValue).toFixed(2))}\n      onChange={v => v !== undefined && setValue(v * substatValue)}\n      sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n      inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n      RV: <strong>{rv.toFixed(1)}%</strong>\n    </CardDark>\n  </Box>\n\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (cTC) => cTC && setCharTC(cTC)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { CardContent, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterAutocomplete from \"../../../Components/Character/CharacterAutocomplete\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={(n.info.key ?? \"\") + i} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { data } = useContext(DataContext)\n  return <>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const onClickHandler = useCharSelectionCallback()\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <CharacterAutocomplete fullWidth value={teamMateKey}\n      onChange={charKey => characterDispatch({ type: \"team\", index, charKey })}\n      disable={ck => ck === activeCharacterKey || (ck !== \"\" && active.team.includes(ck))}\n      labelText={t(\"teammate\", { count: index + 1 })}\n      defaultText={t(\"none\")}\n      defaultIcon={<PersonAdd />}\n      showDefault\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { data, teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute } from \"./optimization\"\nimport { fillBuffer } from \"./addedUtils\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): NumNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return { operation: \"sum_frac\", operands: [numerator, prod(numerator, -1), denom] }\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return cmp(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return cmp(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n\n      break\n    case \"threshold\":\n      const [value, threshold, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(threshold, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return cmp(value, threshold, ddx(pass, binding, diff), ddx(fail, binding, diff))\n\n    case \"match\": case \"lookup\": case \"subscript\": case \"data\":\n      throw new Error(`Unsupported [${operation}] node in ddx`)\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"info\": { \"key\": \"TenacityOfTheMillelith\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"hp_\", \"source\": \"TenacityOfTheMillelith\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"info\": { \"key\": \"ShimenawasReminiscence\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"atk_\", \"source\": \"ShimenawasReminiscence\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"info\": { \"key\": \"WanderersTroupe\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"eleMas\", \"source\": \"WanderersTroupe\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"eleMas\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"info\": { \"key\": \"CrimsonWitchOfFlames\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"vaporize_dmg_\", \"variant\": \"vaporize\", \"source\": \"CrimsonWitchOfFlames\" }, \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1\n\n  var [compute, mapping, buffer] = precompute([formula2], f => f.path[1])\n  fillBuffer(stats, mapping, buffer)\n  var result = compute()[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  var res2 = compute()[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  var [c_dhp_, mapping2, buffer2] = precompute([dhp_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer2[mapping2[k] ?? 0] = v)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_()[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  var [c_dhp, mapping3, buffer3] = precompute([dhp], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer3[mapping3[k] ?? 0] = v)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp()[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  var [c_datk_, buffer4, mapping4] = precompute([datk_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer4[mapping4[k] ?? 0] = v)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_()[0])\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  var [c_deleMas, mapping5, buffer5] = precompute([deleMas], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer5[mapping5[k] ?? 0] = v)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas()[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, 5) / 1000 : Artifact.substatValue(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\nimport { fillBuffer } from \"../../../../Formula/addedUtils\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, art.rarity) / 1000 : Artifact.substatValue(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: NumNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: NumNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n  const [evalFn, mapping, buffer] = precompute(evalOpt, f => f.path[1])\n\n  let stats = toStats(curBuild)\n  fillBuffer(stats, mapping, buffer)\n  const dmg0 = evalFn()[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    Object.values(mapping).forEach(k => buffer[k] = 0)  // Need to reset buffer before evaluating\n    fillBuffer(stats, mapping, buffer)\n    const out = evalFn()\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database.arts.get(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../TabOptimize/Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objectKeyMap, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { DynStat } from '../TabOptimize/common';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useFilters, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys, levelLow, levelHigh, artSetExclusion } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const equippedArts = database.chars.get(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    const curEquip: QueryBuild = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art ? toQueryArtifact(art) : undefined\n    })\n    const curEquipSetKeys = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art?.setKey ?? ''\n    })\n    function respectSexExclusion(art: ICachedArtifact) {\n      const newSK = { ...curEquipSetKeys }\n      newSK[art.slotKey] = art.setKey\n      const skc: DynStat = {}\n      allSlotKeys.forEach(slotKey => skc[newSK[slotKey]] = (skc[newSK[slotKey]] ?? 0) + 1)\n      let pass = Object.entries(skc).every(([setKey, num]) => {\n        if (!artSetExclusion[setKey]) return true\n        switch (num) {\n          case 0: case 1:\n            return true\n          case 2: case 3:\n            return !artSetExclusion[setKey].includes(2)\n          case 4: case 5:\n            return !artSetExclusion[setKey].includes(4)\n          default:\n            throw Error('error in respectSex: num > 5')\n        }\n      })\n      if (!pass) return false\n\n      if (!artSetExclusion['rainbow']) return true\n      const nRainbow = Object.values(skc).reduce((a, b) => a + (b % 2), 0)\n      switch (nRainbow) {\n        case 0: case 1:\n          return true\n        case 2: case 3:\n          return !artSetExclusion['rainbow'].includes(2)\n        case 4: case 5:\n          return !artSetExclusion['rainbow'].includes(4)\n        default:\n          throw Error('error in respectSex: nRainbow > 5')\n      }\n    }\n\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .filter(respectSexExclusion)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useFilters || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      .filter(art => !useFilters || (levelLow <= art.level && art.level <= levelHigh))\n      .map(art => toQueryArtifact(art, 20))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    let nodes = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useFilters, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useFilters && <CardLight>\n                <CardContent sx={{ py: 1 }}>\n                  Artifact Level Filter\n                </CardContent>\n                <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n                  setLow={levelLow => buildSettingDispatch({ levelLow })}\n                  setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n                  setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n                  disabled={false}\n                />\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              }\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useFilters ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useFilters ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useFilters)}>enable filters</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editor />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { sgt } from '../../Data/SheetUtil';\n\nexport default function TravelerElementSelect() {\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { elementKey = \"anemo\", } = character\n\n  if (!(\"talents\" in characterSheet.sheet)) return null\n\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\n    {Object.keys(characterSheet.sheet.talents).map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { allCharacterKeys, CharacterKey } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport LevelSelect from '../../Components/LevelSelect';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\nimport TravelerElementSelect from './TravelerElementSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation()\n  useTitle(`${t(`char_${characterKey}_gen:name`)} - ${t(`page_character:tabs.${tab}`)}`)\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Box display=\"flex\" >\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n            <CharSelectDropdown />\n            <TravelerElementSelect />\n            <DetailStatButton />\n            <CustomMultiTargetButton />\n            <FormulasButton />\n          </Box>\n          {!!onClose && <CloseButton onClick={onClose} />}\n        </Box>\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n          <HitModeToggle size=\"small\" />\n          <InfusionAuraDropdown />\n          <ReactionToggle size=\"small\" />\n        </Box>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <CharacterPanel />\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent></FormulaDataWrapper>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const [open, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>Detailed Stats</Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete'\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.weapons.set(weaponId, { location: charKey }), [database, weaponId],)\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        {canEquip\n          ? <CharacterAutocomplete size=\"small\" sx={{ flexGrow: 1 }} disable={(v: any) => v === \"\"}\n            showDefault defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\n            value={location} onChange={equipOnChar} filter={filter} disableClearable />\n          : <LocationName location={location} />}\n        <ButtonGroup>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","import { strPadLeft } from \"./Util\"\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = 60 * SECOND_MS\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\n\nexport function msToUnits(ms: number) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nexport function timeString(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nexport function timeStringMs(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\n","import { WeaponKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nimport i18n from \"../i18n\";\nexport const weaponSortKeys = [\"level\", \"rarity\"]\nexport type WeaponSortKey = typeof weaponSortKeys[number]\n\nexport function weaponSortConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): SortConfigs<WeaponSortKey, ICachedWeapon> {\n  return {\n    level: {\n      getValue: wp => wp.level * wp.ascension ?? 0,\n      tieBreaker: \"rarity\"\n    },\n    rarity: {\n      getValue: wp => weaponSheets?.[wp.key]?.rarity,\n      tieBreaker: \"level\"\n    }\n  }\n}\nexport function weaponFilterConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\n  return {\n    rarity: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.rarity),\n    weaponType: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.weaponType),\n    // TODO: Add types to this. filter may or may not be an array?\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\n  }\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","props","theme","useTheme","options","useMemo","map","key","grouper","autoHighlight","multiple","disableCloseOnSelect","value","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","variant","InputLabelProps","style","color","palette","text","primary","length","type","renderOption","image","isSelected","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","component","Box","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","KeyMap","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","WeaponSelectionModal","show","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","allWeaponTypeKeys","weaponFilter","setWeaponfilter","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","weaponType","toLowerCase","open","onClose","py","container","spacing","item","autoFocus","target","InputProps","weaponKey","weaponSheet","lg","md","src","getImg","className","Assets","colored","large","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","ThumbSide","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","Chip","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","href","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","elementKey","specialNode","charEle","isMelee","otherStatReadNodes","eles","allElements","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","Worker_fn","Worker","makeid","disallowed","characters","charactersLength","result","charAt","Math","floor","random","Error","readKey","operation","operands","accu","isShallow","f","deleteKey","base","flower","forEach","art","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","cmp","foldProd","constant","source","console","log","sum","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","toFold","orig","reduce","todistrib","mapped","pop","prod","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","push","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","NaN","reduceFormula","allStats","slotArts","rows","mat","dyn","record","Array","fill","selectedPivots","c","pivot","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","slotKey","allArtifactSets","con","sumM","monomials","flat","prodM","cartesian","monos","ret","nxt","terms","constantM","readM","tag","foldLikeTerms","mono","mon","termsA","termsB","ai","splice","expandPoly","inheritTags","varMap","tagMap","varTags","lookup","hsh","hashNode","z","cmpNode","next","newTag","stat2tag","sop","toSOP","slotsLeft","sCount","fromEntries","slotUsage","filterProductPossible","pivotInplace","A","Aij","findPiv1","minloc","findPiv2","minMax","precompute","compute","mapping","buffer","fillBuffer","minval","toLinearUpperBound","toPureRead","slope","mon1","intercept","op","flippedResOp","flipOps","resf","d","handleResArg","rop","cop","thresh","minVal","maxVal","em","denom","minEM","maxEM","loc","sqrt","below","nodesToMap","t2","nt","lins","err","bounds","nVar","boundScale","scaleProd","soln","cons","coords","objective","Ab","tableau","Ai","cj","ijTrack","ij","targ","side","ncol","backtrack","solveLP","slice","wi","lub","lin","constVal","pv","thresholdExclusions","excl","exc","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","forceRename","affineNodes","topLevelAffine","visit","isAffine","_op","dynKeys","nonConst","assertUnreachable","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","objectMap","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","ranges","range","reads","_f","computeMinMax","minMaxes","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","build","kind","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","database","DatabaseContext","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","setExclusionSet","slots","set4CondNums","setEffects","doc","defIconSrc","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","alignContent","CharacterSheet","marginTop","BusinessCenter","OptimizationTargetContext","createContext","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","computeUIData","dataObjForWeapon","WeaponNameTooltip","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","newBuild","chars","equipArtifacts","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","defThreads","navigator","hardwareConcurrency","initialTabOptimizeDBState","equipmentPriority","threads","useOptimizeDBState","useDBState","UseEquipped","useEquippedArts","useBoolState","tempEquipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","mainStatVal","endsWith","substat","accurateValue","reduceSubProblem","subp","constraints","depth","filters","mins","maxw","minw","unionFilterUpperLower","tagNodePairs","reducedNodes","tagsToKill","newTerms","reducePolynomial","toNumNode","active","newOptTarget","newConstraints","newMins","newArtExcl","feasibleKeys","feasible4sets","feasible2sets","allowedCnts","cnt","reducedExcl","fi","wixs","ws","baseC","li","ixs0","w0","accum","ix","baseBuffer","ixsi","applyLinearForm","newFilters","filterVec","filterIxs","slotVals","filterArtsVec2","minww","maxww","slotUpperLowerVecW","cache","toArtifactBySlotVec","allKeysList","problemSetup","optimizationTargetNode","artSetExclFull","objectKeyValueMap","constraintsEP","opttargetEP","slotUL","slotUpperLowerVec","statsUpperLowerVec","minMaxEst","ixs","ww","baseVal","wtot","minMaxWeightVec","initialProblem","initialReducedProblem","TabBuild","compareData","initGlobalSettings","tcMode","buildStatus","setBuildStatus","setchartData","setArtsDirty","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","numBuilds","currentPageIndex","setCurrentPageIndex","numPages","ceil","maxArtsToShowPerPage","setPageIdx","cancelToken","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","numBuild","_count","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","cantTakeList","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","objPathValue","targetNode","valueFilter","cancelled","Promise","optimize","plotBaseNode","artsVec","masterInfo","ready","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","PageBrowser","pageIdx","setPageIdex","Provider","BuildList","DataContextWrapper","join","providerValue","Pagination","page","CompareBuildButton","artId","onShow","newArt","artmap","dataProviderValue","arrow","Difference","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponFilterConfigs","sortConfigs","weaponSortConfigs","setRarity","sortFunction","star","TextField","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","aid","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","Favorite","FavoriteBorder","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTheorycraft","defWeapon","charTCs","getWithInit","charTC","setCharTC","cTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFromEquipped","eWeapon","newData","artifact","startsWith","lock","setArtifact","data_","setSubstatsType","setSubstats","overriderArtData","overrideWeapon","charUIData","dataContextValue","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","flexshrink","titleTypographyProps","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","setValue","deleteValue","rest","remaining","ArtifactSetEditor","disableClearable","shape","setName","DeleteForever","rv","substatType","ArtifactSubstatEditor","substatValue","parseFloat","pr","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","resonanceSheets","res","desc","activeCharacterKey","teamMateKey","onClickHandler","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","CharacterAutocomplete","charKey","labelText","PersonAdd","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","getTalent","sheets","sts","zero_deriv","funct","binding","diff","ddx","ops","da","db","numerator","arg1","arg2","quadrinomials","quadrinomial","nextRow","prev","gaussPDF","mu","sig2","exp","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","slow","calc4th","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","toEval","fo","evalOpt","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","artifacts","gaussConstrained","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","CustomTooltip","payload","aspect","margin","Label","offset","angle","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","dot","legendType","tooltipType","activeDot","ReferenceLine","ReferenceDot","radius","direction","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useFilters","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","arti","pageIdex","setpageIdex","invScrollRef","artifactsToShow","toShow","minObj0","maxObj0","thr","setPage","zz","respectSexExclusion","newSK","curEquipSetKeys","skc","equippedArts","curEquip","artUpOpt","upOpt","faCalculator","ShowingArt","numShowing","TravelerElementSelect","sgt","talents","CharacterDisplay","useParams","allCharacterKeys","CharacterDisplayCard","useMatch","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Calculate","Science","BarChart","onModalOpen","onDelete","cs","falseWrapperFunc","equipOnChar","falseWrapper","noWrap","displayVal","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","getValue","wp","tieBreaker","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","replace","module","ex","ExitStatus","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","runCaller"],"sourceRoot":""}