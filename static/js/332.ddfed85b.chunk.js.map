{"version":3,"file":"static/js/332.ddfed85b.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/ConditionalWrapper.tsx","Components/SortByButton.tsx","Components/StarDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Data/Resonance.tsx","PageCharacter/CharacterSelectionModal.tsx","ReactHooks/useCharMeta.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useForceUpdate.tsx","ReactHooks/useTeamData.tsx","ReactHooks/useWeapon.tsx","Util/MultiSelect.ts","Util/SortByFilters.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\nimport Assets from '../../Assets/Assets';\nimport Artifact from '../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { ICachedArtifact } from '../../Types/artifact';\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\nimport ArtifactTooltip from './ArtifactTooltip';\n\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\n  const artifactSheet = usePromise(() => art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\n  // Blank artifact slot icon\n  if (!art || !artifactSheet)\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\n        <Box\n          sx={{\n            position: \"absolute\",\n            width: \"70%\", height: \"70%\",\n            left: \"50%\", top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            opacity: 0.7\n          }}\n          component=\"img\"\n          src={Assets.slot[key]}\n        />\n      </Box>\n    </CardDark>\n\n  // Actual artifact icon + info\n  const { mainStatKey, rarity, level } = art\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ?? \"secondary\"\n\n  return <ArtifactTooltip art={art}><CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\n    <Box\n      component=\"img\"\n      className={`grad-${rarity}star`}\n      src={artifactSheet.slotIcons[key]}\n      maxWidth=\"100%\"\n      maxHeight=\"100%\"\n    />\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\n      <strong><SqBadge sx={{ p: 0.5 }} color={Artifact.levelVariant(level)}><strong>+{level}</strong></SqBadge></strong>\n    </Typography>\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0 }}>\n      <SqBadge color={color} sx={{ p: 0.5 }}>{StatIcon[mainStatKey]}</SqBadge>\n    </Typography>\n  </CardDark></ArtifactTooltip>\n}\n","import { Box, Skeleton, Typography } from \"@mui/material\";\nimport { Suspense } from \"react\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedArtifact, ICachedSubstat } from \"../../Types/artifact\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport SqBadge from \"../SqBadge\";\nimport { StarsDisplay } from \"../StarDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\n\nexport default function ArtifactTooltip({ art, children }: { art: ICachedArtifact, children: JSX.Element }) {\n  const fallback = <Box>\n    <Skeleton variant=\"rectangular\" width={100} height={100} />\n  </Box>\n  const title = <Suspense fallback={fallback}>\n    <ArtifactData art={art} />\n  </Suspense>\n\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n    {children}\n  </BootstrapTooltip>\n}\nfunction ArtifactData({ art }: { art: ICachedArtifact }) {\n  const sheet = usePromise(() => ArtifactSheet.get(art.setKey), [art.setKey])\n  const { slotKey, level, rarity, mainStatKey, substats } = art\n  const slotName = sheet?.getSlotName(slotKey)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const mainIcon = StatIcon[mainStatKey]\n  const mainVariant = KeyMap.getVariant(mainStatKey)\n  return <Box p={1}>\n    <Typography variant='h6'>{artifactSlotIcon(slotKey)} {slotName}</Typography>\n    <Typography variant=\"subtitle1\" color={`${mainVariant}.main`}>{mainIcon} {KeyMap.get(mainStatKey)} {cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, level) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</Typography>\n    <Typography variant=\"subtitle2\" sx={{ display: \"flex\", justifyContent: \"space-between\" }} ><StarsDisplay stars={rarity} /><SqBadge color={Artifact.levelVariant(level)}>+{level}</SqBadge> </Typography>\n    <Box py={1}>\n      {substats.map((stat: ICachedSubstat) => !!stat.value && <Typography key={stat.key} color={`roll${clamp(stat.rolls.length, 1, 6)}.main`}>\n        {StatIcon[stat.key]} {KeyMap.getStr(stat.key)} <strong>{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${KeyMap.unit(stat.key)}`}</strong>\n      </Typography>)}\n    </Box>\n\n    <Typography color=\"success.main\">{sheet?.name}</Typography>\n  </Box>\n}\n","import { Box, Typography } from '@mui/material';\nimport { useMemo } from 'react';\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\nimport { uiInput as input } from '../../Formula';\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useWeapon from '../../ReactHooks/useWeapon';\nimport { ICachedWeapon } from '../../Types/weapon';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\n\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n  return <CardDark>\n    <Box display=\"flex\" >\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\n        <Box\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          width=\"100%\"\n          height=\"auto\"\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ p: 1 }}>\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\n        </Typography>\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\n          <WeaponStat node={UIData.get(input.weapon.main)} />\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\n        </Typography>\n\n      </Box>\n    </Box>\n  </CardDark>\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  return <SqBadge color=\"secondary\">{node.info.icon} {nodeVStr(node)}</SqBadge>\n}\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj, TeamData } from '../../Context/DataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { ascensionMaxLevel } from '../../Data/LevelData';\nimport { DatabaseContext } from '../../Database/Database';\nimport { uiInput as input } from '../../Formula';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useCharMeta from '../../ReactHooks/useCharMeta';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport { ICachedArtifact } from '../../Types/artifact';\nimport { ICachedCharacter } from '../../Types/character';\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\nimport { range } from '../../Util/Util';\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\nimport CardLight from '../Card/CardLight';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport { NodeFieldDisplay } from '../FieldDisplay';\nimport SqBadge from '../SqBadge';\nimport { StarsDisplay } from '../StarDisplay';\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\nimport CharacterCardPico from './CharacterCardPico';\n\ntype CharacterCardProps = {\n  characterKey: CharacterKey,\n  onClick?: (characterKey: CharacterKey) => void,\n  onClickHeader?: (characterKey: CharacterKey) => void,\n  onClickTeammate?: (characterKey: CharacterKey) => void,\n  artifactChildren?: Displayable,\n  weaponChildren?: Displayable,\n  characterChildren?: Displayable,\n  footer?: Displayable,\n  hideStats?: boolean\n  isTeammateCard?: boolean,\n}\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, hideStats, isTeammateCard }: CharacterCardProps) {\n  const { database } = useContext(DatabaseContext)\n  const { teamData: teamDataContext } = useContext(DataContext)\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const characterDispatch = useCharacterReducer(characterKey)\n  const data = teamData?.[characterKey]?.target\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClickHandler],\n  )\n\n  const characterContextObj: CharacterContextObj | undefined = useMemo(() => character && characterSheet && {\n    character, characterSheet, characterDispatch\n  }, [character, characterSheet, characterDispatch])\n  const dataContextObj: dataContextObj | undefined = useMemo(() => data && teamData && ({\n    data,\n    teamData,\n  }), [data, teamData])\n\n  const { favorite } = useCharMeta(characterKey)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={600} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n      <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\n        <IconButton sx={{ p: 0.5 }} onClick={_ => database.charMeta.set(characterKey, { favorite: !favorite })}>\n          {favorite ? <Favorite /> : <FavoriteBorder />}\n        </IconButton>\n      </Box>\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n        {(character && dataContextObj && characterContextObj) ?\n          <ExistingCharacterCardContent\n            characterContextObj={characterContextObj}\n            dataContextObj={dataContextObj}\n            characterKey={characterKey}\n            onClick={onClick}\n            onClickHeader={onClickHeader}\n            isTeammateCard={isTeammateCard}\n            character={character}\n            onClickTeammate={onClickTeammate}\n            hideStats={hideStats}\n            weaponChildren={weaponChildren}\n            artifactChildren={artifactChildren}\n            characterChildren={characterChildren}\n          /> : <NewCharacterCardContent characterKey={characterKey} />}\n      </ConditionalWrapper>\n      {footer}\n    </CardLight>\n\n  </Suspense>\n}\n\ntype ExistingCharacterCardContentProps = {\n  characterContextObj: CharacterContextObj\n  dataContextObj: dataContextObj\n  characterKey: CharacterKey\n  onClick?: (characterKey: CharacterKey) => void\n  onClickHeader?: (characterKey: CharacterKey) => void\n  isTeammateCard?: boolean\n  character: ICachedCharacter\n  onClickTeammate?: (characterKey: CharacterKey) => void\n  hideStats?: boolean\n  weaponChildren?: Displayable\n  artifactChildren?: Displayable\n  characterChildren?: Displayable\n}\nfunction ExistingCharacterCardContent({ characterContextObj, dataContextObj, characterKey, onClick, onClickHeader, isTeammateCard, character, onClickTeammate, hideStats, weaponChildren, artifactChildren, characterChildren }: ExistingCharacterCardContentProps) {\n  return <CharacterContext.Provider value={characterContextObj}><DataContext.Provider value={dataContextObj}>\n    <Header characterKey={characterKey} onClick={!onClick ? onClickHeader : undefined} >\n      <HeaderContent />\n    </Header>\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\n      <Artifacts />\n      {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\n        <Grid item xs={1} height=\"100%\">\n          <WeaponCardPico weaponId={character.equippedWeapon} />\n        </Grid>\n        {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\n      </Grid>}\n      {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\n      {!isTeammateCard && !hideStats && <Stats />}\n      {weaponChildren}\n      {artifactChildren}\n      {characterChildren}\n    </CardContent>\n  </DataContext.Provider></CharacterContext.Provider>\n}\n\nfunction NewCharacterCardContent({ characterKey }: { characterKey: CharacterKey }) {\n  return < >\n    <Header characterKey={characterKey} >\n      <HeaderContentNew characterKey={characterKey} />\n    </Header>\n    <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1, height: \"100%\" }}>\n    </CardContent>\n  </>\n}\n\nfunction Header({ children, characterKey, onClick }: { children: JSX.Element, characterKey: CharacterKey, onClick?: (characterKey: CharacterKey) => void }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClick, characterKey],\n  )\n  if (!characterSheet) return null\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n    <Box display=\"flex\"\n      position=\"relative\"\n      className={`grad-${characterSheet.rarity}star`}\n      sx={{\n        \"&::before\": {\n          content: '\"\"',\n          display: \"block\", position: \"absolute\",\n          left: 0, top: 0,\n          width: \"100%\", height: \"100%\",\n          opacity: 0.7,\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\n        }\n      }}\n      width=\"100%\" >\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        <Box\n          component=\"img\"\n          src={characterSheet.thumbImg}\n          width=\"100%\"\n          height=\"auto\"\n          maxWidth={256}\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        {children}\n      </Box>\n    </Box>\n  </ConditionalWrapper>\n}\n\nfunction HeaderContent() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterEle = data.get(input.charEle).value as ElementKey\n  const characterLevel = data.get(input.lvl).value\n  const constellation = data.get(input.constellation).value\n  const ascension = data.get(input.asc).value\n  const autoBoost = data.get(input.bonus.auto).value\n  const skillBoost = data.get(input.bonus.skill).value\n  const burstBoost = data.get(input.bonus.burst).value\n\n  const tAuto = data.get(input.total.auto).value\n  const tSkill = data.get(input.total.skill).value\n  const tBurst = data.get(input.total.burst).value\n\n  return <>\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\n    <Grid container spacing={1} flexWrap=\"nowrap\">\n      <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\n        <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\n        <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n      </Grid>\n      <Grid item>\n        <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\n      </Grid>\n    </Grid>\n    <Grid container spacing={1} flexWrap=\"nowrap\">\n      <Grid item>\n        <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\n      </Grid>\n      <Grid item>\n        <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\n      </Grid>\n      <Grid item>\n        <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\n      </Grid>\n    </Grid>\n    <Typography mt={1} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\n\n  </>\n}\n\nfunction HeaderContentNew({ characterKey }: { characterKey: CharacterKey }) {\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, database, gender])\n\n  if (!characterSheet) return null\n  return <>\n    <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterSheet.elementKey} sx={{ opacity: 0.85 }} />\n    <Box mt={1}>\n      <Typography variant=\"h4\"><SqBadge>NEW</SqBadge></Typography>\n    </Box>\n    <Typography mt={1.5} ><StarsDisplay stars={characterSheet.rarity} colored /></Typography>\n  </>\n}\n\nfunction Artifacts() {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\n      <Grid item key={key} xs={1}>\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\n      </Grid>\n    )}\n  </Grid>\n}\n\nfunction Stats() {\n  const { data } = useContext(DataContext)\n  return <Box sx={{ width: \"100%\" }} >\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\n    {data.get(input.special).info.name && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\n      {data.get(input.special).info.icon}\n      <Typography>{data.get(input.special).info.name}</Typography>\n    </Box>}\n  </Box>\n}\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback } from 'react';\nimport Assets from '../../Assets/Assets';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { ascensionMaxLevel } from '../../Data/LevelData';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { CharacterKey } from '../../Types/consts';\nimport BootstrapTooltip from '../BootstrapTooltip';\nimport CardDark from '../Card/CardDark';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\n\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\n  const { gender } = useDBMeta()\n  const teammateSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const character = useCharacter(characterKey)\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\n    [onClickHandler])\n  if (teammateSheet && character) {\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\n    </Suspense>\n\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\n        <BootstrapTooltip placement=\"top\" title={title}>\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\n            <Box\n              component=\"img\"\n              src={teammateSheet.thumbImgSide}\n              maxWidth=\"100%\"\n              maxHeight=\"100%\"\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\n            />\n          </Box>\n        </BootstrapTooltip>\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", top: 0, }}>\n          <strong><SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge></strong>\n        </Typography>\n        <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\n          <strong><SqBadge color=\"secondary\" >C{character.constellation}</SqBadge></strong>\n        </Typography>\n      </ConditionalWrapper>\n    </CardDark>\n  } else {\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\n    </CardDark>\n  }\n}\n","import { ReactNode } from \"react\";\n\ntype Prop = {\n  condition: boolean,\n  wrapper: (children: ReactNode) => ReactNode\n  falseWrapper?: (children: ReactNode) => ReactNode\n  children: ReactNode\n}\n// Wrap children with element provided by wrapper func when condition is true.\nexport default function ConditionalWrapper({ condition, wrapper, falseWrapper, children }: Prop) {\n  return (condition ? wrapper(children) : (falseWrapper ? falseWrapper(children) : children)) as JSX.Element;\n}","import { faSortAmountDownAlt, faSortAmountUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, ButtonGroup, ButtonGroupProps, MenuItem } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport DropdownButton from \"./DropdownMenu/DropdownButton\";\n\n// Assumes that all the sortKeys has corresponding translations in ui.json sortMap\nexport default function SortByButton<Key extends string>({ sortKeys, value, onChange, ascending, onChangeAsc, ...props }: ButtonGroupProps & {\n  sortKeys: Key[]\n  value: Key\n  onChange: (value: Key) => void\n  ascending: boolean\n  onChangeAsc: (value: boolean) => void\n}) {\n  const { t } = useTranslation(\"ui\")\n  return <Box display=\"flex\" alignItems=\"center\" gap={1}>\n    <Trans t={t} i18nKey={t(\"sortBy\") as any}>Sort by: </Trans>\n    <ButtonGroup {...props} >\n      <DropdownButton title={<Trans t={t} i18nKey={t(`sortMap.${value}`) as any}>{{ value: t(`sortMap.${value}`) }}</Trans>}>\n        {sortKeys.map(key =>\n          <MenuItem key={key} selected={value === key} disabled={value === key} onClick={() => onChange(key)}>{t(`sortMap.${key}`) as any}</MenuItem>)}\n      </DropdownButton>\n      <Button onClick={() => onChangeAsc(!ascending)} startIcon={<FontAwesomeIcon icon={ascending ? faSortAmountDownAlt : faSortAmountUp} className=\"fa-fw\" />}>\n        {ascending ? <Trans t={t} i18nKey=\"ascending\" >Ascending</Trans> : <Trans t={t} i18nKey=\"descending\" >Descending</Trans>}\n      </Button>\n    </ButtonGroup>\n  </Box>\n}\n","import { faStar } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Rarity } from '../Types/consts'\nimport ColorText from './ColoredText'\n\nexport const StarIcon = () => <FontAwesomeIcon icon={faStar} />\nexport const StarsDisplay = ({ stars, colored = false }: { stars: Rarity, colored?: boolean }) =>\n  <ColorText color={colored ? \"warning\" : undefined} >\n    {stars ? [...Array(stars).keys()].map((_, i) => <StarIcon key={i} />) : null}\n  </ColorText>\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\n\ntype SolidColoredToggleButtonPartial = {\n  baseColor?: ButtonProps[\"color\"];\n  selectedColor?: ButtonProps[\"color\"];\n}\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\n\n\nconst SolidColoredToggleButton = styled(ToggleButton, {\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\n  '&': {\n    backgroundColor: theme.palette[baseColor].main,\n    color: theme.palette[baseColor].contrastText,\n  },\n  '&:hover': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected': {\n    backgroundColor: theme.palette[selectedColor].main,\n    color: theme.palette[selectedColor].contrastText,\n  },\n  '&.Mui-selected:hover': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n  '&.Mui-disabled': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected.Mui-disabled': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n}));\n\nexport default SolidColoredToggleButton\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\nimport { allElements, ElementKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\nimport StatIcon from \"../StatIcon\";\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: ElementKey[]) => void\n  value: ElementKey[]\n}\nconst elementHandler = handleMultiSelect([...allElements])\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\n  return <ToggleButtonGroup exclusive value={value} {...props}>\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{StatIcon[ele]}</Box>\n    </SolidColoredToggleButton>)}\n  </ToggleButtonGroup>\n}\n","import { ToggleButton } from \"@mui/material\";\nimport Assets from \"../../Assets/Assets\";\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: WeaponTypeKey[]) => void\n  value: WeaponTypeKey[]\n}\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\n    </ToggleButton>)}\n  </SolidToggleButtonGroup>\n}\n","import { Box, Typography } from '@mui/material';\nimport { useMemo } from 'react';\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\nimport { uiInput as input } from '../../Formula';\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useWeapon from '../../ReactHooks/useWeapon';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport WeaponNameTooltip from './WeaponNameTooltip';\n\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n\n  const tooltipAddl = <Box>\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\n  </Box>\n\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\n        <Box\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          maxWidth=\"100%\"\n          maxHeight=\"100%\"\n          sx={{ mt: \"auto\" }}\n        />\n      </WeaponNameTooltip>\n    </Box>\n    <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", }}>\n      <strong><SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge></strong>\n    </Typography>\n    {weaponSheet.hasRefinement && <Typography sx={{ position: \"absolute\", fontSize: \"0.75rem\", lineHeight: 1, opacity: 0.85, pointerEvents: \"none\", bottom: 0, right: 0, }}>\n      <strong><SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge></strong>\n    </Typography>}\n  </CardDark>\n}\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\n  return <Typography>{node.info.icon} {nodeVStr(node)}</Typography>\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport { ReactElement, ReactNode, Suspense } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport ImgIcon from \"../Image/ImgIcon\";\n\ntype Data = {\n  sheet: WeaponSheet,\n  addlText?: any,\n  children: ReactElement<any, any> & ReactNode,\n}\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\n    {addlText}\n  </Suspense>\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n    {children}\n  </BootstrapTooltip>\n}\n","import StatIcon from \"../Components/StatIcon\";\nimport { Translate } from \"../Components/Translate\";\nimport { tally } from \"../Formula\";\nimport { inferInfoMut } from \"../Formula/api\";\nimport { UIData } from \"../Formula/uiData\";\nimport { equal, greaterEq, infoMut, percent, sum } from \"../Formula/utils\";\nimport KeyMap from \"../KeyMap\";\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\nimport { DocumentSection } from \"../Types/sheet\";\nimport { objectKeyValueMap } from \"../Util/Util\";\nimport { condReadNode, stg, st } from \"./SheetUtil\";\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\n\ntype IResonance = {\n  name: Displayable,\n  desc: Displayable,\n  icon: Displayable,\n  canShow: (data: UIData) => boolean\n  sections: DocumentSection[]\n}\n\nconst teamSize = sum(...allElements.map(ele => tally[ele]))\n\n// Protective Canopy\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\n\nconst protectiveCanopy: IResonance = {\n  name: tr(\"ProtectiveCanopy.name\"),\n  desc: tr(\"ProtectiveCanopy.desc\"),\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\n  sections: [{\n    teamBuff: true,\n    fields: Object.values(pcNodes).map(node => ({ node }))\n  }]\n}\n\n// Fervent Flames\nconst ffNode = greaterEq(teamSize, 4, greaterEq(tally.pyro, 2, percent(0.25)))\nconst ferventFlames: IResonance = {\n  name: tr(\"FerventFlames.name\"),\n  desc: tr(\"FerventFlames.desc\"),\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.cryo\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: ffNode\n    }]\n  }]\n}\n\n// Soothing Waters\nconst swNode = greaterEq(teamSize, 4, greaterEq(tally.hydro, 2, percent(0.25)))\nconst soothingWaters: IResonance = {\n  name: tr(\"SoothingWater.name\"),\n  desc: tr(\"SoothingWater.desc\"),\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.pyro\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: swNode\n    }]\n  }]\n}\n\n//ShatteringIce\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\nconst condSI = condReadNode(condSIPath)\nconst siNode = greaterEq(teamSize, 4, greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15))))\nconst shatteringIce: IResonance = {\n  name: tr(\"ShatteringIce.name\"),\n  desc: tr(\"ShatteringIce.desc\"),\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.electro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }, {\n    teamBuff: true,\n    path: condSIPath,\n    value: condSI,\n    name: trm(\"ShatteringIce.cond\"),\n    header: {\n      title: tr(\"ShatteringIce.name\"),\n      icon: StatIcon.cryo,\n    },\n    states: {\n      on: {\n        fields: [{\n          node: siNode\n        }]\n      }\n    }\n  }]\n}\n\n// High Voltage\nconst highVoltage: IResonance = {\n  name: tr(\"HighVoltage.name\"),\n  desc: tr(\"HighVoltage.desc\"),\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.hydro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }]\n}\n\n// Impetuous Winds\nconst iwNodeStam = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.15)))\nconst iwNodeMove = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(0.1)))\nconst iwNodeCD = greaterEq(teamSize, 4, greaterEq(tally.anemo, 2, percent(-0.05)))\nconst impetuousWinds: IResonance = {\n  name: tr(\"ImpetuousWinds.name\"),\n  desc: tr(\"ImpetuousWinds.desc\"),\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      node: iwNodeStam\n    }, {\n      node: iwNodeMove\n    }, {\n      node: iwNodeCD\n    }]\n  }]\n}\n\n// Enduring Rock\nconst condERPath = [\"resonance\", \"EnduringRock\"]\nconst condER = condReadNode(condERPath)\nconst erNodeshield_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, percent(0.15)))\nconst erNodeDMG_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15))))\nconst erNodeRes_ = greaterEq(teamSize, 4, greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2))))\nconst enduringRock: IResonance = {\n  name: tr(\"EnduringRock.name\"),\n  desc: tr(\"EnduringRock.desc\"),\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"EnduringRock.desc\"),\n    fields: [{\n      node: erNodeshield_\n    }]\n  }, {\n    teamBuff: true,\n    path: condERPath,\n    value: condER,\n    header: {\n      title: tr(\"EnduringRock.name\"),\n      icon: StatIcon.geo,\n    },\n    name: st(\"protectedByShield\"),\n    states: {\n      on: {\n        fields: [{\n          node: erNodeDMG_\n        }, {\n          node: erNodeRes_\n        }, {\n          text: stg(\"duration\"),\n          value: 15,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\n// Sprawling Canopy\nconst condSC2elePath = [\"resonance\", \"SprawlingCanopy2ele\"]\nconst condSC2ele = condReadNode(condSC2elePath)\nconst condSC3elePath = [\"resonance\", \"SprawlingCanopy3ele\"]\nconst condSC3ele = condReadNode(condSC3elePath)\nconst scBase_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, 50, KeyMap.info(\"eleMas\")))\nconst sc2ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC2ele, \"on\", 30, KeyMap.info(\"eleMas\"))))\nconst sc3ele_eleMas = greaterEq(teamSize, 4, greaterEq(tally.dendro, 2, equal(condSC3ele, \"on\", 20, KeyMap.info(\"eleMas\"))))\nconst sprawlingGreenery: IResonance = {\n  name: tr(\"SprawlingGreenery.name\"),\n  desc: tr(\"SprawlingGreenery.desc\"),\n  icon: <span>{StatIcon.dendro} {StatIcon.dendro}</span>,\n  canShow: (data: UIData) => data.get(tally.dendro).value >= 2 && data.get(teamSize).value >= 4,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"SprawlingGreenery.desc\"),\n    fields: [{ node: scBase_eleMas }]\n  }, {\n    teamBuff: true,\n    path: condSC2elePath,\n    value: condSC2ele,\n    header: {\n      title: tr(\"SprawlingGreenery.name\"),\n      icon: StatIcon.dendro,\n    },\n    name: trm(\"SprawlingGreenery.cond2ele\"),\n    states: {\n      on: {\n        fields: [{\n          node: sc2ele_eleMas\n        }, {\n          text: stg(\"duration\"),\n          value: 6,\n          unit: \"s\"\n        }]\n      }\n    }\n  }, {\n    teamBuff: true,\n    path: condSC3elePath,\n    value: condSC3ele,\n    header: {\n      title: tr(\"SprawlingGreenery.name\"),\n      icon: StatIcon.dendro,\n    },\n    name: trm(\"SprawlingGreenery.cond3ele\"),\n    states: {\n      on: {\n        fields: [{\n          node: sc3ele_eleMas\n        }, {\n          text: stg(\"duration\"),\n          value: 6,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\n\nexport const resonanceSheets: IResonance[] = [\n  protectiveCanopy,\n  ferventFlames,\n  soothingWaters,\n  shatteringIce,\n  highVoltage,\n  impetuousWinds,\n  enduringRock,\n  sprawlingGreenery,\n]\n\nexport const resonanceData = inferInfoMut({\n  premod: {\n    ...pcNodes,\n    atk_: ffNode,\n    hp_: swNode,\n    staminaDec_: iwNodeStam,\n    moveSPD_: iwNodeMove,\n    cdRed_: iwNodeCD,\n    shield_: erNodeshield_,\n    all_dmg_: erNodeDMG_,\n    geo_enemyRes_: erNodeRes_,\n    eleMas: infoMut(sum(scBase_eleMas, sc2ele_eleMas, sc3ele_eleMas), { pivot: true }),\n  },\n  total: {\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\n    critRate_: siNode\n  }\n})\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Tooltip, tooltipClasses, TooltipProps, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { ChangeEvent, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../Components/Card/CardDark\";\nimport CardLight from \"../Components/Card/CardLight\";\nimport CharacterCard from \"../Components/Character/CharacterCard\";\nimport CloseButton from \"../Components/CloseButton\";\nimport ModalWrapper from \"../Components/ModalWrapper\";\nimport SortByButton from \"../Components/SortByButton\";\nimport SqBadge from \"../Components/SqBadge\";\nimport { StarsDisplay } from \"../Components/StarDisplay\";\nimport ElementToggle from \"../Components/ToggleButton/ElementToggle\";\nimport WeaponToggle from \"../Components/ToggleButton/WeaponToggle\";\nimport { DataContext } from \"../Context/DataContext\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { ascensionMaxLevel } from \"../Data/LevelData\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport useCharacter from \"../ReactHooks/useCharacter\";\nimport useDBMeta from \"../ReactHooks/useDBMeta\";\nimport useForceUpdate from \"../ReactHooks/useForceUpdate\";\nimport usePromise from \"../ReactHooks/usePromise\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { allCharacterKeys, CharacterKey } from \"../Types/consts\";\nimport { characterFilterConfigs, characterSortConfigs, CharacterSortKey, characterSortMap } from \"../Util/CharacterSort\";\nimport { filterFunction, sortFunction } from \"../Util/SortByFilters\";\n\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\n\ntype CharacterSelectionModalProps = {\n  show: boolean,\n  newFirst?: boolean\n  onHide: () => void,\n  onSelect?: (ckey: CharacterKey) => void,\n  filter?: characterFilter\n}\nconst sortKeys = Object.keys(characterSortMap)\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\n  const { t } = useTranslation([\"page_character\", \"charNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const [state, setState] = useState(() => database.displayCharacter.get())\n  useEffect(() => database.displayCharacter.follow((r, s) => setState(s)), [database, setState])\n\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n\n  // character favorite updater\n  useEffect(() => database.charMeta.followAny(s => forceUpdate()), [forceUpdate, database])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n  const deferredState = useDeferredValue(state)\n  const deferredDbDirty = useDeferredValue(dbDirty)\n  const characterKeyList = useMemo(() => {\n    if (!characterSheets) return []\n    const { element, weaponType, sortType, ascending } = deferredState\n    const sortByKeys = [...(newFirst ? [\"new\"] : []), ...(characterSortMap[sortType] ?? [])] as CharacterSortKey[]\n    return deferredDbDirty && allCharacterKeys\n      .filter(key => filter(database.chars.get(key), characterSheets[key]))\n      .filter(filterFunction({ element, weaponType, name: deferredSearchTerm }, characterFilterConfigs(database, characterSheets)))\n      .sort(sortFunction(sortByKeys, ascending, characterSortConfigs(database, characterSheets), [\"new\", \"favorite\"]))\n  }, [database, newFirst, deferredState, characterSheets, deferredDbDirty, deferredSearchTerm, filter])\n\n  if (!characterSheets) return null\n\n  const { weaponType, element, sortType, ascending } = state\n\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", alignItems: \"center\", gap: 1, flexWrap: \"wrap\" }}>\n        <WeaponToggle sx={{ height: \"100%\" }} onChange={weaponType => database.displayCharacter.set({ weaponType })} value={weaponType} size=\"small\" />\n        <ElementToggle sx={{ height: \"100%\" }} onChange={element => database.displayCharacter.set({ element })} value={element} size=\"small\" />\n        <Box flexGrow={1}>\n          <TextField\n            autoFocus\n            value={searchTerm}\n            onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n            label={t(\"characterName\")}\n            size=\"small\"\n            sx={{ height: \"100%\" }}\n            InputProps={{\n              sx: { height: \"100%\" }\n            }}\n          />\n        </Box>\n        <SortByButton sx={{ height: \"100%\" }}\n          sortKeys={sortKeys} value={sortType} onChange={sortType => database.displayCharacter.set({ sortType })}\n          ascending={ascending} onChangeAsc={ascending => database.displayCharacter.set({ ascending })} />\n        <CloseButton onClick={onHide} />\n      </CardContent>\n      <Divider />\n      <DataContext.Provider value={{ teamData: undefined } as any}>\n        <CardContent><Grid container spacing={1} columns={{ xs: 2, sm: 3, md: 4, lg: 5, }}>\n          {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={1} >\n            {/* <CharacterCard key={characterKey} hideStats characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} /> */}\n            <SelectionCard characterKey={characterKey} onClick={() => { onHide(); onSelect?.(characterKey) }} />\n          </Grid>)}\n        </Grid></CardContent>\n      </DataContext.Provider>\n    </CardDark>\n  </ModalWrapper>\n}\n\nconst CustomTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))({\n  [`& .${tooltipClasses.tooltip}`]: {\n    padding: 0,\n  },\n});\n\nfunction SelectionCard({ characterKey, onClick }: { characterKey: CharacterKey, onClick: () => void }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const character = useCharacter(characterKey)\n  const { level = 1, ascension = 0, constellation = 0 } = character ?? {}\n  return <CustomTooltip enterDelay={300} enterNextDelay={300} arrow placement=\"bottom\" title={\n    <Box sx={{ width: 300 }}>\n      <CharacterCard hideStats characterKey={characterKey} />\n    </Box>\n  }>\n    <Box>\n      <CardLight sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>\n        <CardActionArea onClick={onClick}>\n          <Box display=\"flex\"\n            position=\"relative\"\n            className={`grad-${characterSheet?.rarity}star`}\n            sx={{\n              \"&::before\": {\n                content: '\"\"',\n                display: \"block\", position: \"absolute\",\n                left: 0, top: 0,\n                width: \"100%\", height: \"100%\",\n                opacity: 0.5,\n                backgroundImage: `url(${characterSheet?.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\n              }\n            }}\n            width=\"100%\" >\n            <Box flexShrink={1} sx={{ maxWidth: { xs: \"33%\", lg: \"30%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\n              <Box\n                component=\"img\"\n                src={characterSheet?.thumbImg}\n                width=\"100%\"\n                height=\"auto\"\n                maxWidth={256}\n                sx={{ mt: \"auto\" }}\n              />\n            </Box>\n            <Box flexGrow={1} sx={{ pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1} justifyContent=\"space-evenly\">\n              <Typography variant=\"body2\" ><SqBadge color={characterSheet?.elementKey} sx={{ opacity: 0.85, textShadow: \"0 0 5px gray\" }}>{characterSheet?.name}</SqBadge></Typography>\n              {character ? <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n                <Box sx={{ textShadow: \"0 0 5px gray\" }}>\n                  <Typography variant=\"body2\" component=\"span\" whiteSpace=\"nowrap\" >Lv. {level}</Typography>\n                  <Typography variant=\"body2\" component=\"span\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n                </Box>\n                <Typography variant=\"body2\" >C{constellation}</Typography>\n              </Box> : <Typography component=\"span\" variant=\"body2\" ><SqBadge>NEW</SqBadge></Typography>}\n              <Typography variant=\"body2\" ><StarsDisplay stars={characterSheet?.rarity ?? 1} colored /></Typography>\n            </Box>\n          </Box>\n        </CardActionArea>\n      </CardLight>\n    </Box>\n  </CustomTooltip>\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { CharacterKey } from \"../Types/consts\"\n\nexport default function useCharMeta(key: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charMeta, setCharMetaState] = useState(() => database.charMeta.get(key))\n  useEffect(() => database.charMeta.follow(key, (k, r, dbMeta) => setCharMetaState(dbMeta)), [key, database])\n  useEffect(() => setCharMetaState(database.charMeta.get(key)), [database, key])\n  return charMeta\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { CharacterKey } from \"../Types/consts\";\n\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [character, updateCharacter] = useState(database.chars.get(characterKey))\n  useEffect(() => updateCharacter(database.chars.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    characterKey ? database.chars.follow(characterKey, (k, r, v) => r === \"update\" && updateCharacter(v)) : undefined,\n    [characterKey, updateCharacter, database])\n  return character\n}\n","import { useCallback, useContext } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { IConditionalValues } from \"../Types/sheet\";\nimport { deepClone } from \"../Util/Util\";\n\ntype characterReducerBonusStatsAction = {\n  type: \"editStats\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerenemyOverrideAction = {\n  type: \"enemyOverride\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerResetStatsAction = {\n  type: \"resetStats\",\n  statKey: string\n}\ntype characterTeamAction = {\n  type: \"team\",\n  index: number,\n  charKey: CharacterKey | \"\"\n}\ntype characterTeamConditional = {\n  type: \"teamConditional\",\n  teamMateKey: CharacterKey,\n  conditional: IConditionalValues\n}\nexport type characterReducerAction = characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | characterTeamConditional | Partial<ICachedCharacter>\n\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\n\n  const { database } = useContext(DatabaseContext)\n\n  return useCallback((action: characterReducerAction): void => {\n    if (!characterKey) return\n    const character = database.chars.get(characterKey)\n    if (!character) return\n    if (\"type\" in action) switch (action.type) {\n      case \"enemyOverride\": {\n        const enemyOverride = character.enemyOverride\n        const { statKey, value } = action\n        if (enemyOverride[statKey] === value) break\n        database.chars.set(characterKey, { ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\n        break\n      }\n      case \"editStats\": {\n        const { statKey, value } = action\n        const bonusStats = deepClone(character.bonusStats)\n        if (bonusStats[statKey] === value) break\n        if (!value) delete bonusStats[statKey]\n        else bonusStats[statKey] = value\n        database.chars.set(characterKey, { ...character, bonusStats })\n        break\n      }\n      case \"resetStats\": {\n        const { statKey } = action\n        const bonusStats = character.bonusStats\n        delete bonusStats[statKey]\n        database.chars.set(characterKey, { ...character, bonusStats })\n        break\n      }\n      case \"teamConditional\": {\n        const { teamMateKey, conditional } = action\n        const teamConditional = deepClone(character.teamConditional)\n        teamConditional[teamMateKey] = conditional\n        database.chars.set(characterKey, { ...character, teamConditional })\n        break\n      }\n      case \"team\": {\n        const { team: team_ } = character\n        const team = [...team_] as ICachedCharacter[\"team\"]\n        const { index, charKey } = action\n        team[index] = charKey\n        // update src character\n        database.chars.set(characterKey, { ...character, team })\n      }\n    } else\n      database.chars.set(characterKey, { ...character, ...action })\n  }, [characterKey, database])\n}\n","import { useCallback, useState } from \"react\"\n\nexport default function useForceUpdate(): [object, () => void] {\n  const [stateDirty, update] = useState({})\n  const forceUpdateHook = useCallback(() => update({}), [])\n  return [stateDirty, forceUpdateHook]\n}","import { useContext, useDeferredValue, useEffect } from \"react\";\nimport { TeamData } from \"../Context/DataContext\";\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { resonanceData } from \"../Data/Resonance\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\nimport { common } from \"../Formula\";\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, mergeData, uiDataForTeam } from \"../Formula/api\";\nimport { Data } from \"../Formula/type\";\nimport { ICachedArtifact } from \"../Types/artifact\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport { objectMap } from \"../Util/Util\";\nimport useForceUpdate from \"./useForceUpdate\";\nimport usePromise from \"./usePromise\";\n\ntype TeamDataBundle = {\n  teamData: Dict<CharacterKey, Data[]>\n  teamBundle: Dict<CharacterKey, CharBundle>\n}\n\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon): TeamData | undefined {\n  const { database } = useContext(DatabaseContext)\n  const [dbDirty, setDbDirty] = useForceUpdate()\n  const dbDirtyDeferred = useDeferredValue(dbDirty)\n  const data = usePromise(() => getTeamDataCalc(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirtyDeferred, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\n\n  useEffect(() =>\n    characterKey ? database.chars.follow(characterKey, setDbDirty) : undefined,\n    [characterKey, setDbDirty, database])\n\n  return data\n}\n\nasync function getTeamDataCalc(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\n  Promise<TeamData | undefined> {\n  if (!characterKey) return\n\n  // Retrive from cache\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon) {\n    const cache = database._getTeamData(characterKey)\n    if (cache) return cache\n  }\n  const { teamData, teamBundle } = (await getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)) ?? {}\n  if (!teamData || !teamBundle) return\n\n  const calcData = uiDataForTeam(teamData, characterKey as CharacterKey)\n\n  const data = objectMap(calcData, (obj, ck) => {\n    const { data: _, ...rest } = teamBundle[ck]!\n    return { ...obj, ...rest }\n  })\n  if (!mainStatAssumptionLevel && !overrideArt && !overrideWeapon)\n    database.cacheTeamData(characterKey, data)\n  return data\n}\n\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[] | Data, overrideWeapon?: ICachedWeapon):\n  Promise<TeamDataBundle | undefined> {\n  if (!characterKey) return\n  const character = database.chars.get(characterKey)\n  if (!character) return\n\n  const char1DataBundle = await getCharDataBundle(database, true, mainStatAssumptionLevel,\n    character,\n    overrideWeapon ? overrideWeapon : database.weapons.get(character.equippedWeapon)!,\n    (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\n  )\n  if (!char1DataBundle) return\n  const teamBundle = { [characterKey]: char1DataBundle }\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\n\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\n    if (!ck) return\n    const tchar = database.chars.get(ck)\n    if (!tchar) return\n    const databundle = await getCharDataBundle(database, false, 0,\n      { ...tchar, conditional: character.teamConditional[ck] ?? {} },\n      database.weapons.get(tchar.equippedWeapon)!,\n      Object.values(tchar.equippedArtifacts).map(a => database.arts.get(a)).filter(a => a) as ICachedArtifact[])\n    if (!databundle) return\n    teamBundle[ck] = databundle\n    teamData[ck] = databundle.data\n  }))\n\n  return { teamData, teamBundle }\n}\ntype CharBundle = {\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  characterSheet: CharacterSheet,\n  weaponSheet: WeaponSheet,\n  data: Data[]\n}\n\nasync function getCharDataBundle(database: ArtCharDatabase, useCustom = false, mainStatAssumptionLevel: number,\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  artifacts: ICachedArtifact[] | Data,\n): Promise<CharBundle | undefined> {\n\n  const characterSheet = await CharacterSheet.get(character.key, database.gender)\n  if (!characterSheet) return\n  const weaponSheet = await WeaponSheet.get(weapon.key)\n  if (!weaponSheet) return\n\n  const weaponSheetsDataOfType = await WeaponSheet.getAllDataOfType(characterSheet.weaponTypeKey)\n\n  const weaponSheetsData = useCustom ? (() => {\n    // display is included in WeaponSheet.getAllDataOfType\n    const { display, ...restWeaponSheetData } = weaponSheet.data\n    return mergeData([restWeaponSheetData, weaponSheetsDataOfType])\n  })() : weaponSheet.data\n\n  const artifactSheetsData = await ArtifactSheet.getAllData\n  const sheetData = mergeData([characterSheet.data, weaponSheetsData, artifactSheetsData])\n  const artifactData = Array.isArray(artifacts) ? artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)) : [artifacts]\n  const data = [\n    ...artifactData,\n    dataObjForCharacter(character, useCustom ? sheetData : undefined),\n    dataObjForWeapon(weapon),\n    sheetData,\n    common, // NEED TO PUT THIS AT THE END\n    resonanceData,\n  ]\n  return { character, weapon, characterSheet, weaponSheet, data }\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\n\nexport default function useWeapon(weaponID: string | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [weapon, setWeapon] = useState(database.weapons.get(weaponID))\n  useEffect(() => setWeapon(database.weapons.get(weaponID)), [database, weaponID])\n  useEffect(() =>\n    weaponID ? database.weapons.follow(weaponID, (k, r, v) => r === \"update\" && setWeapon(v)) : undefined,\n    [weaponID, setWeapon, database])\n  return weapon\n}\n","import { toggleArr } from \"./Util\"\n\nexport function handleMultiSelect<T>(allKeys: T[]) {\n  return (arr: T[], v: T): T[] => {\n    const len = arr.length\n    if (len === allKeys.length) return [v]\n    if (len === 1 && arr[0] === v) return [...allKeys]\n    return [...new Set(toggleArr(arr, v))]\n  }\n}\n","type SortConfig<T> = (id: T) => number | string\nexport type SortConfigs<Keys extends string, T> = Record<Keys, SortConfig<T>>\n\nexport function sortFunction<Keys extends string, T>(sortbyKeys: Keys[], ascending: boolean, configs: SortConfigs<Keys, T>, ascendingBypass: Keys[] = []) {\n  return (a: T, b: T): number => {\n    for (const sortby of sortbyKeys) {\n      let diff = 0\n      const config = configs[sortby]\n      const aV = config(a)\n      const bV = config(b)\n      if (typeof aV === \"string\" && typeof bV === \"string\") diff = aV.localeCompare(bV)\n      else diff = ((bV as number) - (aV as number))\n      if (diff !== 0) return ascendingBypass.includes(sortby) ? diff : (ascending ? -1 : 1) * diff\n    }\n    return 0\n  }\n}\n\ntype FilterConfig<T> = (obj: T, filter: any) => boolean\nexport type FilterConfigs<Keys extends string, T> = Record<Keys, FilterConfig<T>>\nexport function filterFunction<Keys extends string, T>(filterOptions: Partial<Record<Keys, any>>, filterConfigs: FilterConfigs<Keys, T>) {\n  return (obj: T) => Object.entries(filterOptions).every(([optionKey, optionVal]) => filterConfigs[optionKey as any] && filterConfigs[optionKey as any](obj, optionVal))\n}\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","element","allElementsWithPhy","ele","includes","color","className","slotIcons","maxWidth","maxHeight","fontSize","lineHeight","pointerEvents","p","Artifact","bottom","right","StatIcon","ArtifactTooltip","children","fallback","variant","title","Suspense","ArtifactData","placement","disableInteractive","sheet","substats","slotName","getSlotName","mainStatUnit","KeyMap","mainIcon","mainVariant","artifactSlotIcon","cacheValueString","justifyContent","stars","py","map","stat","value","clamp","rolls","length","name","WeaponFullCard","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","getImg","ascension","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","icon","nodeVStr","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","hideStats","isTeammateCard","database","useContext","DatabaseContext","teamDataContext","DataContext","teamData","useTeamData","character","useCharacter","gender","useDBMeta","characterSheet","CharacterSheet","characterDispatch","useCharacterReducer","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterContextObj","dataContextObj","favorite","useCharMeta","Skeleton","CardLight","zIndex","IconButton","_","charMeta","set","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","ExistingCharacterCardContent","NewCharacterCardContent","CharacterContext","Header","undefined","HeaderContent","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","i","CharacterCardPico","team","index","Stats","HeaderContentNew","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","pr","characterEle","characterLevel","constellation","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","colored","elementKey","artifacts","allSlotKeys","k","arts","id","direction","Object","values","getDisplay","basic","n","JSON","stringify","alignItems","teammateSheet","thumbImgSide","transformOrigin","falseWrapper","SortByButton","sortKeys","onChange","ascending","onChangeAsc","props","t","useTranslation","i18nKey","selected","disabled","startIcon","faSortAmountDownAlt","faSortAmountUp","StarIcon","faStar","StarsDisplay","Array","keys","styled","ToggleButton","shouldForwardProp","prop","theme","baseColor","selectedColor","backgroundColor","palette","main","contrastText","dark","elementHandler","handleMultiSelect","allElements","ElementToggle","ToggleButtonGroup","exclusive","weaponTypeHandler","allWeaponTypeKeys","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","weaponType","tr","strKey","ns","key18","trm","teamSize","sum","tally","pcNodes","objectKeyValueMap","e","greaterEq","percent","protectiveCanopy","desc","canShow","sections","teamBuff","fields","ffNode","ferventFlames","text","st","unit","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","enduringRock","stg","condSC2elePath","condSC2ele","condSC3elePath","condSC3ele","scBase_eleMas","sc2ele_eleMas","sc3ele_eleMas","resonanceSheets","resonanceData","inferInfoMut","premod","atk_","hp_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","eleMas","infoMut","pivot","total","critRate_","characterSortMap","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","useState","displayCharacter","state","setState","useEffect","follow","r","s","characterSheets","useForceUpdate","dbDirty","forceUpdate","followAny","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","deferredState","deferredDbDirty","characterKeyList","sortType","sortByKeys","allCharacterKeys","chars","filterFunction","characterFilterConfigs","sort","sortFunction","characterSortConfigs","open","onClose","autoFocus","InputProps","sm","md","SelectionCard","CustomTooltip","classes","popper","tooltipClasses","padding","enterDelay","enterNextDelay","arrow","setCharMetaState","dbMeta","updateCharacter","v","action","type","enemyOverride","statKey","bonusStats","deepClone","teamMateKey","conditional","teamConditional","team_","charKey","stateDirty","update","mainStatAssumptionLevel","overrideArt","overrideWeapon","setDbDirty","dbDirtyDeferred","getTeamDataCalc","cache","_getTeamData","getTeamData","teamBundle","calcData","uiDataForTeam","objectMap","obj","ck","rest","cacheTeamData","getCharDataBundle","weapons","equippedArtifacts","a","char1DataBundle","Promise","all","tchar","databundle","useCustom","weaponTypeKey","weaponSheetsDataOfType","weaponSheetsData","restWeaponSheetData","mergeData","artifactSheetsData","sheetData","artifactData","isArray","dataObjForArtifact","dataObjForCharacter","common","weaponID","setWeapon","allKeys","arr","len","Set","toggleArr","sortbyKeys","configs","ascendingBypass","b","sortby","diff","config","aV","bV","localeCompare","filterOptions","filterConfigs","entries","every","optionKey","optionVal"],"sourceRoot":""}