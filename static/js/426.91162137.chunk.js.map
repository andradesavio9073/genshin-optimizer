{"version":3,"file":"static/js/426.91162137.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactCardPico.tsx","Components/Artifact/ArtifactSetSlotTooltip.tsx","Components/BootstrapTooltip.tsx","Components/Weapon/WeaponFullCard.tsx","Components/Character/CharacterCard.tsx","Components/Character/CharacterCardPico.tsx","Components/Character/CharacterSelectionModal.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/SolidColoredToggleButton.tsx","Components/ToggleButton/ElementToggle.tsx","Components/ToggleButton/WeaponToggle.tsx","Components/Weapon/WeaponCardPico.tsx","Components/Weapon/WeaponNameTooltip.tsx","Data/Artifacts/ArtifactSheet.tsx","Data/Resonance.tsx","Data/Weapons/WeaponSheet.tsx","DataContext.tsx","ReactHooks/useCharSelectionCallback.tsx","ReactHooks/useCharacter.tsx","ReactHooks/useCharacterReducer.tsx","ReactHooks/useTeamData.tsx","Util/MultiSelect.ts"],"sourcesContent":["import { Box, Typography } from '@mui/material';\nimport Assets from '../../Assets/Assets';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport KeyMap, { cacheValueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { ICachedArtifact } from '../../Types/artifact';\nimport { allElementsWithPhy, SlotKey } from '../../Types/consts';\nimport BootstrapTooltip from '../BootstrapTooltip';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon, { uncoloredEleIcons } from '../StatIcon';\nimport ArtifactSetSlotTooltip from './ArtifactSetSlotTooltip';\n\nexport default function ArtifactCardPico({ artifactObj: art, slotKey: key }: { artifactObj: ICachedArtifact | undefined, slotKey: SlotKey }) {\n  const artifactSheet = usePromise(art?.setKey && ArtifactSheet.get(art.setKey), [art?.setKey])\n  // Blank artifact slot icon\n  if (!art || !artifactSheet)\n    return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n      <Box sx={{ width: \"100%\", pb: \"100%\", position: \"relative\", }}>\n        <Box\n          sx={{\n            position: \"absolute\",\n            width: \"70%\", height: \"70%\",\n            left: \"50%\", top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            opacity: 0.7\n          }}\n          component=\"img\"\n          src={Assets.slot[key]}\n        />\n      </Box>\n    </CardDark>\n\n  // Actual artifact icon + info\n  const { mainStatKey, rarity, level, mainStatVal } = art\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ?? \"secondary\"\n\n  return <CardDark sx={{ display: \"flex\", flexDirection: \"column\", position: \"relative\" }}>\n    <ArtifactSetSlotTooltip slotKey={key} sheet={artifactSheet}>\n      <Box\n        component=\"img\"\n        className={`grad-${rarity}star`}\n        src={artifactSheet.slotIcons[key]}\n        maxWidth=\"100%\"\n        maxHeight=\"100%\"\n      />\n    </ArtifactSetSlotTooltip>\n    <Typography sx={{ position: \"absolute\", m: -0.2, lineHeight: 1, pointerEvents: \"none\" }} variant=\"subtitle2\"><SqBadge color={levelVariant as any}>+{level}</SqBadge></Typography>\n    <Typography variant='h6' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, }}>\n      <BootstrapTooltip placement=\"top\" title={<Typography>{cacheValueString(mainStatVal, KeyMap.unit(mainStatKey))}{KeyMap.unit(mainStatKey)} {KeyMap.getStr(mainStatKey)}</Typography>} disableInteractive>\n        <SqBadge color={color} sx={{ p: 0.25 }}>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</SqBadge>\n      </BootstrapTooltip>\n    </Typography>\n  </CardDark>\n}\n","import { Box, Skeleton, Typography } from \"@mui/material\";\nimport { ReactElement, ReactNode, Suspense } from \"react\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport { SlotKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport { artifactSlotIcon } from \"./SlotNameWIthIcon\";\n\ntype Data = {\n  slotKey: SlotKey,\n  sheet: ArtifactSheet | undefined,\n  children: ReactElement<any, any> & ReactNode,\n}\nexport default function ArtifactSetSlotTooltip({ slotKey, sheet, children }: Data) {\n  const fallback = <Box>\n    <Skeleton variant=\"text\" width={100} />\n    <Skeleton variant=\"text\" width={100} />\n  </Box>\n  const title = <Suspense fallback={fallback}>\n    <Box>\n      <Typography><strong>{sheet?.name}</strong></Typography>\n      <Typography>{artifactSlotIcon(slotKey)} {sheet?.getSlotName?.(slotKey)}</Typography>\n    </Box>\n  </Suspense>\n\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n    {children}\n  </BootstrapTooltip>\n}\n","import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\n\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n    maxWidth: 500,\n  },\n}));\nexport default BootstrapTooltip\n","import { Box, Typography } from '@mui/material';\nimport { useContext, useMemo } from 'react';\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport { uiInput as input } from '../../Formula';\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { ICachedWeapon } from '../../Types/weapon';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\n\nexport default function WeaponFullCard({ weaponId }: { weaponId: string }) {\n  const { database } = useContext(DatabaseContext)\n  const weapon = database._getWeapon(weaponId)\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n  return <CardDark>\n    <Box display=\"flex\" >\n      <Box flexShrink={1} maxWidth=\"35%\" display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`} >\n        <Box\n          component=\"img\"\n          src={weaponSheet.img}\n          width=\"100%\"\n          height=\"auto\"\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ p: 1 }}>\n        <Typography variant=\"body2\" gutterBottom><strong>{weaponSheet?.name}</strong></Typography>\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} gutterBottom>\n          <SqBadge color=\"primary\">Lv. {WeaponSheet.getLevelString(weapon as ICachedWeapon)}</SqBadge>\n          {weaponSheet.hasRefinement && <SqBadge color=\"info\">R{weapon.refinement}</SqBadge>}\n        </Typography>\n        <Typography variant='subtitle1' sx={{ display: \"flex\", gap: 1 }} >\n          <WeaponStat node={UIData.get(input.weapon.main)} />\n          <WeaponStat node={UIData.get(input.weapon.sub)} />\n        </Typography>\n\n      </Box>\n    </Box>\n  </CardDark>\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return <SqBadge color=\"secondary\">{StatIcon[node.info.key]} {val}</SqBadge>\n}\n","import { Favorite, FavoriteBorder } from '@mui/icons-material';\nimport { Box, CardActionArea, CardContent, Chip, Grid, IconButton, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { ascensionMaxLevel } from '../../Data/LevelData';\nimport { DatabaseContext } from '../../Database/Database';\nimport { DataContext, dataContextObj, TeamData } from '../../DataContext';\nimport { uiInput as input } from '../../Formula';\nimport KeyMap from '../../KeyMap';\nimport CharacterCardPico from './CharacterCardPico';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport { ICachedArtifact } from '../../Types/artifact';\nimport { allSlotKeys, CharacterKey, ElementKey, SlotKey } from '../../Types/consts';\nimport { range } from '../../Util/Util';\nimport ArtifactCardPico from '../Artifact/ArtifactCardPico';\nimport CardLight from '../Card/CardLight';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport { NodeFieldDisplay } from '../FieldDisplay';\nimport SqBadge from '../SqBadge';\nimport { Stars } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\nimport WeaponCardPico from '../Weapon/WeaponCardPico';\nimport WeaponFullCard from '../Weapon/WeaponFullCard';\n\ntype CharacterCardProps = {\n  characterKey: CharacterKey | \"\",\n  onClick?: (characterKey: CharacterKey) => void,\n  onClickHeader?: (characterKey: CharacterKey) => void,\n  onClickTeammate?: (characterKey: CharacterKey) => void,\n  artifactChildren?: Displayable,\n  weaponChildren?: Displayable,\n  characterChildren?: Displayable,\n  footer?: Displayable,\n  isTeammateCard?: boolean,\n}\nexport default function CharacterCard({ characterKey, artifactChildren, weaponChildren, characterChildren, onClick, onClickHeader, onClickTeammate, footer, isTeammateCard }: CharacterCardProps) {\n  const { teamData: teamDataContext } = useContext(DataContext)\n  const teamData = useTeamData(teamDataContext ? \"\" : characterKey) ?? (teamDataContext as TeamData | undefined)\n  const { character, characterSheet, target: data } = teamData?.[characterKey] ?? {}\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClickHandler],\n  )\n  const characterDispatch = useCharacterReducer(characterKey)\n  if (!teamData || !character || !characterSheet || !data) return null;\n  const dataContextObj: dataContextObj = {\n    character,\n    data,\n    characterSheet,\n    mainStatAssumptionLevel: 0,\n    teamData,\n    characterDispatch\n  }\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\n    <DataContext.Provider value={dataContextObj}>\n      <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n        <Box sx={{ display: \"flex\", position: \"absolute\", zIndex: 2, opacity: 0.7 }}>\n          <IconButton sx={{ p: 0.5 }} onClick={_ => characterDispatch({ favorite: !character.favorite })}>\n            {character.favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n          <Header onClick={!onClick ? onClickHeader : undefined} />\n          <CardContent sx={{ width: \"100%\", display: \"flex\", flexDirection: \"column\", gap: 1, flexGrow: 1 }}>\n            <Artifacts />\n            {!isTeammateCard && <Grid container columns={4} spacing={0.75}>\n              <Grid item xs={1} height=\"100%\">\n                <WeaponCardPico weaponId={character.equippedWeapon} />\n              </Grid>\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={character.team[i]} onClick={!onClick ? onClickTeammate : undefined} index={i} /></Grid>)}\n            </Grid>}\n            {isTeammateCard && <WeaponFullCard weaponId={character.equippedWeapon} />}\n            {!isTeammateCard && <Stats />}\n            {weaponChildren}\n            {artifactChildren}\n            {characterChildren}\n          </CardContent>\n        </ConditionalWrapper>\n        {footer}\n      </CardLight>\n    </DataContext.Provider>\n  </Suspense>\n}\nfunction Header({ onClick }: { onClick?: (characterKey: CharacterKey) => void }) {\n  const { data, characterSheet } = useContext(DataContext)\n  const characterKey = data.get(input.charKey).value as CharacterKey\n  const characterEle = data.get(input.charEle).value as ElementKey\n  const characterLevel = data.get(input.lvl).value\n  const constellation = data.get(input.constellation).value\n  const ascension = data.get(input.asc).value\n  const autoBoost = data.get(input.bonus.auto).value\n  const skillBoost = data.get(input.bonus.skill).value\n  const burstBoost = data.get(input.bonus.burst).value\n\n  const tAuto = data.get(input.total.auto).value\n  const tSkill = data.get(input.total.skill).value\n  const tBurst = data.get(input.total.burst).value\n\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={() => characterKey && onClick?.(characterKey)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }}>{children}</CardActionArea>,\n    [onClick, characterKey],\n  )\n  return <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc} >\n    <Box display=\"flex\"\n      position=\"relative\"\n      className={`grad-${characterSheet.rarity}star`}\n      sx={{\n        \"&::before\": {\n          content: '\"\"',\n          display: \"block\", position: \"absolute\",\n          left: 0, top: 0,\n          width: \"100%\", height: \"100%\",\n          opacity: 0.7,\n          backgroundImage: `url(${characterSheet.bannerImg})`, backgroundPosition: \"center\", backgroundSize: \"cover\",\n        }\n      }}\n      width=\"100%\" >\n      <Box flexShrink={1} sx={{ maxWidth: { xs: \"40%\", lg: \"40%\" } }} alignSelf=\"flex-end\" display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        <Box\n          component=\"img\"\n          src={characterSheet.thumbImg}\n          width=\"100%\"\n          height=\"auto\"\n          maxWidth={256}\n          sx={{ mt: \"auto\" }}\n        />\n      </Box>\n      <Box flexGrow={1} sx={{ py: 1, pr: 1 }} display=\"flex\" flexDirection=\"column\" zIndex={1}>\n        <Chip label={<Typography variant=\"subtitle1\">{characterSheet.name}</Typography>} size=\"small\" color={characterEle} sx={{ opacity: 0.85 }} />\n        <Grid container spacing={1} flexWrap=\"nowrap\">\n          <Grid item sx={{ textShadow: \"0 0 5px gray\" }}>\n            <Typography component=\"span\" variant=\"h6\" whiteSpace=\"nowrap\" >Lv. {characterLevel}</Typography>\n            <Typography component=\"span\" variant=\"h6\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"h6\"><SqBadge>C{constellation}</SqBadge></Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} flexWrap=\"nowrap\">\n          <Grid item>\n            <Chip color={autoBoost ? \"info\" : \"secondary\"} label={<strong >{tAuto}</strong>} />\n          </Grid>\n          <Grid item>\n            <Chip color={skillBoost ? \"info\" : \"secondary\"} label={<strong >{tSkill}</strong>} />\n          </Grid>\n          <Grid item>\n            <Chip color={burstBoost ? \"info\" : \"secondary\"} label={<strong >{tBurst}</strong>} />\n          </Grid>\n        </Grid>\n        <Typography mt={1} ><Stars stars={characterSheet.rarity} colored /></Typography>\n      </Box>\n    </Box>\n  </ConditionalWrapper>\n}\nfunction Artifacts() {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  return <Grid direction=\"row\" container spacing={0.75} columns={5}>\n    {artifacts.map(([key, art]: [SlotKey, ICachedArtifact | undefined]) =>\n      <Grid item key={key} xs={1}>\n        <ArtifactCardPico artifactObj={art} slotKey={key} />\n      </Grid>\n    )}\n  </Grid>\n}\n\nfunction Stats() {\n  const { data } = useContext(DataContext)\n  return <Box sx={{ width: \"100%\" }} >\n    {Object.values(data.getDisplay().basic).map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    {data.get(input.special).info.key && <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n      <Typography flexGrow={1}><strong>Specialized:</strong></Typography>\n      {StatIcon[data.get(input.special).info.key!]}\n      <Typography>{KeyMap.get(data.get(input.special).info.key!)}</Typography>\n    </Box>}\n  </Box>\n}\n","import { Box, CardActionArea, Skeleton, Typography } from '@mui/material';\nimport { Suspense, useCallback } from 'react';\nimport Assets from '../../Assets/Assets';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { ascensionMaxLevel } from '../../Data/LevelData';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { CharacterKey } from '../../Types/consts';\nimport BootstrapTooltip from '../BootstrapTooltip';\nimport CardDark from '../Card/CardDark';\nimport ConditionalWrapper from '../ConditionalWrapper';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\n\nexport default function CharacterCardPico({ characterKey = \"\", index = -1, onClick }: { characterKey: CharacterKey | \"\", index?: number, onClick?: (characterKey: CharacterKey) => void }) {\n  const teammateSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\n  const character = useCharacter(characterKey)\n  const onClickHandler = useCallback(() => characterKey && onClick?.(characterKey), [characterKey, onClick])\n  const actionWrapperFunc = useCallback(\n    children => <CardActionArea onClick={onClickHandler}>{children}</CardActionArea>,\n    [onClickHandler])\n  if (teammateSheet && character) {\n    const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n      <Typography>{teammateSheet.elementKey && StatIcon[teammateSheet.elementKey]} {teammateSheet.name}</Typography>\n    </Suspense>\n\n    return <CardDark sx={{ maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}>\n        <BootstrapTooltip placement=\"top\" title={title}>\n          <Box display=\"flex\" className={`grad-${teammateSheet.rarity}star`}>\n            <Box\n              component=\"img\"\n              src={teammateSheet.thumbImgSide}\n              maxWidth=\"100%\"\n              maxHeight=\"100%\"\n              sx={{ transform: \"scale(1.4)\", transformOrigin: \"bottom\" }}\n            />\n          </Box>\n        </BootstrapTooltip>\n        <Typography variant='subtitle1' sx={{ position: \"absolute\", top: 0, mt: -0.2, lineHeight: 1, pointerEvents: \"none\" }}>\n          <SqBadge color=\"primary\" >{character.level}/{ascensionMaxLevel[character.ascension]}</SqBadge>\n        </Typography>\n        <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\n          <SqBadge color=\"secondary\" >C{character.constellation}</SqBadge>\n        </Typography>\n      </ConditionalWrapper>\n    </CardDark>\n  } else {\n    return <CardDark sx={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", py: \"12.5%\" }}>\n      <Box component=\"img\" src={Assets.team[`team${index + 2}`]} sx={{ width: \"75%\", height: \"auto\", opacity: 0.7 }} />\n    </CardDark>\n  }\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Box, CardActionArea, CardContent, Divider, Grid, IconButton, Skeleton, TextField, Typography } from \"@mui/material\";\nimport { ChangeEvent, Suspense, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Assets from \"../../Assets/Assets\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { uiInput as input } from \"../../Formula\";\nimport useCharacterReducer from \"../../ReactHooks/useCharacterReducer\";\nimport useForceUpdate from \"../../ReactHooks/useForceUpdate\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useTeamData from \"../../ReactHooks/useTeamData\";\nimport { ICachedCharacter } from \"../../Types/character\";\nimport { allCharacterKeys, allElements, allWeaponTypeKeys, CharacterKey } from \"../../Types/consts\";\nimport { characterFilterConfigs, characterSortConfigs } from \"../../Util/CharacterSort\";\nimport { filterFunction, sortFunction } from \"../../Util/SortByFilters\";\nimport CardDark from \"../Card/CardDark\";\nimport CardLight from \"../Card/CardLight\";\nimport CloseButton from \"../CloseButton\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport ModalWrapper from \"../ModalWrapper\";\nimport SortByButton from \"../SortByButton\";\nimport SqBadge from \"../SqBadge\";\nimport { Stars } from \"../StarDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ElementToggle from \"../ToggleButton/ElementToggle\";\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\";\n\nconst defaultSortKeys = [\"level\", \"rarity\", \"name\"]\n\ntype characterFilter = (character: ICachedCharacter | undefined, sheet: CharacterSheet) => boolean\n\ntype CharacterSelectionModalProps = {\n  show: boolean,\n  newFirst?: boolean\n  onHide: () => void,\n  onSelect?: (ckey: CharacterKey) => void,\n  filter?: characterFilter\n}\n\nexport function CharacterSelectionModal({ show, onHide, onSelect, filter = () => true, newFirst = false }: CharacterSelectionModalProps) {\n  const sortKeys = useMemo(() => newFirst ? [\"new\", ...defaultSortKeys] : defaultSortKeys, [newFirst])\n  const { database } = useContext(DatabaseContext)\n  const { t } = useTranslation(\"page_character\")\n\n  const [sortBy, setsortBy] = useState(sortKeys[0])\n  const [ascending, setascending] = useState(false)\n  const [elementalFilter, setelementalFilter] = useState([...allElements])\n  const [weaponFilter, setweaponFilter] = useState([...allWeaponTypeKeys])\n\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\n\n  const [favesDirty, setFavesDirty] = useForceUpdate()\n  useEffect(() => database.followAnyChar(setFavesDirty), [database, setFavesDirty])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const sortConfigs = useMemo(() => characterSheets && characterSortConfigs(database, characterSheets), [database, characterSheets])\n  const filterConfigs = useMemo(() => characterSheets && favesDirty && characterFilterConfigs(database, characterSheets), [favesDirty, database, characterSheets])\n  const ownedCharacterKeyList = useMemo(() => characterSheets ? allCharacterKeys.filter(cKey => filter(database._getChar(cKey), characterSheets[cKey])) : [], [database, characterSheets, filter])\n  const characterKeyList = useMemo(() => (characterSheets && sortConfigs && filterConfigs) ?\n    ownedCharacterKeyList\n      .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"yes\", name: deferredSearchTerm }, filterConfigs))\n      .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\n      .concat(\n        ownedCharacterKeyList\n          .filter(filterFunction({ element: elementalFilter, weaponType: weaponFilter, favorite: \"no\", name: deferredSearchTerm }, filterConfigs))\n          .sort(sortFunction(sortBy, ascending, sortConfigs) as (a: CharacterKey, b: CharacterKey) => number)\n      )\n    : [],\n    [characterSheets, elementalFilter, weaponFilter, sortBy, ascending, sortConfigs, filterConfigs, ownedCharacterKeyList, deferredSearchTerm])\n\n  if (!characterSheets) return null\n  return <ModalWrapper open={show} onClose={onHide} sx={{ \"& .MuiContainer-root\": { justifyContent: \"normal\" } }}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1} >\n          <Grid item>\n            <WeaponToggle sx={{ height: \"100%\" }} onChange={setweaponFilter} value={weaponFilter} size=\"small\" />\n          </Grid>\n          <Grid item>\n            <ElementToggle sx={{ height: \"100%\" }} onChange={setelementalFilter} value={elementalFilter} size=\"small\" />\n          </Grid>\n          <Grid item>\n            <TextField\n              autoFocus\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"characterName\")}\n            />\n          </Grid>\n\n          <Grid item flexGrow={1} />\n\n          <Grid item >\n            <SortByButton sx={{ height: \"100%\" }}\n              sortKeys={sortKeys} value={sortBy} onChange={setsortBy as any}\n              ascending={ascending} onChangeAsc={setascending} />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {characterKeyList.map(characterKey => <Grid item key={characterKey} xs={6} md={4} lg={3} >\n          <CharacterBtn key={characterKey} characterKey={characterKey} characterSheet={characterSheets[characterKey]} onClick={() => { onHide(); onSelect?.(characterKey) }} />\n        </Grid>)}\n      </Grid></CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CharacterBtn({ onClick, characterKey, characterSheet }: { onClick: () => void, characterKey: CharacterKey, characterSheet: CharacterSheet }) {\n  const teamData = useTeamData(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const favorite = database._getChar(characterKey)?.favorite\n  const { target: data } = teamData?.[characterKey] ?? {}\n  const rarity = characterSheet.rarity\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" height={130} />}><Box>\n    {favorite !== undefined && <Box display=\"flex\" position=\"absolute\" alignSelf=\"start\" zIndex={1}>\n      <IconButton sx={{ p: 0.5 }} onClick={() => characterDispatch({ favorite: !favorite })}>\n        {favorite ? <Favorite /> : <FavoriteBorder />}\n      </IconButton>\n    </Box>}\n    <CardActionArea onClick={onClick} >\n      <CardLight sx={{ display: \"flex\", alignItems: \"center\" }}  >\n        <Box component=\"img\" src={characterSheet.thumbImg} sx={{ width: 130, height: \"auto\" }} className={`grad-${rarity}star`} />\n        <Box sx={{ pl: 1 }}>\n          <Typography><strong>{characterSheet.name}</strong></Typography>\n          {data ? <>\n            <Typography variant=\"h6\"> {characterSheet.elementKey && StatIcon[characterSheet.elementKey]} <ImgIcon src={Assets.weaponTypes?.[characterSheet.weaponTypeKey]} />{` `}{CharacterSheet.getLevelString(data.get(input.lvl).value, data.get(input.asc).value)}</Typography>\n            <Typography >\n              <SqBadge color=\"success\">{`C${data.get(input.constellation).value}`}</SqBadge>{` `}\n              <SqBadge color={data.get(input.bonus.auto).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.auto).value}</strong></SqBadge>{` `}\n              <SqBadge color={data.get(input.bonus.skill).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.skill).value}</strong></SqBadge>{` `}\n              <SqBadge color={data.get(input.bonus.burst).value ? \"info\" : \"secondary\"}><strong >{data.get(input.total.burst).value}</strong></SqBadge>\n            </Typography>\n          </> : <>\n            <Typography variant=\"h6\"><SqBadge color=\"primary\">NEW</SqBadge></Typography>\n          </>}\n          <small><Stars stars={rarity} colored /></small>\n        </Box>\n      </CardLight>\n    </CardActionArea >\n  </Box></Suspense>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default QuestionTooltip\n","import { Groups } from \"@mui/icons-material\";\nimport { Box, List, ListItem, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { Suspense, useContext, useMemo } from 'react';\nimport { DataContext } from \"../DataContext\";\nimport { NodeDisplay } from \"../Formula/api\";\nimport KeyMap, { valueString } from \"../KeyMap\";\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\nimport { evalIfFunc } from \"../Util/Util\";\nimport ColorText from \"./ColoredText\";\nimport QuestionTooltip from \"./QuestionTooltip\";\nimport StatIcon from \"./StatIcon\";\n\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\n  return <FieldDisplayList sx={{ m: 0 }}>\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\n  </FieldDisplayList>\n}\n\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\n  const { data, oldData } = useContext(DataContext)\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\n  if (!canShow) return null\n  if (\"node\" in field) {\n    const node = data.get(field.node)\n    if (node.isEmpty) return null\n    if (oldData) {\n      const oldNode = oldData.get(field.node)\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\n    }\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\n  }\n  return <BasicFieldDisplay field={field} component={component} />\n}\n\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\n  const { data } = useContext(DataContext)\n  const v = evalIfFunc(field.value, data)\n  const variant = evalIfFunc(field.variant, data)\n  const text = field.text && <span>{field.text}</span>\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\n  </Box>\n}\n\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\n  if (node.isEmpty) return null\n\n  suffix = suffix && <span>{suffix}</span>\n  const icon = node.info.key && StatIcon[node.info.key]\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\n  const isTeamBuff = node.info.isTeamBuff\n  const fieldFormulaText = node.formula\n  let fieldVal = \"\" as Displayable\n  if (oldValue) {\n    const diff = node.value - oldValue\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\n  } else fieldVal = valueString(node.value, node.unit)\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>{fieldFormulaText}</Suspense></Typography>} />\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n      <Typography noWrap>{fieldVal}</Typography>\n      {formulaTextOverlay}\n    </Box>\n  </Box>\n}\n\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  margin: 0,\n  '> .MuiListItem-root:nth-of-type(even)': {\n    backgroundColor: theme.palette.contentDark.main\n  },\n  '> .MuiListItem-root:nth-of-type(odd)': {\n    backgroundColor: theme.palette.contentDarker.main\n  },\n}));\n","import { ButtonProps, ToggleButton, ToggleButtonProps, styled } from \"@mui/material\";\n\ntype SolidColoredToggleButtonPartial = {\n  baseColor?: ButtonProps[\"color\"];\n  selectedColor?: ButtonProps[\"color\"];\n}\nexport type SolidColoredToggleButtonProps = SolidColoredToggleButtonPartial & ToggleButtonProps\n\n\nconst SolidColoredToggleButton = styled(ToggleButton, {\n  shouldForwardProp: (prop) => prop !== \"baseColor\" && prop !== \"selectedColor\"\n})<SolidColoredToggleButtonPartial>(({ theme, baseColor = \"secondary\", selectedColor = \"success\" }) => ({\n  '&': {\n    backgroundColor: theme.palette[baseColor].main,\n    color: theme.palette[baseColor].contrastText,\n  },\n  '&:hover': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected': {\n    backgroundColor: theme.palette[selectedColor].main,\n    color: theme.palette[selectedColor].contrastText,\n  },\n  '&.Mui-selected:hover': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n  '&.Mui-disabled': {\n    backgroundColor: theme.palette[baseColor].dark,\n  },\n  '&.Mui-selected.Mui-disabled': {\n    backgroundColor: theme.palette[selectedColor].dark,\n  },\n}));\n\nexport default SolidColoredToggleButton\n","import { Box, ToggleButtonGroup } from \"@mui/material\";\nimport { allElements, ElementKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport SolidColoredToggleButton from \"../SolidColoredToggleButton\";\nimport { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\nimport { uncoloredEleIcons } from \"../StatIcon\";\ntype ElementToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: ElementKey[]) => void\n  value: ElementKey[]\n}\nconst elementHandler = handleMultiSelect([...allElements])\nexport default function ElementToggle({ value, onChange, ...props }: ElementToggleProps) {\n  return <ToggleButtonGroup exclusive value={value} {...props}>\n    {allElements.map(ele => <SolidColoredToggleButton key={ele} value={ele} selectedColor={ele} onClick={() => onChange(elementHandler(value, ele))}>\n      <Box sx={{ fontSize: \"2em\", lineHeight: 1 }}>{uncoloredEleIcons[ele]}</Box>\n    </SolidColoredToggleButton>)}\n  </ToggleButtonGroup>\n}\n","import { ToggleButton } from \"@mui/material\";\nimport Assets from \"../../Assets/Assets\";\nimport { allWeaponTypeKeys, WeaponTypeKey } from \"../../Types/consts\";\nimport { handleMultiSelect } from \"../../Util/MultiSelect\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport SolidToggleButtonGroup, { SolidToggleButtonGroupProps } from \"../SolidToggleButtonGroup\";\ntype WeaponToggleProps = Omit<SolidToggleButtonGroupProps, \"onChange\" | \"value\"> & {\n  onChange: (value: WeaponTypeKey[]) => void\n  value: WeaponTypeKey[]\n}\nconst weaponTypeHandler = handleMultiSelect([...allWeaponTypeKeys])\nexport default function WeaponToggle({ value, onChange, ...props }: WeaponToggleProps) {\n  return <SolidToggleButtonGroup exclusive value={value} {...props}>\n    {allWeaponTypeKeys.map(wt => <ToggleButton key={wt} value={wt} onClick={() => onChange(weaponTypeHandler(value, wt))}>\n      <ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />\n    </ToggleButton>)}\n  </SolidToggleButtonGroup>\n}\n","import { Box, Typography } from '@mui/material';\nimport { useContext, useMemo } from 'react';\nimport WeaponSheet from '../../Data/Weapons/WeaponSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport { uiInput as input } from '../../Formula';\nimport { computeUIData, dataObjForWeapon } from '../../Formula/api';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport CardDark from '../Card/CardDark';\nimport SqBadge from '../SqBadge';\nimport StatIcon from '../StatIcon';\nimport WeaponNameTooltip from './WeaponNameTooltip';\n\nexport default function WeaponCardPico({ weaponId }: { weaponId: string }) {\n  const { database } = useContext(DatabaseContext)\n  const weapon = database._getWeapon(weaponId)\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return null;\n\n  const tooltipAddl = <Box>\n    <WeaponStatPico node={UIData.get(input.weapon.main)} />\n    <WeaponStatPico node={UIData.get(input.weapon.sub)} />\n  </Box>\n\n  return <CardDark sx={{ height: \"100%\", maxWidth: 128, position: \"relative\", display: \"flex\", flexDirection: \"column\", }}>\n    <Box display=\"flex\" flexDirection=\"column\" alignContent=\"flex-end\" className={`grad-${weaponSheet.rarity}star`}>\n      <WeaponNameTooltip sheet={weaponSheet} addlText={tooltipAddl}>\n        <Box\n          component=\"img\"\n          src={weaponSheet.img}\n          maxWidth=\"100%\"\n          maxHeight=\"100%\"\n          sx={{ mt: \"auto\" }}\n        />\n      </WeaponNameTooltip>\n    </Box>\n    <Typography variant='subtitle1' sx={{ position: \"absolute\", mt: -0.2, lineHeight: 1, pointerEvents: \"none\" }}>\n      <SqBadge color=\"primary\">{WeaponSheet.getLevelString(weapon)}</SqBadge>\n    </Typography>\n    {weaponSheet.hasRefinement && <Typography variant='subtitle1' sx={{ position: \"absolute\", bottom: 0, right: 0, lineHeight: 1, pointerEvents: \"none\" }}>\n      <SqBadge color=\"secondary\">R{weapon.refinement}</SqBadge>\n    </Typography>}\n  </CardDark>\n}\nfunction WeaponStatPico({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return <Typography>{StatIcon[node.info.key]} {val}</Typography>\n}\n","import { Skeleton, Typography } from \"@mui/material\";\nimport { ReactElement, ReactNode, Suspense } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport ImgIcon from \"../Image/ImgIcon\";\n\ntype Data = {\n  sheet: WeaponSheet,\n  addlText?: any,\n  children: ReactElement<any, any> & ReactNode,\n}\nexport default function WeaponNameTooltip({ sheet, addlText, children }: Data) {\n  const title = <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n    <Typography><ImgIcon src={Assets.weaponTypes[sheet.weaponType]} /> {sheet.name}</Typography>\n    {addlText}\n  </Suspense>\n  return <BootstrapTooltip placement=\"top\" title={title} disableInteractive>\n    {children}\n  </BootstrapTooltip>\n}\n","import { ArtifactSlotKey } from \"pipeline\";\nimport ImgIcon from \"../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../Components/SqBadge\";\nimport { Translate } from \"../../Components/Translate\";\nimport { input } from \"../../Formula\";\nimport { mergeData } from \"../../Formula/api\";\nimport { Data } from \"../../Formula/type\";\nimport { UIData } from \"../../Formula/uiData\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey } from \"../../Types/consts\";\nimport { DocumentSection, IDocumentHeader } from \"../../Types/sheet\";\nimport { st } from \"../SheetUtil\";\n\n// TODO: remove typecasting once all sheets populated\nconst artifactSheets = import(\".\").then(imp => imp.default)\n\nexport interface IArtifactSheet {\n  name: string, // only to stored the English name for OCR, otherwise, should come from localization pipeline\n  rarity: readonly ArtifactRarity[],\n  icons: Dict<SlotKey, string>,\n  setEffects: Dict<SetNum, SetEffectEntry>\n}\nexport interface SetEffectEntry {\n  document: DocumentSection[],\n}\n\n\nconst tr = (setKey: string, strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\nconst allData = artifactSheets.then(as => mergeData(Object.values(as).map(s => s.data)))\nexport class ArtifactSheet {\n  readonly sheet: IArtifactSheet\n  readonly key: ArtifactSetKey\n  readonly data: Data\n  constructor(setKey: ArtifactSetKey, sheet: IArtifactSheet, data: Data) {\n    this.sheet = sheet\n    this.key = setKey\n    this.data = data\n  }\n\n  get name() { return tr(this.key, \"setName\") }\n  get defIconSrc() {\n    const slotKey = this.slots[0]\n    if (!this.slotIcons[slotKey]) return undefined\n    return this.slotIcons[slotKey]\n  }\n  get defIcon() { return <ImgIcon src={this.defIconSrc} sx={{ fontSize: \"1.5em\" }} /> }\n  /**\n   * @deprecated use src directly\n   */\n  get nameWithIcon() {\n    const slotKey = this.slots[0]\n    return <span><ImgIcon src={this.slotIcons[slotKey]} /> {tr(this.key, \"setName\")}</span>\n  }\n\n  //This is only for OCR, because we only scan in english right now.\n  get nameRaw(): string { return this.sheet.name }\n  get rarity(): readonly ArtifactRarity[] { return this.sheet.rarity }\n  get slots(): SlotKey[] {\n    switch (this.key) {\n      case \"PrayersForDestiny\":\n      case \"PrayersForIllumination\":\n      case \"PrayersForWisdom\":\n      case \"PrayersToSpringtime\": return [\"circlet\"]\n      default: return [...allSlotKeys]\n    }\n  }\n  get slotIcons(): Dict<SlotKey, string> { return this.sheet.icons }\n  get setEffects(): Dict<SetNum, SetEffectEntry> { return this.sheet.setEffects }\n  getSlotName = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.name`)\n  getSlotDesc = (slotKey: SlotKey) => tr(this.key, `pieces.${slotKey}.desc`)\n  setEffectDesc = (setNum: SetNum): Displayable => tr(this.key, `setEffects.${setNum}`)\n  setEffectDocument = (setNum: SetNum) => this.sheet.setEffects[setNum]?.document\n\n  static get(set: ArtifactSetKey | undefined): Promise<ArtifactSheet> | undefined { return set ? artifactSheets.then(a => a[set]) : undefined }\n  static get getAll() { return artifactSheets }\n  static get getAllData() { return allData }\n  static setKeysByRarities(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>): Dict<ArtifactRarity, ArtifactSetKey[]> {\n    const grouped: Dict<ArtifactRarity, ArtifactSetKey[]> = {}\n    Object.entries(sheets).forEach(([key, sheet]) => {\n      const rarity = Math.max(...sheet.rarity) as ArtifactRarity\n      if (grouped[rarity]) grouped[rarity]!.push(key)\n      else grouped[rarity] = [key]\n    })\n    return grouped\n  }\n\n  static setEffects(sheets: StrictDict<ArtifactSetKey, ArtifactSheet>, data: UIData) {\n    const artifactSetEffect: Partial<Record<ArtifactSetKey, SetNum[]>> = {}\n    Object.entries(sheets).forEach(([setKey, sheet]) => {\n      const setNums = (Object.keys(sheet.setEffects).map(k => parseInt(k)) as SetNum[]).filter(sn => sheet.hasEnough(sn, data))\n      if (setNums.length) artifactSetEffect[setKey] = setNums\n    })\n    return artifactSetEffect\n  }\n  hasEnough = (setNum: SetNum, data: UIData) => (data.get(input.artSet[this.key]).value ?? 0) >= setNum\n}\nexport const setHeaderTemplate = (setKey: ArtifactSetKey, icons: Partial<Record<ArtifactSlotKey, string>>): ((setNum: SetNum) => IDocumentHeader) => {\n  const tr = (strKey: string) => <Translate ns={`artifact_${setKey}_gen`} key18={strKey} />\n  return (setNum: SetNum) => ({\n    title: tr(\"setName\"),\n    icon: <ImgIcon size={2} sx={{ m: -1 }} src={icons.flower ?? icons.circlet ?? \"\"} />,\n    action: <SqBadge color=\"success\">{st(`${setNum}set`)}</SqBadge>,\n    description: tr(`setEffects.${setNum}`)\n  })\n}\n","import StatIcon from \"../Components/StatIcon\";\nimport { Translate } from \"../Components/Translate\";\nimport { tally } from \"../Formula\";\nimport { inferInfoMut } from \"../Formula/api\";\nimport { UIData } from \"../Formula/uiData\";\nimport { equal, greaterEq, percent } from \"../Formula/utils\";\nimport { allElements, allElementsWithPhy } from \"../Types/consts\";\nimport { DocumentSection } from \"../Types/sheet\";\nimport { objectKeyValueMap } from \"../Util/Util\";\nimport { condReadNode, sgt, st } from \"./SheetUtil\";\nconst tr = (strKey: string) => <Translate ns=\"elementalResonance_gen\" key18={strKey} />\nconst trm = (strKey: string) => <Translate ns=\"elementalResonance\" key18={strKey} />\n\ntype IResonance = {\n  name: Displayable,\n  desc: Displayable,\n  icon: Displayable,\n  canShow: (data: UIData) => boolean\n  sections: DocumentSection[]\n}\n\n// Protective Canopy\nconst pcNodes = objectKeyValueMap(allElementsWithPhy, e => [`${e}_res_`, greaterEq(tally.ele, 4, percent(0.15))])\n\nconst protectiveCanopy: IResonance = {\n  name: tr(\"ProtectiveCanopy.name\"),\n  desc: tr(\"ProtectiveCanopy.desc\"),\n  icon: <span>{StatIcon.anemo} {StatIcon.geo} {StatIcon.pyro} {StatIcon.hydro} {StatIcon.cryo} {StatIcon.electro} x4</span>,\n  canShow: (data: UIData) => allElements.filter(e => data.get(tally[e]).value >= 1).length === 4,\n  sections: [{\n    teamBuff: true,\n    fields: Object.values(pcNodes).map(node => ({ node }))\n  }]\n}\n\n// Fervent Flames\nconst ffNode = greaterEq(tally.pyro, 2, percent(0.25))\nconst ferventFlames: IResonance = {\n  name: tr(\"FerventFlames.name\"),\n  desc: tr(\"FerventFlames.desc\"),\n  icon: <span>{StatIcon.pyro} {StatIcon.pyro}</span>,\n  canShow: (data: UIData) => data.get(tally.pyro).value >= 2,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.cryo\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: ffNode\n    }]\n  }]\n}\n\n// Soothing Waters\nconst swNode = greaterEq(tally.hydro, 2, percent(0.30))\nconst soothingWaters: IResonance = {\n  name: tr(\"SoothingWater.name\"),\n  desc: tr(\"SoothingWater.desc\"),\n  icon: <span>{StatIcon.hydro} {StatIcon.hydro}</span>,\n  canShow: (data: UIData) => data.get(tally.hydro).value >= 2,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.pyro\"),\n      value: -40,\n      unit: \"%\"\n    }, {\n      node: swNode\n    }]\n  }]\n}\n\n//ShatteringIce\nconst condSIPath = [\"resonance\", \"ShatteringIce\"]\nconst condSI = condReadNode(condSIPath)\nconst siNode = greaterEq(tally.cryo, 2, equal(condSI, \"on\", percent(0.15)))\nconst shatteringIce: IResonance = {\n  name: tr(\"ShatteringIce.name\"),\n  desc: tr(\"ShatteringIce.desc\"),\n  icon: <span>{StatIcon.cryo} {StatIcon.cryo}</span>,\n  canShow: (data: UIData) => data.get(tally.cryo).value >= 2,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.electro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }, {\n    teamBuff: true,\n    path: condSIPath,\n    value: condSI,\n    name: trm(\"ShatteringIce.cond\"),\n    header: {\n      title: tr(\"ShatteringIce.name\"),\n      icon: StatIcon.cryo,\n    },\n    states: {\n      on: {\n        fields: [{\n          node: siNode\n        }]\n      }\n    }\n  }]\n}\n\n// High Voltage\nconst highVoltage: IResonance = {\n  name: tr(\"HighVoltage.name\"),\n  desc: tr(\"HighVoltage.desc\"),\n  icon: <span>{StatIcon.electro} {StatIcon.electro}</span>,\n  canShow: (data: UIData) => data.get(tally.electro).value >= 2,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      text: st(\"effectDuration.hydro\"),\n      value: -40,\n      unit: \"%\"\n    }]\n  }]\n}\n\n// Impetuous Winds\nconst iwNodeStam = greaterEq(tally.anemo, 2, percent(-0.15))\nconst iwNodeMove = greaterEq(tally.anemo, 2, percent(0.1))\nconst iwNodeCD = greaterEq(tally.anemo, 2, percent(-0.05))\nconst impetuousWinds: IResonance = {\n  name: tr(\"ImpetuousWinds.name\"),\n  desc: tr(\"ImpetuousWinds.desc\"),\n  icon: <span>{StatIcon.anemo} {StatIcon.anemo}</span>,\n  canShow: (data: UIData) => data.get(tally.anemo).value >= 2,\n  sections: [{\n    teamBuff: true,\n    fields: [{\n      node: iwNodeStam\n    }, {\n      node: iwNodeMove\n    }, {\n      node: iwNodeCD\n    }]\n  }]\n}\n\n// Enduring Rock\nconst condERPath = [\"resonance\", \"EnduringRock\"]\nconst condER = condReadNode(condERPath)\nconst erNodeshield_ = greaterEq(tally.geo, 2, percent(0.15))\nconst erNodeDMG_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(0.15)))\nconst erNodeRes_ = greaterEq(tally.geo, 2, equal(condER, \"on\", percent(-0.2)))\nconst enduringRock: IResonance = {\n  name: tr(\"EnduringRock.name\"),\n  desc: tr(\"EnduringRock.desc\"),\n  icon: <span>{StatIcon.geo} {StatIcon.geo}</span>,\n  canShow: (data: UIData) => data.get(tally.geo).value >= 2,\n  sections: [{\n    teamBuff: true,\n    text: tr(\"EnduringRock.desc\"),\n    fields: [{\n      node: erNodeshield_\n    }]\n  }, {\n    teamBuff: true,\n    path: condERPath,\n    value: condER,\n    header: {\n      title: tr(\"EnduringRock.name\"),\n      icon: StatIcon.geo,\n    },\n    name: st(\"protectedByShield\"),\n    states: {\n      on: {\n        fields: [{\n          node: erNodeDMG_\n        }, {\n          node: erNodeRes_\n        }, {\n          text: sgt(\"duration\"),\n          value: 15,\n          unit: \"s\"\n        }]\n      }\n    }\n  }]\n}\n\nexport const resonanceSheets: IResonance[] = [\n  protectiveCanopy,\n  ferventFlames,\n  soothingWaters,\n  shatteringIce,\n  highVoltage,\n  impetuousWinds,\n  enduringRock,\n]\n\nexport const resonanceData = inferInfoMut({\n  premod: {\n    ...pcNodes,\n    atk_: ffNode,\n    incHeal_: swNode,\n    staminaDec_: iwNodeStam,\n    moveSPD_: iwNodeMove,\n    cdRed_: iwNodeCD,\n    shield_: erNodeshield_,\n    all_dmg_: erNodeDMG_,\n    geo_enemyRes_: erNodeRes_,\n  },\n  total: {\n    // TODO: this crit rate is on-hit. Might put it in a `hit.critRate_` namespace later.\n    critRate_: siNode\n  }\n})\n","import type { WeaponData } from 'pipeline';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport SqBadge from '../../Components/SqBadge';\nimport { Translate } from '../../Components/Translate';\nimport { input } from '../../Formula';\nimport { Data } from '../../Formula/type';\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\nimport { DocumentSection, IDocumentHeader } from '../../Types/sheet';\nimport { ICachedWeapon } from '../../Types/weapon';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\n\nconst weaponSheets = import('.').then(imp => imp.default)\n\nexport interface IWeaponSheet {\n  icon: string,\n  iconAwaken: string,\n  document: DocumentSection[],\n}\n\nexport default class WeaponSheet {\n  readonly key: WeaponKey;\n  readonly sheet: IWeaponSheet;\n  readonly data: Data;\n  readonly rarity: Rarity;\n  readonly weaponType: WeaponTypeKey;\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\n    this.rarity = weaponData.rarity\n    this.weaponType = weaponData.weaponType\n    this.key = key\n    this.sheet = weaponSheet\n    this.data = data\n  }\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\n  static get getAll() { return weaponSheets }\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([_, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\n  get name() { return this.tr(\"name\") }\n  get hasRefinement() { return this.rarity > 2 }\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\n  get description() { return this.tr(\"description\") }\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\n  get img() { return this.sheet.icon }\n  get imgAwaken() { return this.sheet.iconAwaken }\n  get document() { return this.sheet.document }\n  get milestoneLevels(): Array<[number, number]> {\n    if (this.hasRefinement) return milestoneLevels as any\n    else return lowRarityMilestoneLevels as any\n  }\n  ambiguousLevel(level: number) {\n    if (this.hasRefinement) return ambiguousLevel(level)\n    else return ambiguousLevelLow(level)\n  }\n}\nexport const headerTemplate = (weaponKey: WeaponKey, img: string, imgAwaken: string, action?: Displayable): IDocumentHeader => {\n  const tr = (strKey: string) => <Translate ns={`weapon_${weaponKey}_gen`} key18={strKey} />\n  return {\n    title: tr(`passiveName`),\n    icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\n    action: action && <SqBadge color=\"success\">{action}</SqBadge>,\n    description: data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\n  }\n}\n","import { createContext } from \"react\"\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\nimport { UIData } from \"./Formula/uiData\"\nimport { ICachedCharacter } from \"./Types/character\"\nimport { CharacterKey } from \"./Types/consts\"\nimport { ICachedWeapon } from \"./Types/weapon\"\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\nexport type TeamData = Partial<Record<CharacterKey, {\n  target: UIData\n  buffs: Dict<CharacterKey, UIData>\n  character: ICachedCharacter\n  weapon: ICachedWeapon\n  characterSheet: CharacterSheet\n  weaponSheet: WeaponSheet,\n}>>\nexport type dataContextObj = {\n  character: ICachedCharacter\n  characterSheet: CharacterSheet\n  data: UIData\n  oldData?: UIData\n  mainStatAssumptionLevel: number\n  teamData: TeamData\n  characterDispatch: (action: characterReducerAction) => void\n}\n\n// If using this context without a Provider, then stuff will crash...\n// In theory, none of the components that uses this context should work without a provider...\nexport const DataContext = createContext({} as dataContextObj)\n","import { useCallback, useContext } from \"react\";\nimport { useNavigate, useMatch } from \"react-router\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\";\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { objectKeyMap } from \"../Util/Util\";\n\n/**\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\n * @returns\n */\nexport default function useCharSelectionCallback() {\n  const { database } = useContext(DatabaseContext)\n  const navigate = useNavigate()\n  // Used to maintain the previous tab, if there is one\n  let { params: { tab = \"\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\n  const cb = useCallback(\n    async (characterKey: CharacterKey) => {\n      const character = database._getChar(characterKey)\n      let navTab = tab\n      // Create a new character + weapon, with linking if char isnt in db.\n      if (!character) {\n        const newChar = initialCharacter(characterKey)\n        database.updateChar(newChar)\n        const characterSheet = await CharacterSheet.get(characterKey)\n        if (!characterSheet) return\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\n        const weaponId = database.createWeapon(weapon)\n        database.setWeaponLocation(weaponId, characterKey)\n        // If we are navigating to a new character,\n        // redirect to Overview, regardless of previous tab.\n        // Trying to enforce a certain UI flow when building new characters\n        navTab = \"\"\n      }\n      navigate(`/characters/${characterKey}/${navTab}`)\n    },\n    [navigate, database, tab],\n  )\n  return cb\n}\n\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\n  return {\n    key,\n    level: 1,\n    ascension: 0,\n    hitMode: \"avgHit\",\n    reactionMode: \"\",\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\n    equippedWeapon: \"\",\n    conditional: {},\n    bonusStats: {},\n    enemyOverride: {},\n    talent: {\n      auto: 1,\n      skill: 1,\n      burst: 1,\n    },\n    infusionAura: \"\",\n    constellation: 0,\n    team: [\"\", \"\", \"\"],\n    compareData: false,\n    favorite: false,\n  }\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { CharacterKey } from \"../Types/consts\";\n\nexport default function useCharacter(characterKey: CharacterKey | \"\" | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [character, updateCharacter] = useState(database._getChar(characterKey))\n  useEffect(() => updateCharacter(database._getChar(characterKey)), [database, characterKey])\n  useEffect(() =>\n    characterKey ? database.followChar(characterKey, updateCharacter) : undefined,\n    [characterKey, updateCharacter, database])\n  return character\n}\n","import { useCallback, useContext } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { deepClone } from \"../Util/Util\";\n\ntype characterEquipWeapon = {\n  type: \"weapon\", id: string\n}\ntype characterReducerBonusStatsAction = {\n  type: \"editStats\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerenemyOverrideAction = {\n  type: \"enemyOverride\",\n  statKey: string\n  value: any | undefined\n}\ntype characterReducerResetStatsAction = {\n  type: \"resetStats\",\n  statKey: string\n}\ntype characterTeamAction = {\n  type: \"team\",\n  index: number,\n  charKey: CharacterKey | \"\"\n}\nexport type characterReducerAction = characterEquipWeapon | characterReducerBonusStatsAction | characterReducerenemyOverrideAction | characterReducerResetStatsAction | characterTeamAction | Partial<ICachedCharacter>\n\nexport default function useCharacterReducer(characterKey: CharacterKey | \"\") {\n  const { database } = useContext(DatabaseContext)\n\n  return useCallback((action: characterReducerAction): void => {\n    if (!characterKey) return\n\n    if (\"type\" in action) switch (action.type) {\n      case \"weapon\":\n        database.setWeaponLocation(action.id, characterKey)\n        break\n      case \"enemyOverride\": {\n        const character = database._getChar(characterKey)!\n        const enemyOverride = character.enemyOverride\n        const { statKey, value } = action\n        if (enemyOverride[statKey] === value) break\n        database.updateChar({ ...character, enemyOverride: { ...enemyOverride, [statKey]: value } })\n        break\n      }\n      case \"editStats\": {\n        const character = database._getChar(characterKey)!\n        const { statKey, value } = action\n\n        const bonusStats = deepClone(character.bonusStats)\n\n        if (bonusStats[statKey] === value) break\n        if (!value) delete bonusStats[statKey]\n        else bonusStats[statKey] = value\n\n        database.updateChar({ ...character, bonusStats })\n        break\n      }\n      case \"resetStats\": {\n        const character = database._getChar(characterKey)!\n        const { statKey } = action\n\n        const bonusStats = character.bonusStats\n        delete bonusStats[statKey]\n\n        database.updateChar({ ...character, bonusStats })\n        break\n      }\n      case \"team\": {\n        const character = database._getChar(characterKey)!\n        const { team } = character\n\n        const { index, charKey: newCharKey } = action\n        const oldCharKey = team[index]\n        team[index] = newCharKey\n\n        // move the old char to \"inventory\"\n        if (oldCharKey) {\n          const oldChar = database._getChar(oldCharKey)\n          if (oldChar) database.updateChar({ ...oldChar, team: [\"\", \"\", \"\"] })\n        }\n\n        // unequip new char from its old teammates\n        if (newCharKey) {\n          const newChar = database._getChar(newCharKey)\n          if (newChar) {\n            newChar.team.forEach(t => {\n              if (!t) return\n              const tChar = database._getChar(t)\n              tChar && database.updateChar({ ...tChar, team: tChar.team.map(c => c === newCharKey ? \"\" : c) as ICachedCharacter[\"team\"] })\n            })\n          }\n        }\n\n        // equip new char to new teammates\n        team.forEach((t, tind) => {\n          if (!t) return\n          const newChar = database._getChar(t)\n          if (newChar) database.updateChar({ ...newChar, team: [characterKey, ...team].filter((_, i) => i !== tind + 1) as ICachedCharacter[\"team\"] })\n        })\n\n        // update src character\n        database.updateChar({ ...character, team })\n      }\n    } else\n      database.updateChar({ ...database._getChar(characterKey)!, ...action })\n  }, [characterKey, database])\n\n}\n","import { useContext, useEffect, useMemo } from \"react\";\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { resonanceData } from \"../Data/Resonance\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { ArtCharDatabase, DatabaseContext } from \"../Database/Database\";\nimport { TeamData } from \"../DataContext\";\nimport { common } from \"../Formula\";\nimport { dataObjForArtifact, dataObjForCharacter, dataObjForWeapon, uiDataForTeam } from \"../Formula/api\";\nimport { Data } from \"../Formula/type\";\nimport { ICachedArtifact } from \"../Types/artifact\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport { objectMap } from \"../Util/Util\";\nimport useForceUpdate from \"./useForceUpdate\";\nimport usePromise from \"./usePromise\";\n\ntype TeamDataBundle = {\n  team: CharacterKey[],\n  teamData: Dict<CharacterKey, Data[]>\n  teamBundle: Dict<CharacterKey, CharBundle>\n}\n\nexport default function useTeamData(characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon): TeamData | undefined {\n  const { database } = useContext(DatabaseContext)\n  const [dbDirty, setDbDirty] = useForceUpdate()\n  const teamDataBundle = usePromise(getTeamData(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon), [dbDirty, characterKey, database, mainStatAssumptionLevel, overrideArt, overrideWeapon])\n\n  const { team = [], teamData, teamBundle } = teamDataBundle ?? {}\n\n  useEffect(() =>\n    characterKey ? database.followChar(characterKey, setDbDirty) : undefined,\n    [characterKey, setDbDirty, database])\n\n  useEffect(() =>\n    characterKey ? database.followAnyArt(setDbDirty) : undefined,\n    [characterKey, setDbDirty, database])\n\n  const [t1, t2, t3, t4] = team\n  useEffect(() =>\n    t1 ? database.followChar(t1, setDbDirty) : undefined,\n    [t1, setDbDirty, database])\n  useEffect(() =>\n    t2 ? database.followChar(t2, setDbDirty) : undefined,\n    [t2, setDbDirty, database])\n  useEffect(() =>\n    t3 ? database.followChar(t3, setDbDirty) : undefined,\n    [t3, setDbDirty, database])\n  useEffect(() =>\n    t4 ? database.followChar(t4, setDbDirty) : undefined,\n    [t4, setDbDirty, database])\n\n  const calcData = useMemo(() => {\n    return teamData && uiDataForTeam(teamData, characterKey as CharacterKey)\n  }, [teamData, characterKey])\n  const data = useMemo(() => {\n    if (!calcData || !teamBundle) return\n    return objectMap(calcData, (obj, ck) => {\n      const { data: _, ...rest } = teamBundle[ck]!\n      return { ...obj, ...rest }\n    })\n  }, [calcData, teamBundle])\n\n  return data\n}\n\nexport async function getTeamData(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon):\n  Promise<TeamDataBundle | undefined> {\n  if (!characterKey) return\n  const char1DataBundle = await getCharDataBundle(database, characterKey, mainStatAssumptionLevel, overrideArt, overrideWeapon)\n  if (!char1DataBundle) return\n  const team: CharacterKey[] = [characterKey]\n  const teamBundle = { [characterKey]: char1DataBundle }\n  const teamData: Dict<CharacterKey, Data[]> = { [characterKey]: char1DataBundle.data }\n\n  await Promise.all(char1DataBundle.character.team.map(async (ck) => {\n    if (!ck) return\n    const databundle = await getCharDataBundle(database, ck)\n    if (!databundle) return\n    team.push(ck)\n    teamBundle[ck] = databundle\n    teamData[ck] = databundle.data\n  }))\n\n  return { team, teamData, teamBundle }\n}\ntype CharBundle = {\n  character: ICachedCharacter,\n  weapon: ICachedWeapon,\n  characterSheet: CharacterSheet,\n  weaponSheet: WeaponSheet,\n  data: Data[]\n}\nasync function getCharDataBundle(database: ArtCharDatabase, characterKey: CharacterKey | \"\", mainStatAssumptionLevel: number = 0, overrideArt?: ICachedArtifact[], overrideWeapon?: ICachedWeapon)\n  : Promise<CharBundle | undefined> {\n  if (!characterKey) return\n  const character = database._getChar(characterKey)\n  if (!character) return\n  const weapon = overrideWeapon ?? database._getWeapon(character.equippedWeapon)\n  if (!weapon) return\n  const [characterSheet, weaponSheet, artifactSheetsData] = await Promise.all([\n    CharacterSheet.get(characterKey),\n    WeaponSheet.get(weapon.key),\n    ArtifactSheet.getAllData\n  ])\n  if (!characterSheet || !weaponSheet || !artifactSheetsData) return\n  const artifacts = (overrideArt ?? Object.values(character.equippedArtifacts).map(a => database._getArt(a))).filter(a => a) as ICachedArtifact[]\n  const data = [\n    ...artifacts.map(a => dataObjForArtifact(a, mainStatAssumptionLevel)),\n    dataObjForCharacter(character),\n    characterSheet.getData(character.elementKey),\n    dataObjForWeapon(weapon),\n    weaponSheet.data,\n    artifactSheetsData,\n    common, // NEED TO PUT THIS AT THE END\n    resonanceData,\n  ]\n  return { character, weapon, characterSheet, weaponSheet, data }\n}\n","import { toggleArr } from \"./Util\"\n\nexport function handleMultiSelect<T>(allKeys: T[]) {\n  return (arr: T[], v: T): T[] => {\n    const len = arr.length\n    if (len === allKeys.length) return [v]\n    if (len === 1 && arr[0] === v) return [...allKeys]\n    return [...new Set(toggleArr(arr, v))]\n  }\n}\n"],"names":["ArtifactCardPico","art","artifactObj","key","slotKey","artifactSheet","usePromise","setKey","ArtifactSheet","sx","display","flexDirection","height","width","pb","position","left","top","transform","opacity","component","src","Assets","mainStatKey","rarity","level","mainStatVal","levelVariant","Math","floor","max","element","allElementsWithPhy","ele","includes","color","sheet","className","slotIcons","maxWidth","maxHeight","m","lineHeight","pointerEvents","variant","bottom","right","placement","title","cacheValueString","KeyMap","disableInteractive","p","uncoloredEleIcons","StatIcon","ArtifactSetSlotTooltip","children","fallback","Suspense","name","artifactSlotIcon","getSlotName","BootstrapTooltip","styled","props","arrow","classes","popper","theme","tooltipClasses","palette","common","black","backgroundColor","WeaponFullCard","weaponId","weapon","useContext","DatabaseContext","database","_getWeapon","weaponSheet","WeaponSheet","UIData","useMemo","computeUIData","data","dataObjForWeapon","CardDark","Box","flexShrink","alignContent","img","mt","flexGrow","Typography","gutterBottom","gap","SqBadge","hasRefinement","refinement","WeaponStat","node","get","input","info","val","valueString","value","unit","undefined","CharacterCard","characterKey","artifactChildren","weaponChildren","characterChildren","onClick","onClickHeader","onClickTeammate","footer","isTeammateCard","teamDataContext","DataContext","teamData","useTeamData","character","characterSheet","target","onClickHandler","useCallback","actionWrapperFunc","CardActionArea","characterDispatch","useCharacterReducer","dataContextObj","mainStatAssumptionLevel","Skeleton","minHeight","CardLight","zIndex","IconButton","_","favorite","Favorite","FavoriteBorder","ConditionalWrapper","condition","wrapper","Header","CardContent","Artifacts","Grid","container","columns","spacing","item","xs","WeaponCardPico","equippedWeapon","range","map","i","CharacterCardPico","team","index","Stats","characterEle","characterLevel","constellation","ascension","autoBoost","skillBoost","burstBoost","tAuto","tSkill","tBurst","content","backgroundImage","bannerImg","backgroundPosition","backgroundSize","lg","alignSelf","thumbImg","py","pr","Chip","label","size","flexWrap","textShadow","whiteSpace","ascensionMaxLevel","stars","colored","artifacts","allSlotKeys","k","_getArt","id","direction","Object","values","getDisplay","basic","n","alignItems","teammateSheet","CharacterSheet","useCharacter","elementKey","thumbImgSide","transformOrigin","justifyContent","defaultSortKeys","CharacterSelectionModal","show","onHide","onSelect","filter","newFirst","sortKeys","t","useTranslation","useState","sortBy","setsortBy","ascending","setascending","allElements","elementalFilter","setelementalFilter","allWeaponTypeKeys","weaponFilter","setweaponFilter","characterSheets","useForceUpdate","favesDirty","setFavesDirty","useEffect","followAnyChar","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","sortConfigs","characterSortConfigs","filterConfigs","characterFilterConfigs","ownedCharacterKeyList","allCharacterKeys","cKey","_getChar","characterKeyList","filterFunction","weaponType","sort","sortFunction","concat","open","onClose","onChange","autoFocus","e","onChangeAsc","md","CharacterBtn","pl","weaponTypeKey","cursor","icon","faQuestionCircle","FieldsDisplay","fields","FieldDisplayList","field","FieldDisplay","ListItem","oldData","canShow","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","v","evalIfFunc","text","toFixed","fixed","fieldText","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","formulaTextOverlay","Groups","noWrap","List","borderRadius","shape","overflow","margin","contentDark","main","contentDarker","ToggleButton","shouldForwardProp","prop","baseColor","selectedColor","contrastText","dark","elementHandler","handleMultiSelect","ElementToggle","ToggleButtonGroup","exclusive","fontSize","weaponTypeHandler","WeaponToggle","wt","tooltipAddl","WeaponStatPico","addlText","WeaponNameTooltip","artifactSheets","then","imp","default","tr","strKey","ns","key18","allData","as","mergeData","s","getSlotDesc","setEffectDesc","setNum","setEffectDocument","setEffects","document","hasEnough","this","slots","defIconSrc","icons","set","a","sheets","grouped","entries","forEach","push","artifactSetEffect","setNums","keys","parseInt","sn","length","setHeaderTemplate","flower","circlet","action","st","description","pcNodes","objectKeyValueMap","greaterEq","tally","percent","protectiveCanopy","desc","sections","teamBuff","ffNode","ferventFlames","swNode","soothingWaters","condSIPath","condSI","condReadNode","siNode","equal","shatteringIce","path","header","states","on","highVoltage","iwNodeStam","iwNodeMove","iwNodeCD","impetuousWinds","condERPath","condER","erNodeshield_","erNodeDMG_","erNodeRes_","resonanceSheets","sgt","resonanceData","inferInfoMut","premod","atk_","incHeal_","staminaDec_","moveSPD_","cdRed_","shield_","all_dmg_","geo_enemyRes_","total","critRate_","weaponSheets","weaponData","passiveDescription","refineIndex","iconAwaken","milestoneLevels","lowRarityMilestoneLevels","ambiguousLevel","ambiguousLevelLow","weaponKey","w","getWeaponsOfType","fromEntries","getLevelString","headerTemplate","imgAwaken","createContext","useCharSelectionCallback","navigate","useNavigate","useMatch","end","params","tab","cb","navTab","newChar","initialCharacter","updateChar","defaultInitialWeapon","createWeapon","setWeaponLocation","hitMode","reactionMode","equippedArtifacts","objectKeyMap","conditional","bonusStats","enemyOverride","talent","auto","skill","burst","infusionAura","compareData","updateCharacter","followChar","type","statKey","deepClone","newCharKey","charKey","oldCharKey","oldChar","tChar","c","tind","overrideArt","overrideWeapon","dbDirty","setDbDirty","teamDataBundle","getTeamData","teamBundle","followAnyArt","t1","t2","t3","t4","calcData","uiDataForTeam","objectMap","obj","ck","rest","getCharDataBundle","char1DataBundle","Promise","all","databundle","artifactSheetsData","dataObjForArtifact","dataObjForCharacter","getData","allKeys","arr","len","Set","toggleArr"],"sourceRoot":""}