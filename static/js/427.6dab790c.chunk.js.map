{"version":3,"file":"static/js/427.6dab790c.chunk.js","mappings":"0PAIaA,EAAa,CACxBC,MAAOC,EAAAA,GACPC,IAAKC,EAAAA,GACLC,QAASC,EAAAA,GACTC,MAAOC,EAAAA,GACPC,KAAMC,EAAAA,GACNC,KAAMC,EAAAA,GACNC,OAAQC,EAAAA,GACRC,SAAUC,EAAAA,IAECC,EAAoB,CAC/BhB,OAAO,SAAC,IAAD,CAAiBiB,KAAMhB,EAAAA,KAC9BC,KAAK,SAAC,IAAD,CAAiBe,KAAMd,EAAAA,KAC5BC,SAAS,SAAC,IAAD,CAAiBa,KAAMZ,EAAAA,KAChCC,OAAO,SAAC,IAAD,CAAiBW,KAAMV,EAAAA,KAC9BC,MAAM,SAAC,IAAD,CAAiBS,KAAMR,EAAAA,KAC7BC,MAAM,SAAC,IAAD,CAAiBO,KAAMN,EAAAA,KAC7BC,QAAQ,SAAC,IAAD,CAAiBK,KAAMJ,EAAAA,KAC/BC,UAAU,SAAC,IAAD,CAAiBG,KAAMF,EAAAA,MAE7BG,GAAiBC,EAAAA,EAAAA,GAAaC,OAAOC,KAAKL,IAAoB,SAAAM,GAAG,OAAI,SAAC,IAAD,CAAWC,MAAOD,EAAKE,GAAI,CAAEC,WAAY,GAAzC,SAAgDT,EAAkBM,QAEvII,GAAQ,gBACZC,KAAK,SAAC,IAAD,CAAiBV,KAAMW,EAAAA,KAC5BC,IAAI,SAAC,IAAD,CAAiBZ,KAAMW,EAAAA,KAE3BE,MAAM,SAAC,IAAD,CAAiBb,KAAMc,EAAAA,KAC7BC,KAAK,SAAC,IAAD,CAAiBf,KAAMc,EAAAA,KAE5BE,MAAM,SAAC,IAAD,CAAiBhB,KAAMiB,EAAAA,KAC7BC,KAAK,SAAC,IAAD,CAAiBlB,KAAMiB,EAAAA,KAE5BE,QAAQ,SAAC,IAAD,CAAiBnB,KAAMoB,EAAAA,KAC/BC,WAAW,SAAC,IAAD,CAAiBrB,KAAMsB,EAAAA,KAClCC,UAAU,SAAC,IAAD,CAAiBvB,KAAMwB,EAAAA,KACjCC,WAAW,SAAC,IAAD,CAAiBzB,KAAM0B,EAAAA,KAClCC,UAAU,SAAC,IAAD,CAAiB3B,KAAM4B,EAAAA,KACjCC,OAAO,SAAC,IAAD,CAAiB7B,KAAM8B,EAAAA,KAE9BC,QAAQ,SAAC,IAAD,CAAiB/B,KAAMgC,EAAAA,KAE/BC,SAAS,SAAC,IAAD,CAAiBjC,KAAMkC,EAAAA,KAChCC,SAAS,SAAC,IAAD,CAAiBnC,KAAMoC,EAAAA,MAE7BnC,GACAE,OAAOkC,YAAYlC,OAAOC,KAAKH,GAAgBqC,SAAQ,SAAAC,GAAG,MAAI,CAC/D,CAAC,GAAD,OAAIA,EAAJ,SAAgBtC,EAAesC,IAC/B,CAAC,GAAD,OAAIA,EAAJ,SAAgBtC,EAAesC,IAC/B,CAAC,GAAD,OAAIA,EAAJ,aAAoBtC,EAAesC,IACnC,CAAC,GAAD,OAAIA,EAAJ,WAAkBtC,EAAesC,IACjC,CAAC,GAAD,OAAIA,EAAJ,cAAqBtC,EAAesC,UAIxC,Q,mLC/CMC,EAAe,sDAAYC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAQ5BC,EAAAA,WAMnB,WAAYvC,EAAgBwC,EAA2BC,EAAwBC,GAAa,IAAD,4BALlF1C,SAKkF,OAJlF2C,WAIkF,OAHlFD,UAGkF,OAFlFE,YAEkF,OADlFC,gBACkF,OAW3FC,GAAK,SAACC,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAE,iBAAY,EAAKhD,IAAjB,QAA4BiD,MAAOF,KAXkB,KAgB3FG,mBAAqB,SAACC,GAAD,OAAyB,EAAKC,cAAgB,EAAKN,GAAL,6BAA8BK,IAAiB,IAfhHE,KAAKT,OAASH,EAAWG,OACzBS,KAAKR,WAAaJ,EAAWI,WAC7BQ,KAAKrD,IAAMA,EACXqD,KAAKV,MAAQH,EACba,KAAKX,KAAOA,EAG6B,OAF1C,0BAMD,WAAa,OAAOW,KAAKP,GAAG,UAAS,yBACrC,WAAsB,OAAOO,KAAKT,OAAS,IAAG,uBAC9C,WAAoB,OAAOS,KAAKD,cAAgBC,KAAKP,GAAG,eAAiB,KAAI,uBAC7E,WAAoB,OAAOO,KAAKP,GAAG,iBAAgB,oBAEnD,WAAiB,OAAOO,KAAKV,MAAMW,WAAU,2BAC7C,WACE,OAAID,KAAKD,cAAsBG,EAAAA,GACnBC,EAAAA,KACb,4BACD,SAAeC,GACb,OAAIJ,KAAKD,eAAsBM,EAAAA,EAAAA,IAAeD,IAClCE,EAAAA,EAAAA,IAAkBF,KAC/B,oBACD,SAAOG,GACL,OAAOA,EAAU,EAAIP,KAAKV,MAAMhD,KAAO0D,KAAKV,MAAMkB,cACnD,mBApBD,WAAsB,OAAO1B,MAAc,EAdxBI,GAAAA,EAaZuB,IAAM,SAACC,GAAD,OAAiEA,EAAY5B,EAAaC,MAAK,SAAA4B,GAAC,OAAIA,EAAED,WAAcE,GAb9G1B,EAeZ2B,iBAAmB,SAACC,EAA4CtB,GAA7C,OAAkG/C,OAAOkC,YAAYlC,OAAOsE,QAAQD,GAAQE,QAAO,gDAAuCxB,aAAeA,OAfhNN,EAgBZ+B,eAAiB,SAACC,GAAD,gBAAsCA,EAAOd,MAA7C,YAAsDe,EAAAA,GAAkBD,EAAOE,aAoBlG,IAAMC,EAAiB,SAACX,EAAsBY,EAAaC,EAAmBC,GACnF,IAAM/B,EAAK,SAACC,GAAD,OAAoB,SAAC,IAAD,CAAWC,GAAE,iBAAYe,EAAZ,QAA6Bd,MAAOF,KAChF,MAAO,CACL+B,MAAOhC,EAAG,eACVnD,KAAM,SAAA+C,GAAI,OAAI,SAAC,IAAD,CAASqC,KAAM,EAAG7E,GAAI,CAAE8E,GAAI,GAAKC,IAAKvC,EAAKoB,IAAIoB,EAAAA,GAAAA,OAAAA,KAAkBC,MAAQ,EAAIR,EAAMC,KACjGC,OAAQA,IAAU,SAAC,IAAD,CAAS5E,MAAM,UAAf,SAA0B4E,IAC5CO,YAAa,SAAA1C,GAAI,OAAII,EAAG,sBAAD,OAAuBJ,EAAKoB,IAAIoB,EAAAA,GAAAA,OAAAA,aAA0BC,Y,2bCxCtE,SAASE,IACtB,IAAQC,GAAMC,EAAAA,EAAAA,GAAe,CAAC,YAAa,OAAnCD,EACAE,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAAxBF,SACFG,GAAkBC,EAAAA,EAAAA,IAAW,kBAAMC,EAAAA,EAAAA,SAAuB,IAChE,GAA2CC,EAAAA,EAAAA,UAAQ,WACjD,IAAMC,EAAQP,EAASO,MAAMhG,KACvBiG,GAAQnG,EAAAA,EAAAA,GAAaoG,EAAAA,GAAa,kBAAM,KAO9C,OANIN,GAAiBI,EAAMG,SAAQ,SAAAC,GAAO,IAAD,EACnCC,EAAaT,EAAgBQ,GAAKC,WACjCA,IACHA,EAAU,UAAGZ,EAASO,MAAMjC,IAAIqC,GAAKC,kBAA3B,QAAyC,SACrDJ,EAAMI,GAAcJ,EAAMI,GAAc,KAEnC,CAAEC,eAAgBL,EAAOM,eAAgBP,EAAMQ,UACrD,CAACf,EAAUG,IAVNU,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,eAYlBnE,GAAeyD,EAAAA,EAAAA,IAAW,kBAAMrD,EAAAA,EAAAA,SAAoB,IAC1D,GAAqCuD,EAAAA,EAAAA,UAAQ,WAC3C,IAAMU,EAAUhB,EAASgB,QAAQC,OAC3BT,GAAQnG,EAAAA,EAAAA,GAAa6G,EAAAA,IAAmB,kBAAM,KAKpD,OAJIvE,GAAcqE,EAAQN,SAAQ,SAAAS,GAChC,IAAIC,EAAOzE,EAAawE,EAAG3G,KAAK6C,WAChCmD,EAAMY,GAAQZ,EAAMY,GAAQ,KAEvB,CAAEC,YAAab,EAAOc,YAAaN,EAAQD,UACjD,CAACf,EAAUrD,IARN0E,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,YAUrB,GAAyChB,EAAAA,EAAAA,UAAQ,WAC/C,IAAME,GAAQnG,EAAAA,EAAAA,GAAakH,EAAAA,IAAa,kBAAM,KACxCC,EAAOxB,EAASwB,KAAKP,OAK3B,OAJAO,EAAKd,SAAQ,SAAAe,GACX,IAAMC,EAAUD,EAAIC,QACpBlB,EAAMkB,GAAWlB,EAAMkB,GAAW,KAE7B,CAAEC,cAAenB,EAAOoB,cAAeJ,EAAKT,UAClD,CAACf,IARI2B,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,cASjBC,GAAQC,EAAAA,EAAAA,KACRC,IAAWC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,GAAG,OAEpD,OAAO,UAACC,EAAA,EAAD,YACL,SAACC,EAAA,EAAD,CAAY9C,OAAO,SAAC+C,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BxC,EAA1B,2CAAgEyC,QAAQ,SAACC,EAAA,EAAD,CAAgBC,SAAS,aACpH,SAACC,EAAA,EAAD,KACA,UAACC,EAAA,EAAD,CAAajI,GAAI,CAAEkI,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAlE,WACE,SAACC,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAgBtI,GAAI,CAAEkI,QAAS,OAAQK,eAAgB,gBAAiBC,EAAG,EAAGJ,IAAK,EAAGK,SAAU,QAAUC,UAAWC,EAAAA,GAAYC,GAAG,cAApI,WACE,SAACC,EAAA,EAAD,CAAMC,OAAO,8BAAS1D,EAAC,sBAAV,IAA2CgB,KAA0B3G,MAAM,SAACsJ,EAAA,EAAD,IAAY/I,GAAI,CAAEgJ,UAAW3B,EAAU,OAAS,OAAQ4B,SAAU,GAAKlJ,MAAOqG,EAAiB,UAAY,cAClMxG,OAAOsE,QAAQiC,GAAgB+C,KAAI,+BAAElH,EAAF,KAAOmH,EAAP,YAAgB,SAACN,EAAA,EAAD,CAAgB7I,GAAI,CAAEiJ,SAAU,GAAKlJ,MAAOoJ,EAAMnH,EAAM,YAAavC,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAMlB,EAAAA,GAAWyD,KAAU8G,OAAO,4BAASK,KAA/HnH,YAGnE,SAACqG,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAgBtI,GAAI,CAAEkI,QAAS,OAAQK,eAAgB,gBAAiBC,EAAG,EAAGJ,IAAK,EAAGK,SAAU,QAAUC,UAAWC,EAAAA,GAAYC,GAAG,WAApI,WACE,SAACC,EAAA,EAAD,CAAMC,OAAO,8BAAS1D,EAAC,mBAAV,IAAwCwB,KAAuBnH,KAAM4J,EAAAA,EAAAA,IAAAA,MAAkBrJ,GAAI,CAAEgJ,UAAW3B,EAAU,OAAS,OAAQ4B,SAAU,GAAKlJ,MAAO6G,EAAc,UAAY,cAC/LhH,OAAOsE,QAAQyC,GAAauC,KAAI,iCAAEI,EAAF,KAAMH,EAAN,YAAe,SAACN,EAAA,EAAD,CAAe7I,GAAI,CAAEiJ,SAAU,GAAKlJ,MAAOoJ,EAAM,UAAY,YAAa1J,MAAM,SAAC8J,EAAA,EAAD,CAASxE,IAAG,UAAEsE,EAAAA,EAAAA,mBAAF,aAAE,EAAqBC,GAAKzE,KAAM,IAAOiE,OAAO,4BAASK,KAA1IG,YAG/D,SAACjB,EAAA,EAAD,WACE,UAACC,EAAA,EAAD,CAAgBtI,GAAI,CAAEkI,QAAS,OAAQK,eAAgB,gBAAiBC,EAAG,EAAGJ,IAAK,EAAGK,SAAU,QAAUC,UAAWC,EAAAA,GAAYC,GAAG,aAApI,WACE,SAACC,EAAA,EAAD,CAAMC,OAAO,8BAAS1D,EAAC,qBAAV,IAA0C8B,KAAyBzH,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAM+J,EAAAA,GAAAA,SAAwBxJ,GAAI,CAAEgJ,UAAW3B,EAAU,OAAS,OAAQ4B,SAAU,GAAKlJ,MAAOmH,EAAgB,UAAY,cACrOtH,OAAOsE,QAAQ+C,GAAeiC,KAAI,+BAAElC,EAAF,KAAWmC,EAAX,YAAoB,SAACN,EAAA,EAAD,CAAoB7I,GAAI,CAAEiJ,SAAU,GAAKlJ,MAAOoJ,EAAM,UAAY,YAAa1J,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAM+J,EAAAA,GAAYxC,KAAc8B,OAAO,4BAASK,KAA9InC,iB,iBC1EtEyC,EAASC,KAAKC,OAAMC,YAEX,SAASC,IACtB,IAAQzE,GAAMC,EAAAA,EAAAA,GAAe,CAAC,YAAa,OAAnCD,EACR,OAAKqE,EAAOpD,QACL,UAACoB,EAAA,EAAD,YACL,SAACC,EAAA,EAAD,CAAY9C,OAAO,SAAC+C,EAAA,EAAD,CAAYC,QAAQ,KAAKc,UAAWoB,EAAAA,EAAM/J,MAAM,UAAUgK,KAAMH,2BAAyCI,OAAO,SAASC,IAAI,WAA7H,SAAyI7E,EAAzI,0CAA8KyC,QAAQ,SAACqC,EAAA,EAAD,CAASnC,SAAS,aAC3N,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,WACE,SAACkC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAApD,SACGf,EAAOP,KAAI,SAAAuB,GAAK,OAAI,SAACN,EAAA,GAAD,CAAMO,MAAI,EAACJ,GAAI,EAAf,UACnB,SAACK,EAAA,EAAD,CAAiB3K,GAAI,CACnB4K,SAAU,WACVC,GAAI,SAEJC,GAAI,OACJC,OAAQ,EACRC,aAAc,EACdC,SAAU,SACV,WAAY,CACVL,SAAU,WACVM,IAAK,EACLC,KAAM,EACNC,MAAO,OACPL,OAAQ,SAbZ,UAgBE,mBAAQK,MAAM,MAAML,OAAO,MAAMnG,MAAM,0BAA0BG,IAAG,iDAA4C0F,GAASY,YAAa,EAAGC,iBAAe,KAhBhJb,IADgCA,aANvB,K,sICDvBc,GAAa,CAAC,CAClBC,QAAS,4BACT/L,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAMgM,GAAAA,MAChCC,IAAK9B,uBACL7J,MAAO,WACN,CACDyL,QAAS,2BACT/L,MAAM,SAACkM,GAAA,EAAD,IACND,IAAK9B,sBACL7J,MAAO,SACN,CACDyL,QAAS,kBACT/L,MAAM,SAACyK,EAAA,EAAD,IACNwB,IAAK9B,2BACL7J,MAAO,OACN,CACDyL,QAAS,iBACT/L,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAMmM,GAAAA,MAChCF,IAAK9B,yBACL7J,MAAO,UACN,CACDyL,QAAS,kBACT/L,MAAM,SAACoM,GAAA,EAAD,IACNH,IAAK9B,4BACL7J,MAAO,WACN,CACDyL,QAAS,kBACT/L,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAMqM,GAAAA,MAChCJ,IAAK9B,2BACL7J,MAAO,WACN,CACDyL,QAAS,iBACT/L,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAMsM,GAAAA,MAChCL,IAAK9B,0BACL7J,MAAO,WAGHiM,GAAU,CAAC,CACfpH,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,2DACR3F,MAAM,SAACyK,EAAA,EAAD,IACNsB,QAAS,SAAApG,GAAC,OAAIA,EAAJ,6DACVsG,IAAK9B,2BACL7J,MAAO,OACN,CACD6E,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,4DACR3F,MAAM,SAACwM,GAAA,EAAD,IACNT,QAAS,SAAApG,GAAC,OAAIA,EAAJ,8DACVwD,GAAI,WACJ7I,MAAO,WACN,CACD6E,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,uDACR3F,MAAM,SAACyM,GAAA,EAAD,IACNV,QAAS,SAAApG,GAAC,OAAIA,EAAJ,yDACVsG,IAAK9B,2BACL7J,MAAO,UACN,CACD6E,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,8DACR3F,MAAM,SAAC2J,EAAA,EAAD,CAAoB3J,KAAMgM,GAAAA,MAChCD,QAAS,SAAApG,GAAC,OAAIA,EAAJ,gEACVsG,IAAK9B,uBACL7J,MAAO,WACN,CACD6E,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,wDACR3F,MAAM,SAAC0M,GAAA,EAAD,IACNX,QAAS,SAAApG,GAAC,OAAIA,EAAJ,0DACVwD,GAAI,OACJ7I,MAAO,YAGM,SAASqM,KACtB,IAAQhH,GAAMC,EAAAA,EAAAA,GAAe,CAAC,YAAa,OAAnCD,EACR,OAAO,UAACqC,EAAA,EAAD,YACL,SAACC,EAAA,EAAD,CAAY9C,OAAO,SAAC+C,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BxC,EAA1B,4CAAiEyC,QAAQ,SAACwE,GAAA,EAAD,CAAYtE,SAAS,aACjH,SAACC,EAAA,EAAD,KACA,UAACC,EAAA,EAAD,CAAajI,GAAI,CAAEkI,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAlE,WAEE,SAACuC,EAAA,EAAD,CAAKzC,QAAQ,OAAOK,eAAe,gBAAgBH,IAAK,EAAxD,SACGmD,GAAWrC,KAAI,gBAAGsC,EAAH,EAAGA,QAAS/L,EAAZ,EAAYA,KAAMiM,EAAlB,EAAkBA,IAAK3L,EAAvB,EAAuBA,MAAvB,OAAmC,SAACuM,GAAA,EAAD,CAAuB1H,MAAO4G,EAASe,UAAU,MAAMC,OAAK,EAA5D,UACjD,SAACC,GAAA,EAAD,CAAQC,WAAS,EAAC3M,MAAOA,EAAqBC,GAAI,CAAEwI,EAAG,EAAGmE,SAAU,GAAKjE,UAAWoB,EAAAA,EAAMC,KAAM2B,EAAK1B,OAAO,SAASC,IAAI,WAAzH,SAAqIxK,GAAhG+L,IAD0BA,QAIlEQ,GAAQ9C,KAAI,SAAC0D,EAAUC,GACtB,IACIC,EADIlI,EAAgCgI,EAAhChI,MAAOnF,EAAyBmN,EAAzBnN,KAAM+L,EAAmBoB,EAAnBpB,QAASzL,EAAU6M,EAAV7M,MAM9B,MAJI,OAAQ6M,IACVE,GAAS,SAACL,GAAA,EAAD,CAAQC,WAAS,EAAS3M,MAAOA,EAAO2I,UAAWC,EAAAA,GAAYC,GAAIgE,EAAShE,GAAImE,UAAWtN,EAA3F,SAAkGmF,EAAMQ,IAAjFyH,IAC9B,QAASD,IACXE,GAAS,SAACL,GAAA,EAAD,CAAQC,WAAS,EAAS3M,MAAOA,EAAO2I,UAAWoB,EAAAA,EAAMC,KAAM6C,EAASlB,IAAK1B,OAAO,SAASC,IAAI,WAAW8C,UAAWtN,EAAvH,SAA8HmF,EAAMQ,IAA7GyH,KAC3B,SAACP,GAAA,EAAD,CAAiB1H,MAAO4G,EAAQpG,GAAImH,UAAU,MAAMC,OAAK,EAAzD,SACJM,GADkBD,Y,8DCnFd,SAASG,KACtB,OAA0BC,EAAAA,GAAAA,GAAW,uBAAwBC,GAAAA,IAApDC,GAAT,eAASA,YACT,GAAwBC,EAAAA,EAAAA,UAAS,IAAIC,KAAKA,KAAKC,MAAQC,GAAAA,GAAUJ,KAAjE,eAAOK,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAMIC,EANmB,SAAnBC,IAEF,OADAH,EAAQ,IAAIJ,KAAKA,KAAKC,MAAQC,GAAAA,GAAUJ,KACjCU,YAAW,WAChBF,EAAWC,MACVE,GAAAA,GAAaT,KAAKC,MAAQQ,GAAAA,IAEhBF,GACf,OAAO,kBAAMG,aAAaJ,MACzB,CAACR,IAEJ,OAAyCF,EAAAA,GAAAA,GAAW,oBAAqBe,GAAAA,IAAzE,sBAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAQC,EAAxB,KACMC,GAAiBC,EAAAA,EAAAA,aAAOtK,GA0B9B,OAfA2J,EAAAA,EAAAA,YAAU,WACR,GAAIO,EAAQK,GAAAA,GAAW,CACrB,IAAMhB,EAAMD,KAAKC,MACXiB,EAAaD,GAAAA,GAAYL,EACzBO,EAAqBC,KAAKC,IAAID,KAAKE,OAAOrB,EAAMY,GAASU,GAAAA,IAAiBL,GAC1EM,EAAeZ,EAAQO,EACvBM,EAAUZ,EAAOM,EAAqBI,GAAAA,GAC5CT,EAAc,CAAEF,MAAOY,EAAcX,KAAMY,IACvCD,EAAeP,GAAAA,KACjBF,EAAeW,QAAUlB,YAAW,kBAlBxBmB,EAkBuCH,EAAe,IAjBtDP,GAAAA,IACdF,EAAeW,SAAWhB,aAAaK,EAAeW,SACtDX,EAAeW,aAAUhL,GAEzBqK,EAAeW,QAAUlB,YAAW,kBAAMoB,QAAQC,IAAI,YAAaF,EAAW,KAAIJ,GAAAA,SACpFT,EAAc,CAAEF,MAAOe,EAAUd,MAAM,IAAIb,MAAO8B,YANnC,IAACH,IAkB0D1B,EAAMwB,IAEhF,OAAO,kBAAMV,EAAeW,SAAWhB,aAAaK,EAAeW,YAElE,KAEI,UAACtH,EAAA,EAAD,YACL,SAACC,EAAA,EAAD,CAAY9C,OAAO,UAAC+C,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0BuF,EAAa,IAAKK,EAAK4B,mBAAmB,GAAI,CAAEC,SAAU,WAAwBxH,QAAQ,SAACyH,GAAA,EAAD,CAAkBvH,SAAS,aAClK,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,WACE,SAACI,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAgBtI,GAAI,CAAEwI,EAAG,GAAKE,UAAWC,EAAAA,GAAYC,GAAG,SAAxD,UACE,UAACjB,EAAA,EAAD,CAAYC,QAAQ,KAAK5H,GAAI,CAAEuP,UAAW,UAA1C,WACE,SAAChG,EAAA,EAAD,CAASxE,IAAKsE,EAAAA,EAAAA,MAAAA,WACd,4BAAO4E,EAAP,IAAeK,GAAAA,kB,wSCrDrBkB,GAAO,CAAC,CACZC,KAAM,QACNhL,IAAKiL,GACL9K,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,kDACRuK,SAAU,qBACVjE,IAAK9B,uBACJ,CACD6F,KAAM,SACNhL,IAAKmL,GACLhL,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,8CACRuK,SAAU,oBACVjE,IAAK9B,uBACJ,CACD6F,KAAM,MACNhL,IAAKoL,GACLjL,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,8CACRuK,SAAU,qBACVjE,IAAK9B,uBACJ,CACD6F,KAAM,oBACNhL,IAAKqL,GACLlL,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,8CACRuK,SAAU,cACVjE,IAAK,IACJ,CACD+D,KAAM,QACNhL,IAAKsL,GACLnL,MAAO,SAAAQ,GAAC,OAAIA,EAAJ,8CACRuK,SAAU,gBACVjE,IAAK,KAGQ,SAASsE,KACtB,IAAQ5K,GAAMC,EAAAA,EAAAA,GAAe,CAAC,YAAa,OAAnCD,EACR,OAAO,UAACqC,EAAA,EAAD,YACL,SAACC,EAAA,EAAD,CAAY9C,OAAO,SAAC+C,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BxC,EAA1B,wCAA2DyC,QAAQ,SAACoI,GAAA,EAAD,CAAQlI,SAAS,aACvG,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,CAAajI,GAAI,CAAEkI,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAlE,UACE,SAAC+B,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,EAAG4F,GAAI,GAAK1F,QAAS,EAApD,SACGgF,GAAKtG,KAAI,WAAsC2D,GAAtC,IAAG4C,EAAH,EAAGA,KAAMhL,EAAT,EAASA,IAAKG,EAAd,EAAcA,MAAO+K,EAArB,EAAqBA,SAAUjE,EAA/B,EAA+BA,IAA/B,OAA4C,SAACvB,EAAA,GAAD,CAAMO,MAAI,EAAYJ,GAAIuC,EAAI,EAAI,EAAI,EAAGqD,GAAI,EAA7C,UACpD,SAAC7H,EAAA,EAAD,CAAWrI,GAAI,CAAE+K,OAAQ,QAAzB,UACE,UAAC9C,EAAA,EAAD,YACE,SAAC0C,EAAA,EAAD,CAAKjC,UAAU,MAAM3D,IAAKN,EAAKzE,GAAI,CAAEoL,MAAO,OAAQL,OAAQ,OAAQC,aAAc,UAClF,UAACL,EAAA,EAAD,CAAKzC,QAAQ,OAAOC,cAAc,SAAlC,UACGuD,GAAM,SAAC/D,EAAA,EAAD,CAAYC,QAAQ,KAAK5H,GAAI,CAAEuP,UAAW,UAAYxP,MAAM,UAAU2I,UAAWoB,EAAAA,EAAMC,KAAM2B,EAAK1B,OAAO,SAASC,IAAI,WAAtH,UAAiI,4BAASwF,OAC/I,SAAC9H,EAAA,EAAD,CAAYC,QAAQ,KAAK5H,GAAI,CAAEuP,UAAW,UAA1C,UAAsD,4BAASE,OACjE,SAAC9H,EAAA,EAAD,CAAYC,QAAQ,YAAY5H,GAAI,CAAEuP,UAAW,UAAjD,SACG3K,EAAMQ,MAET,SAACuC,EAAA,EAAD,CAAYC,QAAQ,YAAY5H,GAAI,CAAEuP,UAAW,SAAUY,UAAoB,UAATV,EAAmB,sBAAmB1L,GAAahE,MAAM,kBAA/H,SACG4P,aAX0D,kBCtC9D,SAASS,KAGtB,IAAMjJ,GAAQC,EAAAA,EAAAA,KACRiJ,GAAK/I,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,GAAG,OAE9C,OADA8I,EAAAA,GAAAA,KAAa,CAAEC,QAAS,WAAYC,KAAM,UACtCH,GAAW,UAAClG,EAAA,GAAD,CAAMC,WAAS,EAACI,QAAS,EAAGiG,UAAW,cAAezQ,GAAI,CAAE0Q,GAAI,GAAhE,WACb,UAACvG,EAAA,GAAD,CAAMO,MAAI,EAACJ,GAAI,GAAI+F,GAAI,EAAGM,GAAI,EAAG3Q,GAAI,CAAEkI,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAtF,WACE,SAACgE,GAAD,KACA,SAACY,GAAD,QAEF,UAAC7C,EAAA,GAAD,CAAMO,MAAI,EAACJ,GAAI,GAAI+F,GAAI,EAAGM,GAAI,EAAG3Q,GAAI,CAAEkI,QAAS,OAAQC,cAAe,SAAUC,IAAK,GAAtF,WACE,SAACwI,GAAD,KACA,SAACzL,EAAD,KACA,SAAC0E,EAAD,KACA,SAACmG,GAAD,WAIG,UAACrF,EAAA,EAAD,CAAK+F,GAAI,EAAGxI,QAAQ,OAAOC,cAAc,SAASC,IAAK,EAAvD,WACL,SAACwI,GAAD,KACA,SAACxE,GAAD,KACA,SAACjH,EAAD,KACA,SAAC6H,GAAD,KACA,SAACnD,EAAD,KACA,SAACmG,GAAD,OAIJ,SAASY,KACP,IAAQxL,GAAMC,EAAAA,EAAAA,GAAe,aAArBD,EACR,OAAO,SAACqC,EAAA,EAAD,WACL,SAACQ,EAAA,EAAD,WACE,SAACN,EAAA,EAAD,CAAYC,QAAQ,YAApB,UACE,UAACiJ,EAAA,EAAD,CAAOzL,EAAGA,EAAG0L,QAAQ,QAArB,kBACM,yCADN,KACgC,SAAChH,EAAA,EAAD,CAAMC,KAAK,8BAA8BC,OAAO,SAASC,IAAI,aAA7D,UAA0E,4CAD1G,wK,qSCrCKqE,EAAY,IACZM,EAAgB,EAAImC,EAAAA,GAC1B,SAAS/C,IACd,MAAO,CACLC,MAAOK,EACPJ,MAAM,IAAIb,MAAO8B,WAIN,SAAS6B,IACtB,OAAyC/D,EAAAA,EAAAA,GAAW,oBAAqBe,GAAzE,sBAASC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAQC,EAAxB,KACMC,GAAiBC,EAAAA,EAAAA,aAAOtK,GAExBkN,EAAW,SAACjC,GACZA,GAAYV,GACdF,EAAeW,SAAWhB,aAAaK,EAAeW,SACtDX,EAAeW,aAAUhL,GAEzBqK,EAAeW,QAAUlB,YAAW,kBAAMoB,QAAQC,IAAI,YAAaF,EAAW,KAAIJ,GACpFT,EAAc,CAAEF,MAAOe,EAAUd,MAAM,IAAIb,MAAO8B,cAGpDzB,EAAAA,EAAAA,YAAU,WACR,GAAIO,EAAQK,EAAW,CACrB,IAAMhB,EAAMD,KAAKC,MACXiB,EAAaD,EAAYL,EACzBO,EAAqBC,KAAKC,IAAID,KAAKE,OAAOrB,EAAMY,GAASU,GAAiBL,GAC1EM,EAAeZ,EAAQO,EACvBM,EAAUZ,EAAOM,EAAqBI,EAC5CT,EAAc,CAAEF,MAAOY,EAAcX,KAAMY,IACvCD,EAAeP,IACjBF,EAAeW,QAAUlB,YAAW,kBAAMoD,EAASpC,EAAe,KAAIvB,EAAMwB,IAEhF,OAAO,kBAAMV,EAAeW,SAAWhB,aAAaK,EAAeW,YAElE,IAEH,IAAMmC,EAAmBjD,GAASK,EAAYJ,EAAOA,EAAOU,EAGtDuC,EAAgB,IAAI9D,KADDY,GAASK,EAAYJ,EAAQA,GAAQI,EAAYL,GAASW,GAG7EwC,GAAkBC,EAAAA,EAAAA,IAAW5C,KAAK6C,IAAIJ,EAAmB7D,KAAKC,QAEpE,OAAO,UAAC,IAAD,YACL,UAAC,KAAD,CAAMlD,WAAS,EAACpK,GAAI,CAAEuR,GAAI,EAAGC,GAAI,GAAKhH,QAAS,EAA/C,WACE,SAAC,KAAD,CAAME,MAAI,EAAV,UACE,SAAC,IAAD,CAAS3F,IAAKsE,EAAAA,EAAAA,MAAAA,QAAsBrJ,GAAI,CAAE+H,SAAU,YAEtD,SAAC,KAAD,CAAM2C,MAAI,EAAV,UACE,SAAC,IAAD,CAAY9C,QAAQ,KAApB,iCAGJ,SAAC,IAAD,KACA,SAAC,IAAD,WACE,UAAC,KAAD,CAAMwC,WAAS,EAACI,QAAS,EAAzB,WACE,SAAC,KAAD,CAAME,MAAI,EAAV,UACE,UAAC,IAAD,CAAY9C,QAAQ,KAApB,WACE,SAAC,IAAD,CAAS7C,IAAKsE,EAAAA,EAAAA,MAAAA,WACd,SAAC,KAAD,CAAW3C,KAAK,SAAS1G,GAAI,CAAEoL,MAAO,MAAOrD,SAAU,QAAU9C,MAAOgJ,EAAOwD,WAAY,CAAE/C,IAAK,EAAGgD,IAAK,IAAK1R,GAAI,CAAEuP,UAAW,UAAaoC,SAAW,SAAAC,GAAC,OAAIX,EAASY,SAASD,EAAE5H,OAAO/E,YACxL,gCAAQqJ,WAGZ,UAAC,KAAD,CAAM5D,MAAI,EAACzB,SAAU,EAArB,WACE,UAAC,IAAD,CAAayD,WAAS,EAAtB,WACE,SAAC,IAAD,CAAQoF,QAAS,kBAAMb,EAAS,IAAIc,SAAoB,IAAV9D,EAA9C,gBACA,SAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAShD,EAAQ,IAAI8D,SAAoB,IAAV9D,EAAtD,iBACA,SAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAShD,EAAQ,KAAK8D,SAAU9D,EAAQ,GAA/D,kBACA,SAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAShD,EAAQ,KAAK8D,SAAU9D,EAAQ,GAA/D,kBACA,SAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAShD,EAAQ,KAAK8D,SAAU9D,EAAQ,GAA/D,kBACA,SAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAShD,EAAQ,IAAxC,iBACA,SAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAShD,EAAQ,KAAxC,kBACA,UAAC,IAAD,CAAQ6D,QAAS,kBAAMb,EAAS3C,IAAYyD,SAAU9D,IAAUK,EAAhE,iBAAgFA,SAElF,SAAC,IAAD,CAAY1G,QAAQ,YAAY5H,GAAI,CAAEgS,GAAI,GAA1C,SACG/D,EAAQK,GAAY,6CAAqB8C,EAArB,mBAAsDD,EAAc/B,qBAApE,IAA2F+B,EAAcc,yBAC5H,gEAAwCb,EAAxC,WAAiED,EAAc/B,qBAA/E,IAAsG+B,EAAcc,8BAG1H,SAAC,KAAD,CAAMvH,MAAI,EAACJ,GAAI,GAAf,UACE,SAAC,IAAD,CAAY1C,QAAQ,UAApB,2K,kQC9EG2F,EAAY,CACvB,SAAa,EAAI2E,EAAAA,GACjB,OAAUA,EAAAA,GACV,KAAQ,EAAIA,EAAAA,GACZ,aAAc,EAAIA,EAAAA,IAIb,SAAShF,IACd,MAAO,CAAEC,YAAavN,OAAOC,KAAK0N,GAAW,IAEhC,SAAS4E,IACtB,OAAuClF,EAAAA,EAAAA,GAAW,uBAAwBC,GAA1E,eAASC,EAAT,KAASA,YAAeiF,EAAxB,KACMC,GAAiBC,EAAAA,EAAAA,cAAY,SAACnF,GAAD,OAAiBiF,EAAY,CAAEjF,YAAAA,MAAgB,CAACiF,IAEnF,GAAwBhF,EAAAA,EAAAA,UAAS,IAAIC,KAAKA,KAAKC,MAAQC,EAAUJ,KAAjE,eAAOK,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAMIC,EANmB,SAAnBC,IAEF,OADAH,EAAQ,IAAIJ,KAAKA,KAAKC,MAAQC,EAAUJ,KACjCU,YAAW,WAChBF,EAAWC,MACVE,EAAAA,GAAaT,KAAKC,MAAQQ,EAAAA,IAEhBF,GACf,OAAO,kBAAMG,aAAaJ,MACzB,CAACR,IAEJ,IAAIoF,EAAY,IAAIlF,KAAKG,GACrB+E,EAAUC,cAAgB,EAC5BD,EAAUE,YAAY,EAAG,EAAG,EAAG,IAE/BF,EAAY,IAAIlF,KAAKkF,EAAUpD,UAAYuD,EAAAA,KACjCD,YAAY,EAAG,EAAG,EAAG,GAEjC,IAAIE,EAAiBJ,EAAUpD,UAAY3B,EAAK2B,UAC5CyD,GAAuBvB,EAAAA,EAAAA,IAAWsB,GAEtC,OAAO,UAAC,IAAD,YACL,UAAC,KAAD,CAAMvI,WAAS,EAACpK,GAAI,CAAEuR,GAAI,EAAGC,GAAI,GAAKhH,QAAS,EAA/C,WACE,SAAC,KAAD,CAAME,MAAI,EAAV,UACE,SAAC,IAAD,CAAY9C,QAAQ,KAApB,UAAyB,SAAC,IAAD,CAAiBnI,KAAMoT,EAAAA,IAASC,UAAU,eAErE,SAAC,KAAD,CAAMpI,MAAI,EAACzB,SAAU,EAArB,UACE,SAAC,IAAD,CAAYrB,QAAQ,KAApB,4BAEF,SAAC,KAAD,CAAM8C,MAAI,EAAV,UACE,SAAC,IAAD,CAAgB9F,MAAOuI,EAAvB,SACGvN,OAAOC,KAAK0N,GAAWrE,KAAI,SAAA6J,GAAO,OACjC,SAAC,IAAD,CAAwBC,SAAU7F,IAAgB4F,EAAShB,SAAU5E,IAAgB4F,EAASjB,QAAS,kBAAMO,EAAeU,IAA5H,SAAwIA,GAAzHA,cAIvB,SAAC,IAAD,KACA,SAAC,IAAD,WACE,UAAC,KAAD,CAAM3I,WAAS,EAAC7B,eAAe,SAASiC,QAAS,EAAjD,WACE,SAAC,KAAD,CAAME,MAAI,EAAC1K,GAAI,CAAE0Q,GAAI,GAArB,UACE,SAAC,IAAD,CAAY9I,QAAQ,KAApB,SACG4F,EAAK4B,mBAAmB,GAAI,CAAEC,SAAU,aAG7C,UAAC,KAAD,CAAM3E,MAAI,EAACxC,QAAQ,OAAOC,cAAc,SAASI,eAAe,eAAhE,WACE,UAAC,IAAD,4BAAyB,uBAAIiF,EAAKyF,qBAClC,UAAC,IAAD,iCAA8B,uBAAIL,QAClC,UAAC,IAAD,kCAA+B,uBAAInE,KAAKE,MAAMgE,GAAkB,EAAI5B,EAAAA,uB,8LCxEjEjD,EAAY,IACZiD,EAAY,GAAKjD,EACjBoE,EAAU,GAAKnB,EACf2B,EAAS,GAAKR,EAEpB,SAASgB,EAAUC,GACxB,IAAIC,EAAeD,EAAK,IACpBE,EAAU5E,KAAKE,MAAOwE,EAAK,IAAQ,IACnCG,EAAU7E,KAAKE,MAAOwE,EAAE,IAAkB,IAE9C,MAAO,CAAEI,MADG9E,KAAKE,MAAOwE,EAAE,MACVG,QAAAA,EAASD,QAAAA,EAASD,aAAAA,GAE7B,SAAS/B,EAAW8B,GAEzB,MAAkCD,EAAUC,GAAtCI,EAAN,EAAMA,MAAOD,EAAb,EAAaA,QAASD,EAAtB,EAAsBA,QAClBG,EAAW,UAEf,OADID,IAAOC,EAAW,SAChB,GAAN,OAAUD,EAAK,UAAMA,EAAN,KAAiB,IAAhC,QAAqCE,EAAAA,EAAAA,IAAWH,EAAS,IAAK,GAA9D,aAAoEG,EAAAA,EAAAA,IAAWJ,EAAS,IAAK,GAA7F,YAAmGG,GAE9F,SAASE,EAAaP,GAE3B,MAAgDD,EAAUC,GAApDI,EAAN,EAAMA,MAAOD,EAAb,EAAaA,QAASD,EAAtB,EAAsBA,QAASD,EAA/B,EAA+BA,aAC3BI,EAAW,UAEf,OADID,IAAOC,EAAW,SAChB,GAAN,OAAUD,EAAK,UAAMA,EAAN,KAAiB,IAAhC,QAAqCE,EAAAA,EAAAA,IAAWH,EAAS,IAAK,GAA9D,aAAoEG,EAAAA,EAAAA,IAAWJ,EAAS,IAAK,GAA7F,aAAmGI,EAAAA,EAAAA,IAAWL,EAAc,IAAK,GAAjI,YAAuII","sources":["Components/StatIcon.tsx","Data/Weapons/WeaponSheet.tsx","PageHome/InventoryCard.tsx","PageHome/VidGuideCard.tsx","PageHome/QuickLinksCard.tsx","PageHome/ResinCard.tsx","PageHome/TeamCard.tsx","PageHome/index.tsx","PageTools/ResinCounter.tsx","PageTools/TeyvatTime.tsx","Util/TimeUtil.ts"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { objectKeyMap } from '../Util/Util'\nimport ColorText from './ColoredText'\nimport { faAnemo, faAtk, faCdReduction, faCritDmg, faCritRate, faCryo, faDef, faDendro, faElectro, faElementalMastery, faEnergyRecharge, faGeo, faHealingAdd, faHealingBonus, faHp, faHydro, faMaxStamina, faPhysicalDmgBonus, faPyro, faShieldStrength } from './faIcons'\nexport const elementSvg = {\n  anemo: faAnemo,\n  geo: faGeo,\n  electro: faElectro,\n  hydro: faHydro,\n  pyro: faPyro,\n  cryo: faCryo,\n  dendro: faDendro,\n  physical: faPhysicalDmgBonus,\n}\nexport const uncoloredEleIcons = {\n  anemo: <FontAwesomeIcon icon={faAnemo as any} />,\n  geo: <FontAwesomeIcon icon={faGeo as any} />,\n  electro: <FontAwesomeIcon icon={faElectro as any} />,\n  hydro: <FontAwesomeIcon icon={faHydro as any} />,\n  pyro: <FontAwesomeIcon icon={faPyro as any} />,\n  cryo: <FontAwesomeIcon icon={faCryo as any} />,\n  dendro: <FontAwesomeIcon icon={faDendro as any} />,\n  physical: <FontAwesomeIcon icon={faPhysicalDmgBonus as any} />,\n} as const\nconst coloredEleIcon = objectKeyMap(Object.keys(uncoloredEleIcons), key => <ColorText color={key} sx={{ lineHeight: 1 }} >{uncoloredEleIcons[key]}</ColorText>)\n\nconst StatIcon = {\n  hp_: <FontAwesomeIcon icon={faHp as any} />,\n  hp: <FontAwesomeIcon icon={faHp as any} />,\n\n  atk_: <FontAwesomeIcon icon={faAtk as any} />,\n  atk: <FontAwesomeIcon icon={faAtk as any} />,\n\n  def_: <FontAwesomeIcon icon={faDef as any} />,\n  def: <FontAwesomeIcon icon={faDef as any} />,\n\n  eleMas: <FontAwesomeIcon icon={faElementalMastery as any} />,\n  critRate_: <FontAwesomeIcon icon={faCritRate as any} />,\n  critDMG_: <FontAwesomeIcon icon={faCritDmg as any} />,\n  enerRech_: <FontAwesomeIcon icon={faEnergyRecharge as any} />,\n  incHeal_: <FontAwesomeIcon icon={faHealingAdd as any} />,\n  heal_: <FontAwesomeIcon icon={faHealingBonus as any} />,\n\n  cdRed_: <FontAwesomeIcon icon={faCdReduction as any} />,\n\n  shield_: <FontAwesomeIcon icon={faShieldStrength as any} />,\n  stamina: <FontAwesomeIcon icon={faMaxStamina as any} />,\n\n  ...coloredEleIcon,\n  ...Object.fromEntries(Object.keys(coloredEleIcon).flatMap(ele => [\n    [`${ele}_dmg_`, coloredEleIcon[ele]],\n    [`${ele}_res_`, coloredEleIcon[ele]],\n    [`${ele}_critDMG_`, coloredEleIcon[ele]],\n    [`${ele}_dmgInc`, coloredEleIcon[ele]],\n    [`${ele}_enemyRes_`, coloredEleIcon[ele]]\n  ]))\n}\n\nexport default StatIcon\n","import type { WeaponData } from 'pipeline';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport SqBadge from '../../Components/SqBadge';\nimport { Translate } from '../../Components/Translate';\nimport { input } from '../../Formula';\nimport { Data } from '../../Formula/type';\nimport { Rarity, WeaponKey, WeaponTypeKey } from '../../Types/consts';\nimport { DocumentSection, IDocumentHeader } from '../../Types/sheet';\nimport { ICachedWeapon } from '../../Types/weapon';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, lowRarityMilestoneLevels, milestoneLevels } from '../LevelData';\n\nconst weaponSheets = import('.').then(imp => imp.default)\n\nexport interface IWeaponSheet {\n  icon: string,\n  iconAwaken: string,\n  document: DocumentSection[],\n}\n\nexport default class WeaponSheet {\n  readonly key: WeaponKey;\n  readonly sheet: IWeaponSheet;\n  readonly data: Data;\n  readonly rarity: Rarity;\n  readonly weaponType: WeaponTypeKey;\n  constructor(key: WeaponKey, weaponSheet: IWeaponSheet, weaponData: WeaponData, data: Data) {\n    this.rarity = weaponData.rarity\n    this.weaponType = weaponData.weaponType\n    this.key = key\n    this.sheet = weaponSheet\n    this.data = data\n  }\n  static get = (weaponKey: WeaponKey | \"\"): Promise<WeaponSheet> | undefined => weaponKey ? weaponSheets.then(w => w[weaponKey]) : undefined\n  static get getAll() { return weaponSheets }\n  static getWeaponsOfType = (sheets: StrictDict<WeaponKey, WeaponSheet>, weaponType: string): Dict<WeaponKey, WeaponSheet> => Object.fromEntries(Object.entries(sheets).filter(([_, sheet]) => (sheet as WeaponSheet).weaponType === weaponType))\n  static getLevelString = (weapon: ICachedWeapon): string => `${weapon.level}/${ascensionMaxLevel[weapon.ascension]}`\n  tr = (strKey: string) => <Translate ns={`weapon_${this.key}_gen`} key18={strKey} />\n  get name() { return this.tr(\"name\") }\n  get hasRefinement() { return this.rarity > 2 }\n  get passiveName() { return this.hasRefinement ? this.tr(\"passiveName\") : \"\" }\n  get description() { return this.tr(\"description\") }\n  passiveDescription = (refineIndex: number) => this.hasRefinement ? this.tr(`passiveDescription.${refineIndex}`) : \"\"\n  get document() { return this.sheet.document }\n  get milestoneLevels(): Array<[number, number]> {\n    if (this.hasRefinement) return milestoneLevels as any\n    else return lowRarityMilestoneLevels as any\n  }\n  ambiguousLevel(level: number) {\n    if (this.hasRefinement) return ambiguousLevel(level)\n    else return ambiguousLevelLow(level)\n  }\n  getImg(ascsion: number) {\n    return ascsion < 2 ? this.sheet.icon : this.sheet.iconAwaken\n  }\n}\nexport const headerTemplate = (weaponKey: WeaponKey, img: string, imgAwaken: string, action?: Displayable): IDocumentHeader => {\n  const tr = (strKey: string) => <Translate ns={`weapon_${weaponKey}_gen`} key18={strKey} />\n  return {\n    title: tr(`passiveName`),\n    icon: data => <ImgIcon size={2} sx={{ m: -1 }} src={data.get(input.weapon.asc).value < 2 ? img : imgAwaken} />,\n    action: action && <SqBadge color=\"success\">{action}</SqBadge>,\n    description: data => tr(`passiveDescription.${data.get(input.weapon.refineIndex).value}`)\n  }\n}\n","import { BusinessCenter, People } from \"@mui/icons-material\"\nimport { CardActionArea, CardContent, CardHeader, Chip, Divider, Typography, useMediaQuery } from \"@mui/material\"\nimport { useTheme } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport Assets from \"../Assets/Assets\"\nimport { slotIconSVG } from \"../Components/Artifact/SlotNameWIthIcon\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport FontAwesomeSvgIcon from \"../Components/FontAwesomeSvgIcon\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { elementSvg } from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport { allElements, allSlotKeys, allWeaponTypeKeys } from \"../Types/consts\"\nimport { objectKeyMap } from \"../Util/Util\"\n\n\nexport default function InventoryCard() {\n  const { t } = useTranslation([\"page_home\", \"ui\"])\n  const { database } = useContext(DatabaseContext)\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const { characterTally, characterTotal } = useMemo(() => {\n    const chars = database.chars.keys\n    const tally = objectKeyMap(allElements, () => 0)\n    if (characterSheets) chars.forEach(ck => {\n      let elementKey = characterSheets[ck]!.elementKey\n      if (!elementKey)\n        elementKey = database.chars.get(ck)!.elementKey ?? \"anemo\"\n      tally[elementKey] = tally[elementKey] + 1\n    })\n    return { characterTally: tally, characterTotal: chars.length }\n  }, [database, characterSheets])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n  const { weaponTally, weaponTotal } = useMemo(() => {\n    const weapons = database.weapons.values\n    const tally = objectKeyMap(allWeaponTypeKeys, () => 0)\n    if (weaponSheets) weapons.forEach(wp => {\n      let type = weaponSheets[wp.key].weaponType\n      tally[type] = tally[type] + 1\n    })\n    return { weaponTally: tally, weaponTotal: weapons.length }\n  }, [database, weaponSheets])\n\n  const { artifactTally, artifactTotal } = useMemo(() => {\n    const tally = objectKeyMap(allSlotKeys, () => 0)\n    const arts = database.arts.values\n    arts.forEach(art => {\n      const slotKey = art.slotKey\n      tally[slotKey] = tally[slotKey] + 1\n    })\n    return { artifactTally: tally, artifactTotal: arts.length }\n  }, [database])\n  const theme = useTheme();\n  const smaller = !useMediaQuery(theme.breakpoints.up('md'));\n\n  return <CardDark>\n    <CardHeader title={<Typography variant=\"h5\">{t`inventoryCard.title`}</Typography>} avatar={<BusinessCenter fontSize=\"large\" />} />\n    <Divider />\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n      <CardLight>\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/characters\" >\n          <Chip label={<strong>{t<string>(`ui:tabs.characters`)} {characterTotal}</strong>} icon={<People />} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1 }} color={characterTotal ? \"primary\" : \"secondary\"} />\n          {Object.entries(characterTally).map(([ele, num]) => <Chip key={ele} sx={{ flexGrow: 1 }} color={num ? ele : \"secondary\"} icon={<FontAwesomeSvgIcon icon={elementSvg[ele]} />} label={<strong>{num}</strong>} />)}\n        </CardActionArea>\n      </CardLight>\n      <CardLight>\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/weapons\" >\n          <Chip label={<strong>{t<string>(`ui:tabs.weapons`)} {weaponTotal}</strong>} icon={Assets.svg.anvil} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1 }} color={weaponTotal ? \"primary\" : \"secondary\"} />\n          {Object.entries(weaponTally).map(([wt, num]) => <Chip key={wt} sx={{ flexGrow: 1 }} color={num ? \"success\" : \"secondary\"} icon={<ImgIcon src={Assets.weaponTypes?.[wt]} size={2} />} label={<strong>{num}</strong>} />)}\n        </CardActionArea>\n      </CardLight>\n      <CardLight>\n        <CardActionArea sx={{ display: \"flex\", justifyContent: \"space-between\", p: 2, gap: 1, flexWrap: \"wrap\" }} component={RouterLink} to=\"/artifacts\">\n          <Chip label={<strong>{t<string>(`ui:tabs.artifacts`)} {artifactTotal}</strong>} icon={<FontAwesomeSvgIcon icon={slotIconSVG.flower} />} sx={{ flexBasis: smaller ? \"100%\" : \"auto\", flexGrow: 1 }} color={artifactTotal ? \"primary\" : \"secondary\"} />\n          {Object.entries(artifactTally).map(([slotKey, num]) => <Chip key={slotKey} sx={{ flexGrow: 1 }} color={num ? \"success\" : \"secondary\"} icon={<FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />} label={<strong>{num}</strong>} />)}\n        </CardActionArea>\n      </CardLight>\n    </CardContent>\n  </CardDark>\n}\n","import { YouTube } from \"@mui/icons-material\";\nimport { Box, CardContent, CardHeader, Divider, Grid, Link, Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../Components/Card/CardDark\";\n\nconst embeds = JSON.parse(process.env.REACT_APP_URLS_GUIDES ?? \"[]\") as string[]\n\nexport default function VidGuideCard() {\n  const { t } = useTranslation([\"page_home\", \"ui\"])\n  if (!embeds.length) return null\n  return <CardDark>\n    <CardHeader title={<Typography variant=\"h5\" component={Link} color=\"inherit\" href={process.env.REACT_APP_URL_YOUTUBE_TUTPL} target=\"_blank\" rel=\"noopener\">{t`vidGuideCard.title`}</Typography>} avatar={<YouTube fontSize=\"large\" />} />\n    <Divider />\n    <CardContent>\n      <Grid container columns={{ xs: 1, sm: 2 }} spacing={2} >\n        {embeds.map(embed => <Grid item xs={1} key={embed}>\n          <Box key={embed} sx={{\n            position: \"relative\",\n            pb: \"56.25%\",\n            /* 16:9 */\n            pt: \"25px\",\n            height: 0,\n            borderRadius: 2,\n            overflow: \"hidden\",\n            \"> iframe\": {\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\",\n            }\n          }}>\n            <iframe width=\"560\" height=\"349\" title=\"Genshin Optimizer Guide\" src={`https://www.youtube-nocookie.com/embed/${embed}`} frameBorder={0} allowFullScreen />\n          </Box>\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardDark>\n}\n","import { faDiscord, faPatreon, faPaypal, faTwitch } from \"@fortawesome/free-brands-svg-icons\"\nimport { Article, GitHub, Handshake, InsertLink, Scanner, Twitter, YouTube } from \"@mui/icons-material\"\nimport { Box, Button, CardContent, CardHeader, Divider, Link, Tooltip, Typography } from \"@mui/material\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport FontAwesomeSvgIcon from \"../Components/FontAwesomeSvgIcon\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTranslation } from \"react-i18next\"\n\nconst smallIcons = [{\n  tooltip: \"Genshin Optimizer Discord\",\n  icon: <FontAwesomeSvgIcon icon={faDiscord} />,\n  url: process.env.REACT_APP_URL_DISCORD_GO,\n  color: \"discord\",\n}, {\n  tooltip: \"Genshin Optimizer Github\",\n  icon: <GitHub />,\n  url: process.env.REACT_APP_URL_GITHUB_GO,\n  color: \"white\",\n}, {\n  tooltip: \"Youtube (frzyc)\",\n  icon: <YouTube />,\n  url: process.env.REACT_APP_URL_YOUTUBE_FRZYC,\n  color: \"red\",\n}, {\n  tooltip: \"Twitch (frzyc)\",\n  icon: <FontAwesomeSvgIcon icon={faTwitch} />,\n  url: process.env.REACT_APP_URL_TWITCH_FRZYC,\n  color: \"twitch\",\n}, {\n  tooltip: \"Twitter (frzyc)\",\n  icon: <Twitter />,\n  url: process.env.REACT_APP_URL_TWITTER_FRZYC,\n  color: \"twitter\",\n}, {\n  tooltip: \"Patreon (frzyc)\",\n  icon: <FontAwesomeSvgIcon icon={faPatreon} />,\n  url: process.env.REACT_APP_URL_PATREON_FRZYC,\n  color: \"patreon\",\n}, {\n  tooltip: \"PayPal (frzyc)\",\n  icon: <FontAwesomeSvgIcon icon={faPaypal} />,\n  url: process.env.REACT_APP_URL_PAYPAL_FRZYC,\n  color: \"paypal\",\n},] as const\n\nconst buttons = [{\n  title: t => t`quickLinksCard.buttons.tyGuide.title`,\n  icon: <YouTube />,\n  tooltip: t => t`quickLinksCard.buttons.tyGuide.tooltip`,\n  url: process.env.REACT_APP_URL_YOUTUBE_TUTPL,\n  color: \"red\",\n}, {\n  title: t => t`quickLinksCard.buttons.scanners.title`,\n  icon: <Scanner />,\n  tooltip: t => t`quickLinksCard.buttons.scanners.tooltip`,\n  to: \"/scanner\",\n  color: \"primary\",\n}, {\n  title: t => t`quickLinksCard.buttons.kqm.title`,\n  icon: <Handshake />,\n  tooltip: t => t`quickLinksCard.buttons.kqm.tooltip`,\n  url: process.env.REACT_APP_URL_WEBSITE_KQM,\n  color: \"keqing\",\n}, {\n  title: t => t`quickLinksCard.buttons.devDiscord.title`,\n  icon: <FontAwesomeSvgIcon icon={faDiscord} />,\n  tooltip: t => t`quickLinksCard.buttons.devDiscord.tooltip`,\n  url: process.env.REACT_APP_URL_DISCORD_GDEV,\n  color: \"discord\",\n}, {\n  title: t => t`quickLinksCard.buttons.good.title`,\n  icon: <Article />,\n  tooltip: t => t`quickLinksCard.buttons.good.tooltip`,\n  to: \"/doc\",\n  color: \"primary\",\n}] as const\n\nexport default function QuickLinksCard() {\n  const { t } = useTranslation([\"page_home\", \"ui\"])\n  return <CardDark>\n    <CardHeader title={<Typography variant=\"h5\">{t`quickLinksCard.title`}</Typography>} avatar={<InsertLink fontSize=\"large\" />} />\n    <Divider />\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n\n      <Box display=\"flex\" justifyContent=\"space-between\" gap={1}>\n        {smallIcons.map(({ tooltip, icon, url, color }) => <Tooltip key={tooltip} title={tooltip} placement=\"top\" arrow>\n          <Button fullWidth color={color} key={tooltip} sx={{ p: 1, minWidth: 0 }} component={Link} href={url} target=\"_blank\" rel=\"noopener\">{icon}</Button>\n        </Tooltip>)}\n      </Box>\n      {buttons.map((btnProps, i) => {\n        const { title, icon, tooltip, color } = btnProps\n        let button;\n        if (\"to\" in btnProps)\n          button = <Button fullWidth key={i} color={color} component={RouterLink} to={btnProps.to} startIcon={icon}>{title(t)}</Button>\n        if (\"url\" in btnProps)\n          button = <Button fullWidth key={i} color={color} component={Link} href={btnProps.url} target=\"_blank\" rel=\"noopener\" startIcon={icon}>{title(t)}</Button>\n        return <Tooltip key={i} title={tooltip(t)} placement=\"top\" arrow>\n          {button}\n        </Tooltip>\n      })}\n    </CardContent>\n  </CardDark>\n}\n","import { AccessTimeFilled } from \"@mui/icons-material\"\nimport { CardActionArea, CardContent, CardHeader, Divider, Typography } from \"@mui/material\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link as RouterLink } from 'react-router-dom'\nimport Assets from \"../Assets/Assets\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { initToolsDisplayResin, RESIN_MAX, RESIN_RECH_MS } from \"../PageTools/ResinCounter\"\nimport { initToolsDisplayTimezone, timeZones } from \"../PageTools/TeyvatTime\"\nimport useDBState from \"../ReactHooks/useDBState\"\nimport { SECOND_MS } from \"../Util/TimeUtil\"\n\nexport default function ResinCard() {\n  const [{ timeZoneKey }] = useDBState(\"ToolsDisplayTimezone\", initToolsDisplayTimezone)\n  const [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\n\n  useEffect(() => {\n    let setSecondTimeout = () => {\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\n      return setTimeout(() => {\n        interval = setSecondTimeout()\n      }, SECOND_MS - (Date.now() % SECOND_MS));\n    }\n    let interval = setSecondTimeout()\n    return () => clearTimeout(interval)\n  }, [timeZoneKey])\n\n  const [{ resin, date }, setResinState] = useDBState(\"ToolsDisplayResin\", initToolsDisplayResin)\n  const resinIncrement = useRef(undefined as undefined | NodeJS.Timeout)\n\n  const setResin = (newResin: number) => {\n    if (newResin >= RESIN_MAX) {\n      resinIncrement.current && clearTimeout(resinIncrement.current)\n      resinIncrement.current = undefined\n    } else\n      resinIncrement.current = setTimeout(() => console.log(\"set resin\", newResin + 1), RESIN_RECH_MS);\n    setResinState({ resin: newResin, date: new Date().getTime() })\n  }\n\n  useEffect(() => {\n    if (resin < RESIN_MAX) {\n      const now = Date.now()\n      const resinToMax = RESIN_MAX - resin\n      const resinSinceLastDate = Math.min(Math.floor((now - date) / (RESIN_RECH_MS)), resinToMax)\n      const catchUpResin = resin + resinSinceLastDate\n      const newDate = date + resinSinceLastDate * RESIN_RECH_MS\n      setResinState({ resin: catchUpResin, date: newDate })\n      if (catchUpResin < RESIN_MAX)\n        resinIncrement.current = setTimeout(() => setResin(catchUpResin + 1), now - newDate);\n    }\n    return () => resinIncrement.current && clearTimeout(resinIncrement.current)\n    // eslint-disable-next-line\n  }, [])\n\n  return <CardDark>\n    <CardHeader title={<Typography variant=\"h5\">{timeZoneKey}{' '}{time.toLocaleTimeString([], { timeZone: \"UTC\" })}</Typography>} avatar={<AccessTimeFilled fontSize=\"large\" />} />\n    <Divider />\n    <CardContent>\n      <CardLight>\n        <CardActionArea sx={{ p: 2 }} component={RouterLink} to=\"/tools\">\n          <Typography variant=\"h2\" sx={{ textAlign: \"center\" }}>\n            <ImgIcon src={Assets.resin.fragile} />\n            <span>{resin}/{RESIN_MAX}</span>\n          </Typography>\n        </CardActionArea>\n      </CardLight>\n    </CardContent>\n  </CardDark>\n}\n","import { Box, CardContent, CardHeader, Divider, Grid, Link, Typography } from \"@mui/material\";\nimport CardDark from \"../Components/Card/CardDark\";\nimport CardLight from \"../Components/Card/CardLight\";\nimport frzyc from \"./teamIcons/frzyc.png\"\nimport lantua from \"./teamIcons/lantua.png\"\nimport van from \"./teamIcons/van.png\"\nimport stain from \"./teamIcons/stain.png\"\nimport sin from \"./teamIcons/sin.png\"\nimport { Groups } from \"@mui/icons-material\";\nimport { useTranslation } from \"react-i18next\";\nconst team = [{\n  name: \"frzyc\",\n  img: frzyc,\n  title: t => t`teamCard.jobTitle.leadDev`,\n  subtitle: \"Insomniac in Chief\",\n  url: process.env.REACT_APP_URL_GITHUB_FRZYC\n}, {\n  name: \"Lantua\",\n  img: lantua,\n  title: t => t`teamCard.jobTitle.dev`,\n  subtitle: \"Copium Calculator\",\n  url: process.env.REACT_APP_URL_GITHUB_LANTUA\n}, {\n  name: \"Van\",\n  img: van,\n  title: t => t`teamCard.jobTitle.dev`,\n  subtitle: \"Waverider Stowaway\",\n  url: process.env.REACT_APP_URL_GITHUB_VAN\n}, {\n  name: \"✦ Sin ✦\",\n  img: sin,\n  title: t => t`teamCard.jobTitle.mod`,\n  subtitle: \"Ohh, shiny.\",\n  url: \"\"\n}, {\n  name: \"Stain\",\n  img: stain,\n  title: t => t`teamCard.jobTitle.mod`,\n  subtitle: \"Australia Man\",\n  url: \"\"\n},] as const\n\nexport default function TeamCard() {\n  const { t } = useTranslation([\"page_home\", \"ui\"])\n  return <CardDark>\n    <CardHeader title={<Typography variant=\"h5\">{t`teamCard.title`}</Typography>} avatar={<Groups fontSize=\"large\" />} />\n    <Divider />\n    <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n      <Grid container columns={{ xs: 6, md: 5 }} spacing={1}>\n        {team.map(({ name, img, title, subtitle, url }, i) => <Grid item key=\"name\" xs={i < 2 ? 3 : 2} md={1}>\n          <CardLight sx={{ height: \"100%\" }}>\n            <CardContent>\n              <Box component=\"img\" src={img} sx={{ width: \"100%\", height: \"auto\", borderRadius: \"50%\" }} />\n              <Box display=\"flex\" flexDirection=\"column\">\n                {url ? <Typography variant=\"h6\" sx={{ textAlign: \"center\" }} color=\"inherit\" component={Link} href={url} target=\"_blank\" rel=\"noopener\"><strong>{name}</strong></Typography> :\n                  <Typography variant=\"h6\" sx={{ textAlign: \"center\" }}><strong>{name}</strong></Typography>}\n                <Typography variant=\"subtitle1\" sx={{ textAlign: \"center\" }}>\n                  {title(t)}\n                </Typography>\n                <Typography variant=\"subtitle2\" sx={{ textAlign: \"center\", transform: name === \"Stain\" ? \"rotate(180deg)\" : undefined }} color=\"secondary.light\">\n                  {subtitle}\n                </Typography>\n              </Box>\n            </CardContent>\n          </CardLight>\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardDark>\n}\n","import { Box, CardContent, Grid, Link, Typography, useMediaQuery } from \"@mui/material\"\nimport { useTheme } from \"@mui/system\"\nimport ReactGA from 'react-ga4'\nimport { Trans, useTranslation } from \"react-i18next\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport InventoryCard from \"./InventoryCard\"\nimport VidGuideCard from \"./VidGuideCard\"\nimport QuickLinksCard from \"./QuickLinksCard\"\nimport ResinCard from \"./ResinCard\"\nimport TeamCard from \"./TeamCard\"\n\nexport default function PageHome() {\n  // TODO: translations\n  // const { t } = useTranslation(\"page_home\")\n  const theme = useTheme();\n  const lg = useMediaQuery(theme.breakpoints.up('lg'));\n  ReactGA.send({ hitType: \"pageview\", page: '/home' })\n  if (lg) return <Grid container spacing={2} direction={\"row-reverse\"} sx={{ my: 2 }}>\n    <Grid item xs={12} lg={5} xl={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n      <QuickLinksCard />\n      <ResinCard />\n    </Grid>\n    <Grid item xs={12} lg={7} xl={8} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n      <IntroCard />\n      <InventoryCard />\n      <VidGuideCard />\n      <TeamCard />\n    </Grid>\n\n  </Grid>\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <IntroCard />\n    <QuickLinksCard />\n    <InventoryCard />\n    <ResinCard />\n    <VidGuideCard />\n    <TeamCard />\n  </Box >\n}\n\nfunction IntroCard() {\n  const { t } = useTranslation(\"page_home\")\n  return <CardDark>\n    <CardContent>\n      <Typography variant=\"subtitle1\">\n        <Trans t={t} i18nKey=\"intro\" >\n          The <strong>ultimate</strong> <Link href=\"https://genshin.mihoyo.com/\" target=\"_blank\" rel=\"noreferrer\"><i>Genshin Impact</i></Link> calculator, GO will keep track of your artifact/weapon/character inventory, and help you create the best build based on how you play, with what you have.\n        </Trans>\n      </Typography>\n    </CardContent>\n  </CardDark>\n}\n","import { Button, ButtonGroup, CardContent, Divider, Grid, InputBase, Typography } from '@mui/material';\nimport React, { useEffect, useRef } from 'react';\nimport Assets from '../Assets/Assets';\nimport CardDark from '../Components/Card/CardDark';\nimport ImgIcon from '../Components/Image/ImgIcon';\nimport useDBState from '../ReactHooks/useDBState';\nimport { MINUTE_MS, timeString } from '../Util/TimeUtil';\n\nexport const RESIN_MAX = 160\nexport const RESIN_RECH_MS = 8 * MINUTE_MS\nexport function initToolsDisplayResin() {\n  return {\n    resin: RESIN_MAX,\n    date: new Date().getTime()\n  }\n}\n\nexport default function ResinCounter() {\n  const [{ resin, date }, setResinState] = useDBState(\"ToolsDisplayResin\", initToolsDisplayResin)\n  const resinIncrement = useRef(undefined as undefined | NodeJS.Timeout)\n\n  const setResin = (newResin: number) => {\n    if (newResin >= RESIN_MAX) {\n      resinIncrement.current && clearTimeout(resinIncrement.current)\n      resinIncrement.current = undefined\n    } else\n      resinIncrement.current = setTimeout(() => console.log(\"set resin\", newResin + 1), RESIN_RECH_MS);\n    setResinState({ resin: newResin, date: new Date().getTime() })\n  }\n\n  useEffect(() => {\n    if (resin < RESIN_MAX) {\n      const now = Date.now()\n      const resinToMax = RESIN_MAX - resin\n      const resinSinceLastDate = Math.min(Math.floor((now - date) / (RESIN_RECH_MS)), resinToMax)\n      const catchUpResin = resin + resinSinceLastDate\n      const newDate = date + resinSinceLastDate * RESIN_RECH_MS\n      setResinState({ resin: catchUpResin, date: newDate })\n      if (catchUpResin < RESIN_MAX)\n        resinIncrement.current = setTimeout(() => setResin(catchUpResin + 1), now - newDate);\n    }\n    return () => resinIncrement.current && clearTimeout(resinIncrement.current)\n    // eslint-disable-next-line\n  }, [])\n\n  const nextResinDateNum = resin >= RESIN_MAX ? date : date + RESIN_RECH_MS;\n\n  const resinFullDateNum = resin >= RESIN_MAX ? date : (date + (RESIN_MAX - resin) * RESIN_RECH_MS)\n  const resinFullDate = new Date(resinFullDateNum)\n\n  const nextDeltaString = timeString(Math.abs(nextResinDateNum - Date.now()))\n\n  return <CardDark>\n    <Grid container sx={{ px: 2, py: 1 }} spacing={2} >\n      <Grid item>\n        <ImgIcon src={Assets.resin.fragile} sx={{ fontSize: \"2em\" }} />\n      </Grid>\n      <Grid item >\n        <Typography variant=\"h6\">Resin Counter</Typography>\n      </Grid>\n    </Grid>\n    <Divider />\n    <CardContent>\n      <Grid container spacing={2}>\n        <Grid item>\n          <Typography variant=\"h2\">\n            <ImgIcon src={Assets.resin.fragile} />\n            <InputBase type=\"number\" sx={{ width: \"2em\", fontSize: \"4rem\" }} value={resin} inputProps={{ min: 0, max: 999, sx: { textAlign: \"right\" } }} onChange={(e => setResin(parseInt(e.target.value)))} />\n            <span>/{RESIN_MAX}</span>\n          </Typography>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <ButtonGroup fullWidth >\n            <Button onClick={() => setResin(0)} disabled={resin === 0}>0</Button>\n            <Button onClick={() => setResin(resin - 1)} disabled={resin === 0}>-1</Button>\n            <Button onClick={() => setResin(resin - 20)} disabled={resin < 20}>-20</Button>\n            <Button onClick={() => setResin(resin - 40)} disabled={resin < 40}>-40</Button>\n            <Button onClick={() => setResin(resin - 60)} disabled={resin < 60}>-60</Button>\n            <Button onClick={() => setResin(resin + 1)}>+1</Button>\n            <Button onClick={() => setResin(resin + 60)}>+60</Button>\n            <Button onClick={() => setResin(RESIN_MAX)} disabled={resin === RESIN_MAX}>MAX {RESIN_MAX}</Button>\n          </ButtonGroup>\n          <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>\n            {resin < RESIN_MAX ? <span>Next resin in {nextDeltaString}, full Resin at {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span> :\n              <span>Resin has been full for at least {nextDeltaString}, since {resinFullDate.toLocaleTimeString()} {resinFullDate.toLocaleDateString()}</span>}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"caption\">Because we do not provide a mechanism to synchronize resin time, actual resin recharge time might be as much as 8 minutes earlier than predicted.</Typography>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </CardDark>\n}\n","\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CardContent, Divider, Grid, MenuItem, Typography } from '@mui/material';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport CardDark from '../Components/Card/CardDark';\nimport DropdownButton from '../Components/DropdownMenu/DropdownButton';\nimport useDBState from '../ReactHooks/useDBState';\nimport { DAY_MS, HOUR_MS, MINUTE_MS, SECOND_MS, timeString } from '../Util/TimeUtil';\n\nexport const timeZones = {\n  \"America\": - 5 * HOUR_MS,\n  \"Europe\": HOUR_MS,\n  \"Asia\": 8 * HOUR_MS,\n  \"TW, HK, MO\": 8 * HOUR_MS,\n}\ntype TimeZoneKey = keyof typeof timeZones\n\nexport function initToolsDisplayTimezone() {\n  return { timeZoneKey: Object.keys(timeZones)[0] as TimeZoneKey }\n}\nexport default function TeyvatTime() {\n  const [{ timeZoneKey }, setTimeZone] = useDBState(\"ToolsDisplayTimezone\", initToolsDisplayTimezone)\n  const setTimeZoneKey = useCallback((timeZoneKey) => setTimeZone({ timeZoneKey }), [setTimeZone])\n\n  const [time, setTime] = useState(new Date(Date.now() + timeZones[timeZoneKey]))\n  //set a timer. timer resets when timezone is changed.\n  useEffect(() => {\n    let setSecondTimeout = () => {\n      setTime(new Date(Date.now() + timeZones[timeZoneKey]))\n      return setTimeout(() => {\n        interval = setSecondTimeout()\n      }, SECOND_MS - (Date.now() % SECOND_MS));\n    }\n    let interval = setSecondTimeout()\n    return () => clearTimeout(interval)\n  }, [timeZoneKey])\n\n  let resetTime = new Date(time)\n  if (resetTime.getUTCHours() < 4) {\n    resetTime.setUTCHours(4, 0, 0, 0)\n  } else {\n    resetTime = new Date(resetTime.getTime() + DAY_MS)\n    resetTime.setUTCHours(4, 0, 0, 0)\n  }\n  let remaningTimeMs = resetTime.getTime() - time.getTime()\n  let remainingResetString = timeString(remaningTimeMs)\n\n  return <CardDark>\n    <Grid container sx={{ px: 2, py: 1 }} spacing={2}>\n      <Grid item>\n        <Typography variant=\"h6\"><FontAwesomeIcon icon={faClock} className=\"fa-fw\" /></Typography>\n      </Grid>\n      <Grid item flexGrow={1}>\n        <Typography variant=\"h6\">Teyvat Time</Typography>\n      </Grid>\n      <Grid item>\n        <DropdownButton title={timeZoneKey}>\n          {Object.keys(timeZones).map(zoneKey =>\n            <MenuItem key={zoneKey} selected={timeZoneKey === zoneKey} disabled={timeZoneKey === zoneKey} onClick={() => setTimeZoneKey(zoneKey)} >{zoneKey}</MenuItem>)}\n        </DropdownButton>\n      </Grid>\n    </Grid>\n    <Divider />\n    <CardContent>\n      <Grid container justifyContent=\"center\" spacing={3}>\n        <Grid item sx={{ my: 4 }}>\n          <Typography variant=\"h2\">\n            {time.toLocaleTimeString([], { timeZone: \"UTC\" })}\n          </Typography>\n        </Grid>\n        <Grid item display=\"flex\" flexDirection=\"column\" justifyContent=\"space-around\">\n          <Typography>Server Date: <b>{time.toDateString()}</b></Typography>\n          <Typography>Time until reset: <b>{remainingResetString}</b></Typography>\n          <Typography>Resin until reset: <b>{Math.floor(remaningTimeMs / (8 * MINUTE_MS))}</b></Typography>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </CardDark>\n}\n","import { strPadLeft } from \"./Util\"\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = 60 * SECOND_MS\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\n\nexport function msToUnits(ms: number) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nexport function timeString(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nexport function timeStringMs(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\n"],"names":["elementSvg","anemo","faAnemo","geo","faGeo","electro","faElectro","hydro","faHydro","pyro","faPyro","cryo","faCryo","dendro","faDendro","physical","faPhysicalDmgBonus","uncoloredEleIcons","icon","coloredEleIcon","objectKeyMap","Object","keys","key","color","sx","lineHeight","StatIcon","hp_","faHp","hp","atk_","faAtk","atk","def_","faDef","def","eleMas","faElementalMastery","critRate_","faCritRate","critDMG_","faCritDmg","enerRech_","faEnergyRecharge","incHeal_","faHealingAdd","heal_","faHealingBonus","cdRed_","faCdReduction","shield_","faShieldStrength","stamina","faMaxStamina","fromEntries","flatMap","ele","weaponSheets","then","imp","default","WeaponSheet","weaponSheet","weaponData","data","sheet","rarity","weaponType","tr","strKey","ns","key18","passiveDescription","refineIndex","hasRefinement","this","document","milestoneLevels","lowRarityMilestoneLevels","level","ambiguousLevel","ambiguousLevelLow","ascsion","iconAwaken","get","weaponKey","w","undefined","getWeaponsOfType","sheets","entries","filter","getLevelString","weapon","ascensionMaxLevel","ascension","headerTemplate","img","imgAwaken","action","title","size","m","src","input","value","description","InventoryCard","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","useMemo","chars","tally","allElements","forEach","ck","elementKey","characterTally","characterTotal","length","weapons","values","allWeaponTypeKeys","wp","type","weaponTally","weaponTotal","allSlotKeys","arts","art","slotKey","artifactTally","artifactTotal","theme","useTheme","smaller","useMediaQuery","breakpoints","up","CardDark","CardHeader","Typography","variant","avatar","BusinessCenter","fontSize","Divider","CardContent","display","flexDirection","gap","CardLight","CardActionArea","justifyContent","p","flexWrap","component","RouterLink","to","Chip","label","People","flexBasis","flexGrow","map","num","FontAwesomeSvgIcon","Assets","wt","ImgIcon","slotIconSVG","embeds","JSON","parse","process","VidGuideCard","Link","href","target","rel","YouTube","Grid","container","columns","xs","sm","spacing","embed","item","Box","position","pb","pt","height","borderRadius","overflow","top","left","width","frameBorder","allowFullScreen","smallIcons","tooltip","faDiscord","url","GitHub","faTwitch","Twitter","faPatreon","faPaypal","buttons","Scanner","Handshake","Article","QuickLinksCard","InsertLink","Tooltip","placement","arrow","Button","fullWidth","minWidth","btnProps","i","button","startIcon","ResinCard","useDBState","initToolsDisplayTimezone","timeZoneKey","useState","Date","now","timeZones","time","setTime","useEffect","interval","setSecondTimeout","setTimeout","SECOND_MS","clearTimeout","initToolsDisplayResin","resin","date","setResinState","resinIncrement","useRef","RESIN_MAX","resinToMax","resinSinceLastDate","Math","min","floor","RESIN_RECH_MS","catchUpResin","newDate","current","newResin","console","log","getTime","toLocaleTimeString","timeZone","AccessTimeFilled","textAlign","team","name","frzyc","subtitle","lantua","van","sin","stain","TeamCard","Groups","md","transform","PageHome","lg","ReactGA","hitType","page","direction","my","xl","IntroCard","Trans","i18nKey","MINUTE_MS","ResinCounter","setResin","nextResinDateNum","resinFullDate","nextDeltaString","timeString","abs","px","py","inputProps","max","onChange","e","parseInt","onClick","disabled","mt","toLocaleDateString","HOUR_MS","TeyvatTime","setTimeZone","setTimeZoneKey","useCallback","resetTime","getUTCHours","setUTCHours","DAY_MS","remaningTimeMs","remainingResetString","faClock","className","zoneKey","selected","toDateString","msToUnits","ms","milliseconds","seconds","minutes","hours","timeText","strPadLeft","timeStringMs"],"sourceRoot":""}