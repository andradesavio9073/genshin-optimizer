{"version":3,"file":"static/js/476.13e06bb6.chunk.js","mappings":"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","sources":["Components/BootstrapTooltip.tsx","Components/CustomNumberInput.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/InfoTooltip.tsx","DataContext.tsx","PageWeapon/WeaponEditor.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js","../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js"],"sourcesContent":["import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\n\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n    maxWidth: 500,\n  },\n}));\nexport default BootstrapTooltip\n","import { Button, ButtonProps, InputBase, InputProps, styled } from '@mui/material'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\ntype props = Omit<InputProps, \"onChange\"> & {\n  value?: number | undefined,\n  onChange: (newValue: number | undefined) => void,\n  disabled?: boolean\n  float?: boolean,\n  allowEmpty?: boolean,\n}\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  transition: \"all 0.5s ease\",\n  \"&:hover\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  \"&.Mui-focused\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n  },\n}))\n\nconst Wrapper = styled(Button)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  padding: 0,\n  overflow: \"hidden\",\n  \"div\": {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}))\n\n// wrap the Input with this when using the input in a buttongroup\nexport function CustomNumberInputButtonGroupWrapper({ children, disableRipple, disableFocusRipple, disableTouchRipple, ...props }: ButtonProps) {\n  return <Wrapper disableRipple disableFocusRipple disableTouchRipple {...props}>{children}</Wrapper>\n}\n\nexport default function CustomNumberInput({ value = 0, onChange, disabled = false, float = false, ...props }: props) {\n  const [number, setNumber] = useState(value)\n  const [focused, setFocus] = useState(false)\n  const parseFunc = useMemo(() => float ? parseFloat : parseInt, [float],)\n  const onBlur = useCallback(\n    () => {\n      onChange(number)\n      setFocus(false)\n    },\n    [onChange, number, setFocus],\n  )\n  const onFocus = useCallback(\n    () => {\n      setFocus(true)\n    },\n    [setFocus],\n  )\n  useEffect(() => setNumber(value), [value, setNumber]) // update value on value change\n  const onInputChange = useCallback(e => setNumber(parseFunc(e.target.value) || 0), [setNumber, parseFunc],)\n  const onKeyDOwn = useCallback(e => e.key === \"Enter\" && onBlur(), [onBlur],)\n  return <StyledInputBase\n    value={(focused && !number) ? \"\" : number}\n    aria-label=\"custom-input\"\n    type=\"number\"\n    inputProps={{ step: float ? 0.1 : 1 }}\n    onChange={onInputChange}\n    onBlur={onBlur}\n    onFocus={onFocus}\n    disabled={disabled}\n    onKeyDown={onKeyDOwn}\n    {...props}\n  />\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { DataContext } from '../../DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch, data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch, data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch, data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, CardHeader, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value ) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeader avatar={icon} title={displayTitle} action={action} titleTypographyProps={{ variant: \"subtitle2\" }} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default QuestionTooltip\n","import { Groups } from \"@mui/icons-material\";\nimport { Box, List, ListItem, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { Suspense, useContext, useMemo } from 'react';\nimport { DataContext } from \"../DataContext\";\nimport { NodeDisplay } from \"../Formula/api\";\nimport KeyMap, { valueString } from \"../KeyMap\";\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/IFieldDisplay\";\nimport { evalIfFunc } from \"../Util/Util\";\nimport ColorText from \"./ColoredText\";\nimport QuestionTooltip from \"./QuestionTooltip\";\nimport StatIcon from \"./StatIcon\";\n\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\n  return <FieldDisplayList sx={{ m: 0 }}>\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\n  </FieldDisplayList>\n}\n\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\n  const { data, oldData } = useContext(DataContext)\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\n  if (!canShow) return null\n  if (\"node\" in field) {\n    const node = data.get(field.node)\n    if (node.isEmpty) return null\n    if (oldData) {\n      const oldNode = oldData.get(field.node)\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\n    }\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\n  }\n  return <BasicFieldDisplay field={field} component={component} />\n}\n\nfunction BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\n  const { data } = useContext(DataContext)\n  const v = evalIfFunc(field.value, data)\n  const variant = evalIfFunc(field.variant, data)\n  const text = field.text && <span>{field.text}</span>\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\n  </Box>\n}\n\nexport function NodeFieldDisplay({ node, oldValue, suffix, component }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType }) {\n  if (node.isEmpty) return null\n\n  suffix = suffix && <span>{suffix}</span>\n  const icon = node.info.key && StatIcon[node.info.key]\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\n  const isTeamBuff = node.info.isTeamBuff\n  const fieldFormulaText = node.formula\n  let fieldVal = \"\" as Displayable\n  if (oldValue) {\n    const diff = node.value - oldValue\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\n  } else fieldVal = valueString(node.value, node.unit)\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>{fieldFormulaText}</Suspense></Typography>} />\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n      <Typography noWrap>{fieldVal}</Typography>\n      {formulaTextOverlay}\n    </Box>\n  </Box>\n}\n\nexport const FieldDisplayList = styled(List)(({ theme }) => ({\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  margin: 0,\n  '> .MuiListItem-root:nth-of-type(even)': {\n    backgroundColor: theme.palette.contentDark.main\n  },\n  '> .MuiListItem-root:nth-of-type(odd)': {\n    backgroundColor: theme.palette.contentDarker.main\n  },\n}));\n","\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst InfoTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faInfoCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default InfoTooltip\n","import { createContext } from \"react\"\nimport CharacterSheet from \"./Data/Characters/CharacterSheet\"\nimport { UIData } from \"./Formula/uiData\"\nimport { ICachedCharacter } from \"./Types/character\"\nimport { CharacterKey } from \"./Types/consts\"\nimport { ICachedWeapon } from \"./Types/weapon\"\nimport WeaponSheet from \"./Data/Weapons/WeaponSheet\"\nimport { characterReducerAction } from \"./ReactHooks/useCharacterReducer\";\nexport type TeamData = Partial<Record<CharacterKey, {\n  target: UIData\n  buffs: Dict<CharacterKey, UIData>\n  character: ICachedCharacter\n  weapon: ICachedWeapon\n  characterSheet: CharacterSheet\n  weaponSheet: WeaponSheet,\n}>>\nexport type dataContextObj = {\n  character: ICachedCharacter\n  characterSheet: CharacterSheet\n  data: UIData\n  oldData?: UIData\n  mainStatAssumptionLevel: number\n  teamData: TeamData\n  characterDispatch: (action: characterReducerAction) => void\n}\n\n// If using this context without a Provider, then stuff will crash...\n// In theory, none of the components that uses this context should work without a provider...\nexport const DataContext = createContext({} as dataContextObj)\n","import { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from \"../Components/Character/CharacterAutocomplete\"\nimport CloseButton from \"../Components/CloseButton\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\nimport ModalWrapper from \"../Components/ModalWrapper\"\nimport { Stars } from \"../Components/StarDisplay\"\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { DataContext } from \"../DataContext\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\nimport { ICachedWeapon } from \"../Types/weapon\"\nimport { clamp } from \"../Util/Util\"\n\ntype WeaponStatsEditorCardProps = {\n  weaponId: string\n  footer?: boolean\n  onClose?: () => void\n  extraButtons?: JSX.Element\n}\nexport default function WeaponEditor({\n  weaponId: propWeaponId,\n  footer = false,\n  onClose,\n  extraButtons\n}: WeaponStatsEditorCardProps) {\n  const { t } = useTranslation(\"ui\")\n  const { data } = useContext(DataContext)\n\n  const { database } = useContext(DatabaseContext)\n  const weapon = useWeapon(propWeaponId)\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\n\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\n    database.updateWeapon(newWeapon, propWeaponId)\n  }, [propWeaponId, database])\n\n  const setLevel = useCallback(level => {\n    level = clamp(level, 1, 90)\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\n    weaponDispatch({ level, ascension })\n  }, [weaponDispatch])\n\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\n    else weaponDispatch({ ascension: lowerAscension })\n  }, [weaponDispatch, ascension, level])\n\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const [showModal, setshowModal] = useState(false)\n  const img = ascension < 2 ? weaponSheet?.img : weaponSheet?.imgAwaken\n\n  //check the levels when switching from a 5* to a 1*, for example.\n  useEffect(() => {\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\n      const [level, ascension] = lowRarityMilestoneLevels[0]\n      weaponDispatch({ level, ascension })\n    }\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\n\n\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\n    <WeaponSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\n    <CardContent >\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\n        <Grid item xs={12} sm={3}>\n          <Grid container spacing={1.5}>\n            <Grid item xs={6} sm={12}>\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\n            </Grid>\n            <Grid item xs={6} sm={12}>\n              <Typography><small>{weaponSheet.description}</small></Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\n            <ButtonGroup>\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\n                <MenuItem>Select Weapon Refinement</MenuItem>\n                <Divider />\n                {[...Array(5).keys()].map(key =>\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\n                    {`Refinement ${key + 1}`}\n                  </MenuItem>)}\n              </DropdownButton>}\n              {extraButtons}\n            </ButtonGroup>\n          </Box>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\n              <CustomNumberInputButtonGroupWrapper >\n                <CustomNumberInput onChange={setLevel} value={level}\n                  startAdornment=\"Lv. \"\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\n                />\n              </CustomNumberInputButtonGroupWrapper>\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\n                  const sameLevel = lv === ascensionMaxLevel[as]\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\n                  const selected = lv === level && as === ascension\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\n                })}\n              </DropdownButton>}\n            </ButtonGroup>\n\n            <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\n              {lock ? \"Locked\" : \"Unlocked\"}\n            </Button>\n          </Box>\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n            <CardDark >\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n              <Divider />\n              <FieldDisplayList>\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n                  const n = weaponUIData.get(node)\n                  if (n.isEmpty || !n.value) return null\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\n                })}\n              </FieldDisplayList>\n            </CardDark>\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\n          </Box>\n        </Grid>\n      </Grid>}\n    </CardContent>\n    {footer && id && <CardContent sx={{ py: 1 }}>\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1}>\n          <CharacterAutocomplete showDefault size=\"small\" defaultIcon={<BusinessCenter />} defaultText={t(\"inventory\")} value={location} onChange={equipOnChar} filter={filter} disable={(v: any) => v === \"\"} disableClearable />\n        </Grid>\n        <Grid item flexGrow={2} />\n        {!!onClose && <Grid item><CloseButton sx={{ height: \"100%\" }} large onClick={onClose} /></Grid>}\n      </Grid>\n    </CardContent>}\n  </CardLight ></ModalWrapper>\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;"],"names":["BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","common","black","backgroundColor","maxWidth","StyledInputBase","InputBase","primary","main","transition","dark","Wrapper","Button","padding","overflow","width","height","CustomNumberInputButtonGroupWrapper","children","disableRipple","disableFocusRipple","disableTouchRipple","CustomNumberInput","value","onChange","disabled","float","useState","number","setNumber","focused","setFocus","parseFunc","useMemo","parseFloat","parseInt","onBlur","useCallback","onFocus","useEffect","onInputChange","e","target","onKeyDOwn","key","type","inputProps","step","onKeyDown","ConditionalSelector","conditional","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","DataContext","character","characterDispatch","data","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","entries","stateKey","badge","getStateBadge","name","condName","getCondName","fullWidth","size","sx","borderRadius","onClick","undefined","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","title","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","p","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","display","flexDirection","gap","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","action","description","displayTitle","InfoTooltip","Typography","CardHeader","avatar","titleTypographyProps","variant","placement","component","cursor","faQuestionCircle","FieldsDisplay","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","node","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","justifyContent","alignItems","toFixed","fixed","unit","info","StatIcon","fieldText","KeyMap","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","valueString","formulaTextOverlay","Suspense","fallback","Skeleton","Groups","noWrap","List","shape","margin","contentDark","contentDarker","faInfoCircle","createContext","WeaponEditor","propWeaponId","weaponId","footer","onClose","extraButtons","t","useTranslation","database","DatabaseContext","weapon","useWeapon","level","refinement","ascension","lock","location","id","weaponSheet","usePromise","WeaponSheet","weaponDispatch","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","weaponFilter","ws","weaponType","weaponTypeKey","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","img","imgAwaken","rarity","lowRarityMilestoneLevels","weaponUIData","computeUIData","dataObjForWeapon","open","containerProps","show","onHide","onSelect","k","container","spacing","item","xs","sm","src","flexWrap","hasRefinement","Array","bgcolor","contentLight","startAdornment","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","stars","passiveName","gutterBottom","passiveDescription","input","n","document","py","flexGrow","showDefault","defaultIcon","defaultText","disable","disableClearable","large","createSvgIcon","_jsx","d","getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","overridesResolver","styles","_extends","cardHeaderClasses","subheader","root","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useThemeProps","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","other","_objectWithoutPropertiesLoose","ownerState","composeClasses","useUtilityClasses","_jsxs","clsx"],"sourceRoot":""}