{"version":3,"file":"static/js/476.6c8855f1.chunk.js","mappings":"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","sources":["Components/BootstrapTooltip.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/QuestionTooltip.tsx","Components/FieldDisplay.tsx","Components/InfoTooltip.tsx","Context/FormulaDataContext.tsx","PageWeapon/WeaponEditor.tsx","../node_modules/@mui/icons-material/esm/CheckBox.js","../node_modules/@mui/icons-material/esm/CheckBoxOutlineBlank.js"],"sourcesContent":["import { styled, Tooltip, tooltipClasses, TooltipProps } from \"@mui/material\";\n\nconst BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n    maxWidth: 500,\n  },\n}));\nexport default BootstrapTooltip\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst QuestionTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faQuestionCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default QuestionTooltip\n","import { Groups } from \"@mui/icons-material\";\nimport { Box, Divider, List, ListItem, ListProps, Palette, PaletteColor, Skeleton, styled, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { DataContext } from \"../Context/DataContext\";\nimport { FormulaDataContext } from \"../Context/FormulaDataContext\";\nimport { NodeDisplay } from \"../Formula/api\";\nimport { Variant } from \"../Formula/type\";\nimport KeyMap, { valueString } from \"../KeyMap\";\nimport { allAmpReactions, AmpReactionKey } from \"../Types/consts\";\nimport { IBasicFieldDisplay, IFieldDisplay } from \"../Types/fieldDisplay\";\nimport { evalIfFunc } from \"../Util/Util\";\nimport AmpReactionModeText from \"./AmpReactionModeText\";\nimport ColorText from \"./ColoredText\";\nimport QuestionTooltip from \"./QuestionTooltip\";\nimport StatIcon from \"./StatIcon\";\n\nexport default function FieldsDisplay({ fields }: { fields: IFieldDisplay[] }) {\n  return <FieldDisplayList sx={{ m: 0 }}>\n    {fields.map((field, i) => <FieldDisplay key={i} field={field} component={ListItem} />)}\n  </FieldDisplayList>\n}\n\nfunction FieldDisplay({ field, component }: { field: IFieldDisplay, component?: React.ElementType }) {\n  const { data, oldData } = useContext(DataContext)\n  const canShow = useMemo(() => field?.canShow?.(data) ?? true, [field, data])\n  if (!canShow) return null\n  if (\"node\" in field) {\n    const node = data.get(field.node)\n    if (node.isEmpty) return null\n    if (oldData) {\n      const oldNode = oldData.get(field.node)\n      const oldValue = oldNode.isEmpty ? 0 : oldNode.value\n      return <NodeFieldDisplay node={node} oldValue={oldValue} suffix={field.textSuffix} component={component} />\n    }\n    else return <NodeFieldDisplay node={node} suffix={field.textSuffix} component={component} />\n  }\n  return <BasicFieldDisplay field={field} component={component} />\n}\n\nexport function BasicFieldDisplay({ field, component }: { field: IBasicFieldDisplay, component?: React.ElementType }) {\n  const { data } = useContext(DataContext)\n  const v = evalIfFunc(field.value, data)\n  const variant = evalIfFunc(field.variant, data)\n  const text = field.text && <span>{field.text}</span>\n  const suffix = field.textSuffix && <span>{field.textSuffix}</span>\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1 }} component={component} >\n    <Typography color={`${variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{text}{suffix}</Typography>\n    <Typography >{typeof v === \"number\" ? v.toFixed?.(field.fixed) : v}{field.unit}</Typography>\n  </Box>\n}\n\nexport function NodeFieldDisplay({ node, oldValue, suffix, component, emphasize }: { node: NodeDisplay, oldValue?: number, suffix?: Displayable, component?: React.ElementType, emphasize?: boolean }) {\n  const { data } = useContext(DataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onClick = useCallback(() => setFormulaData(data, node), [setFormulaData, data, node])\n\n  if (node.isEmpty) return null\n\n  suffix = suffix && <span>{suffix}</span>\n  const icon = node.info.key && StatIcon[node.info.key]\n  const fieldText = node.info.key ? KeyMap.get(node.info.key) : \"\"\n  const isTeamBuff = node.info.isTeamBuff\n  const fieldFormulaText = node.formula\n  let fieldVal = \"\" as Displayable\n  if (oldValue) {\n    const diff = node.value - oldValue\n    fieldVal = <span>{valueString(oldValue, node.unit)}{diff > 0.0001 || diff < -0.0001 ? <ColorText color={diff > 0 ? \"success\" : \"error\"}> {diff > 0 ? \"+\" : \"\"}{valueString(diff, node.unit)}</ColorText> : \"\"}</span>\n  } else fieldVal = valueString(node.value, node.unit)\n\n  const formulaTextOverlay = !!node.formula && <QuestionTooltip onClick={onClick} title={<Typography><Suspense fallback={<Skeleton variant=\"rectangular\" width={300} height={30} />}>\n    {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-flex\", gap: 1, mr: 1 }}>\n      <Box><AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} /></Box>\n      <Divider orientation=\"vertical\" flexItem />\n    </Box>}\n    <span>{fieldFormulaText}</span>\n  </Suspense></Typography>} />\n  return <Box width=\"100%\" sx={{ display: \"flex\", justifyContent: \"space-between\", gap: 1, boxShadow: emphasize ? \"0px 0px 0px 2px red inset\" : undefined }} component={component} >\n    <Typography color={`${node.info.variant}.main`} sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>{!!isTeamBuff && <Groups />}{icon}{fieldText}{suffix}</Typography>\n    <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n      <Typography noWrap>{fieldVal}</Typography>\n      {formulaTextOverlay}\n    </Box>\n  </Box>\n}\nexport interface FieldDisplayListProps extends ListProps {\n  light?: keyof Palette,\n  dark?: keyof Palette,\n  palletOption?: keyof PaletteColor\n}\nexport const FieldDisplayList = styled(List)<FieldDisplayListProps>(({ theme, light = \"contentDark\", dark = \"contentDarker\", palletOption = \"main\" }) => ({\n  borderRadius: theme.shape.borderRadius,\n  overflow: \"hidden\",\n  margin: 0,\n  '> .MuiListItem-root:nth-of-type(even)': {\n    backgroundColor: (theme.palette[light] as PaletteColor)[palletOption]\n  },\n  '> .MuiListItem-root:nth-of-type(odd)': {\n    backgroundColor: (theme.palette[dark] as PaletteColor)[palletOption]\n  },\n}));\n","\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst InfoTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faInfoCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default InfoTooltip\n","import { createContext, useCallback, useState } from \"react\";\nimport { NodeDisplay, UIData } from \"../Formula/uiData\";\nimport useBoolState from \"../ReactHooks/useBoolState\";\n\ntype FormulaDataContextObj = {\n  data?: UIData,\n  node?: NodeDisplay,\n  modalOpen?: boolean,\n  onModalOpen: () => void,\n  onModalClose: () => void,\n  setFormulaData: (data?: UIData, node?: NodeDisplay) => void\n}\nexport const FormulaDataContext = createContext({ setFormulaData: () => { }, onModalOpen: () => { }, onModalClose: () => { } } as FormulaDataContextObj);\n\nexport function FormulaDataWrapper({ children }: { children: JSX.Element }) {\n  const [open, onOpen, onClose] = useBoolState()\n  const [[data, node], setState] = useState([undefined, undefined] as [data: UIData | undefined, node: NodeDisplay | undefined])\n  const setFormulaData = useCallback((data?: UIData, node?: NodeDisplay) => {\n    if (data && node) onOpen()\n    else onClose()\n    setState([data, node])\n  }, [onOpen, onClose])\n  return <FormulaDataContext.Provider value={{ setFormulaData, data, node, modalOpen: open, onModalOpen: onOpen, onModalClose: onClose }} >{children}</FormulaDataContext.Provider>\n}\n","import { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from \"../Components/Character/CharacterAutocomplete\"\nimport CloseButton from \"../Components/CloseButton\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\nimport ModalWrapper from \"../Components/ModalWrapper\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\nimport { ICachedWeapon } from \"../Types/weapon\"\nimport { clamp } from \"../Util/Util\"\n\ntype WeaponStatsEditorCardProps = {\n  weaponId: string\n  footer?: boolean\n  onClose?: () => void\n  extraButtons?: JSX.Element\n}\nexport default function WeaponEditor({\n  weaponId: propWeaponId,\n  footer = false,\n  onClose,\n  extraButtons\n}: WeaponStatsEditorCardProps) {\n  const { t } = useTranslation(\"ui\")\n  const { data } = useContext(DataContext)\n\n  const { database } = useContext(DatabaseContext)\n  const weapon = useWeapon(propWeaponId)\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\n    database.weapons.set(propWeaponId, newWeapon)\n  }, [propWeaponId, database])\n\n  const setLevel = useCallback(level => {\n    level = clamp(level, 1, 90)\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\n    weaponDispatch({ level, ascension })\n  }, [weaponDispatch])\n\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\n    else weaponDispatch({ ascension: lowerAscension })\n  }, [weaponDispatch, ascension, level])\n\n  const characterSheet = usePromise(() => location ? CharacterSheet.get(location) : undefined, [location])\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.weapons.set(id, { location: charKey }), [database, id])\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const [showModal, setshowModal] = useState(false)\n  const img = weaponSheet?.getImg(ascension)\n\n  //check the levels when switching from a 5* to a 1*, for example.\n  useEffect(() => {\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\n      const [level, ascension] = lowRarityMilestoneLevels[0]\n      weaponDispatch({ level, ascension })\n    }\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\n\n\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\n    <WeaponSelectionModal ascension={ascension} show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\n    <CardContent >\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\n        <Grid item xs={12} sm={3}>\n          <Grid container spacing={1.5}>\n            <Grid item xs={6} sm={12}>\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\n            </Grid>\n            <Grid item xs={6} sm={12}>\n              <Typography><small>{weaponSheet.description}</small></Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\n            <ButtonGroup>\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\n                <MenuItem>Select Weapon Refinement</MenuItem>\n                <Divider />\n                {[...Array(5).keys()].map(key =>\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\n                    {`Refinement ${key + 1}`}\n                  </MenuItem>)}\n              </DropdownButton>}\n              {extraButtons}\n            </ButtonGroup>\n          </Box>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\n              <CustomNumberInputButtonGroupWrapper >\n                <CustomNumberInput onChange={setLevel} value={level}\n                  startAdornment=\"Lv. \"\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\n                />\n              </CustomNumberInputButtonGroupWrapper>\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\n                  const sameLevel = lv === ascensionMaxLevel[as]\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\n                  const selected = lv === level && as === ascension\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\n                })}\n              </DropdownButton>}\n            </ButtonGroup>\n\n            <Button color=\"error\" onClick={() => id && database.weapons.set(id, { lock: !lock })} startIcon={lock ? <Lock /> : <LockOpen />}>\n              {lock ? \"Locked\" : \"Unlocked\"}\n            </Button>\n          </Box>\n          <Typography><StarsDisplay stars={weaponSheet.rarity} /></Typography>\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n            <CardDark >\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n              <Divider />\n              <FieldDisplayList>\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n                  const n = weaponUIData.get(node)\n                  if (n.isEmpty || !n.value) return null\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\n                })}\n              </FieldDisplayList>\n            </CardDark>\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\n          </Box>\n        </Grid>\n      </Grid>}\n    </CardContent>\n    {footer && id && <CardContent sx={{ py: 1 }}>\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1}>\n          <CharacterAutocomplete showDefault size=\"small\" defaultIcon={<BusinessCenter />} defaultText={t(\"inventory\")} value={location} onChange={equipOnChar} filter={filter} disable={(v: any) => v === \"\"} disableClearable />\n        </Grid>\n        <Grid item flexGrow={2} />\n        {!!onClose && <Grid item><CloseButton sx={{ height: \"100%\" }} large onClick={onClose} /></Grid>}\n      </Grid>\n    </CardContent>}\n  </CardLight ></ModalWrapper>\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');"],"names":["BootstrapTooltip","styled","className","props","arrow","classes","popper","theme","tooltipClasses","color","palette","common","black","backgroundColor","maxWidth","CardHeaderCustom","avatar","title","action","display","gap","p","alignItems","variant","sx","flexGrow","ConditionalSelector","conditional","disabled","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","useCallback","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","value","entries","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","undefined","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","children","ml","key","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","description","displayTitle","InfoTooltip","Typography","placement","component","cursor","faQuestionCircle","FieldsDisplay","FieldDisplayList","m","field","FieldDisplay","ListItem","oldData","useMemo","node","isEmpty","oldNode","oldValue","NodeFieldDisplay","suffix","textSuffix","BasicFieldDisplay","width","justifyContent","toFixed","fixed","unit","emphasize","setFormulaData","FormulaDataContext","info","StatIcon","fieldText","KeyMap","isTeamBuff","fieldFormulaText","formula","fieldVal","diff","valueString","formulaTextOverlay","Suspense","fallback","Skeleton","height","allAmpReactions","mr","AmpReactionModeText","reaction","trigger","subVariant","flexItem","boxShadow","Groups","noWrap","List","light","dark","palletOption","shape","overflow","margin","faInfoCircle","createContext","onModalOpen","onModalClose","FormulaDataWrapper","useBoolState","open","onOpen","onClose","useState","setState","Provider","modalOpen","WeaponEditor","propWeaponId","weaponId","footer","extraButtons","t","useTranslation","database","DatabaseContext","weapon","useWeapon","level","refinement","ascension","lock","location","id","weaponSheet","usePromise","WeaponSheet","weaponDispatch","newWeapon","weapons","set","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","weaponFilter","ws","weaponType","weaponTypeKey","initialWeaponFilter","equipOnChar","charKey","cs","showModal","setshowModal","img","getImg","useEffect","rarity","lowRarityMilestoneLevels","weaponUIData","computeUIData","dataObjForWeapon","containerProps","show","onHide","onSelect","k","container","spacing","item","xs","sm","src","flexWrap","hasRefinement","Array","bgcolor","contentLight","main","onChange","startAdornment","inputProps","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","stars","passiveName","gutterBottom","passiveDescription","input","titleTypographyProps","n","document","py","showDefault","defaultIcon","defaultText","disable","disableClearable","large","createSvgIcon","_jsx","d"],"sourceRoot":""}