{"version":3,"file":"static/js/595.70cb18cc.chunk.js","mappings":"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","sources":["Components/Character/ThumbSide.tsx","PageUpgradeOpt/stopBreakingMe.tsx","PageUpgradeOpt/UpgradeOptDisplay.tsx","ReactHooks/useCharSelectionCallback.tsx","../node_modules/@mui/icons-material/esm/BusinessCenter.js","../node_modules/@mui/icons-material/esm/Favorite.js","../node_modules/@mui/material/internal/svg-icons/Close.js","../node_modules/@mui/system/esm/Box/Box.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { styled } from \"@mui/system\";\n\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"auto\",\n  height: `2.3em`,\n  lineHeight: 1,\n  verticalAlign: \"text-bottom\",\n  marginTop: theme.spacing(-3),\n  marginLeft: theme.spacing(-1.25),\n  marginRight: theme.spacing(-1),\n  marginBottom: theme.spacing(-1),\n}))\n\nexport default ThumbSide","import { BusinessCenter, Favorite, Replay } from \"@mui/icons-material\";\nimport { Divider, ListItemIcon, MenuItem, Skeleton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Suspense, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport usePromise from \"../ReactHooks/usePromise\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { CharacterFilterConfigs, characterFilterConfigs } from \"../Util/CharacterSort\";\nimport { filterFunction } from \"../Util/SortByFilters\";\nimport DropdownButton, { DropdownButtonProps } from \"../Components/DropdownMenu/DropdownButton\";\nimport ThumbSide from \"../Components/Character/ThumbSide\";\n\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\n  value: CharacterKey | \"\"\n  onChange: (ck: CharacterKey | \"\") => void\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\n  inventory?: boolean\n  noUnselect?: boolean,\n  unSelectText?: Displayable,\n  unSelectIcon?: Displayable,\n}\n\nexport default function CharacterDropdownButton({ value, onChange, unSelectText, unSelectIcon, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\n  const { t } = useTranslation(\"ui\");\n  const { database } = useContext(DatabaseContext)\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(database, characterSheets), [database, characterSheets])\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\n  console.log({ characterKeys }, { characterSheets })\n  return <DropdownButton\n    {...props}\n    title={characterSheet?.name ?? (inventory ? t`inventory` : (unSelectText ?? t`unselect`))}\n    color={value ? \"success\" : \"primary\"}\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : (unSelectIcon ?? <Replay />))}>\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\n      <ListItemIcon>\n        <BusinessCenter />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {t`inventory`}\n      </Typography>\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\n      <ListItemIcon>\n        <Replay />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {t`unselect`}\n      </Typography>\n    </MenuItem>)}\n    {!noUnselect && <Divider key=\"div\" />}\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value, filterConfigs)}\n  </DropdownButton >\n}\n\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\", filterConfigs: CharacterFilterConfigs | undefined) {\n  if (!filterConfigs) return []\n  const faves = characterKeys\n    .filter(filterFunction({ name: \"\", element: \"\", weaponType: \"\", favorite: \"yes\" }, filterConfigs))\n    .map(characterKey => <CharMenuItem key={characterKey} {...{ characterSheets, characterKey, selectedCharacterKey, onChange, favorite: true }} />)\n  const nonFaves = characterKeys\n    .filter(filterFunction({ name: \"\", element: \"\", weaponType: \"\", favorite: \"no\" }, filterConfigs))\n    .map(characterKey => <CharMenuItem key={characterKey} {...{ characterSheets, characterKey, selectedCharacterKey, onChange, favorite: false }} />)\n\n  console.log({ filterConfigs })\n\n  // const ff = filterFunction({ name: \"\", element: \"\", weaponType: \"\", favorite: \"yes\" }, filterConfigs)\n  // console.log('should be getting menu items', faves.length + nonFaves.length, filterConfigs)\n  // console.log(characterKeys.map(ck => [ck, ff(ck)]))\n  return faves.concat(nonFaves)\n  // return characterKeys\n}\nfunction CharMenuItem({ characterSheets, characterKey, selectedCharacterKey = \"\", onChange, favorite }:\n  { characterKey: CharacterKey, selectedCharacterKey: CharacterKey | \"\", characterSheets: StrictDict<CharacterKey, CharacterSheet>, onChange: (ck: CharacterKey) => void, favorite: boolean }) {\n  return <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\n    <ListItemIcon>\n      <ThumbSide src={characterSheets[characterKey]?.thumbImgSide} />\n    </ListItemIcon>\n    <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n      <Typography variant=\"inherit\" noWrap>\n        {characterSheets[characterKey]?.name}\n      </Typography>\n    </Suspense>\n    {favorite && <Box display=\"flex\" flexGrow={1} />}\n    {favorite && <Favorite sx={{ ml: 1, mr: -0.5 }} />}\n  </MenuItem>\n}\n","import {\n  Alert,\n  Box,\n  CardContent,\n  Divider,\n  Link,\n  Typography,\n} from '@mui/material';\nimport { useCallback, useContext, useMemo } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../Components/Card/CardDark';\nimport CardLight from '../Components/Card/CardLight';\nimport CharacterDropdownButton from './stopBreakingMe';\nimport { DatabaseContext } from '../Database/Database';\nimport { initialCharacter } from '../ReactHooks/useCharSelectionCallback';\nimport { CharacterKey } from '../Types/consts';\nimport { useNavigate } from \"react-router\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\n\nfunction HackyGetAroun() {\n  const { database } = useContext(DatabaseContext)\n  const navigate = useNavigate()\n  // Used to maintain the previous tab, if there is one\n  const cb = useCallback(\n    async (characterKey: CharacterKey) => {\n      const character = database._getChar(characterKey)\n      // Create a new character + weapon, with linking if char isnt in db.\n      if (!character) {\n        const newChar = initialCharacter(characterKey)\n        database.updateChar(newChar)\n        const characterSheet = await CharacterSheet.get(characterKey)\n        if (!characterSheet) return\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\n        const weaponId = database.createWeapon(weapon)\n        database.setWeaponLocation(weaponId, characterKey)\n        // If we are navigating to a new character,\n        // redirect to Overview, regardless of previous tab.\n        // Trying to enforce a certain UI flow when building new characters\n      }\n      navigate(`/characters/${characterKey}/upgradeOpt`)\n    },\n    [navigate, database],\n  )\n  return cb\n}\n\nexport default function UpgradeOptDisplay() {\n  const { database } = useContext(DatabaseContext)\n  const characterKey = ''\n\n  const noCharacter = useMemo(() => !database._getCharKeys().length, [database])\n  const noArtifact = useMemo(() => !database._getArts().length, [database])\n\n  const onClickTeammate = HackyGetAroun()\n  const selectCharacter = useCallback((cKey = \"\") => {\n    onClickTeammate(cKey as CharacterKey)\n  }, [onClickTeammate])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} sx={{ my: 1 }}>\n\n    {noCharacter && <Alert severity=\"error\" variant=\"filled\"> Opps! It looks like you haven't added a character to GO yet! You should go to the <Link component={RouterLink} to=\"/character\">Characters</Link> page and add some!</Alert>}\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {<CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Typography variant=\"h6\">Build Generator</Typography>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <CardLight>\n          <CardContent>\n            <CharacterDropdownButton fullWidth value={characterKey} onChange={selectCharacter} />\n          </CardContent>\n        </CardLight>\n      </CardContent>\n    </CardDark>}\n  </Box>\n}\n","import { useCallback, useContext } from \"react\";\nimport { useNavigate, useMatch } from \"react-router\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport { allSlotKeys, CharacterKey } from \"../Types/consts\";\nimport { defaultInitialWeapon } from \"../Util/WeaponUtil\";\nimport { ICachedCharacter } from \"../Types/character\";\nimport { objectKeyMap } from \"../Util/Util\";\n\n/**\n * Basically a history hook to go to the dedicated character page. Will create the character if it doesn't exist.\n * @returns\n */\nexport default function useCharSelectionCallback() {\n  const { database } = useContext(DatabaseContext)\n  const navigate = useNavigate()\n  // Used to maintain the previous tab, if there is one\n  let { params: { tab = \"\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"\" } }\n  const cb = useCallback(\n    async (characterKey: CharacterKey) => {\n      const character = database._getChar(characterKey)\n      let navTab = tab\n      // Create a new character + weapon, with linking if char isnt in db.\n      if (!character) {\n        const newChar = initialCharacter(characterKey)\n        database.updateChar(newChar)\n        const characterSheet = await CharacterSheet.get(characterKey)\n        if (!characterSheet) return\n        const weapon = defaultInitialWeapon(characterSheet.weaponTypeKey)\n        const weaponId = database.createWeapon(weapon)\n        database.setWeaponLocation(weaponId, characterKey)\n        // If we are navigating to a new character,\n        // redirect to Overview, regardless of previous tab.\n        // Trying to enforce a certain UI flow when building new characters\n        navTab = \"\"\n      }\n      navigate(`/characters/${characterKey}/${navTab}`)\n    },\n    [navigate, database, tab],\n  )\n  return cb\n}\n\nexport function initialCharacter(key: CharacterKey): ICachedCharacter {\n  return {\n    key,\n    level: 1,\n    ascension: 0,\n    hitMode: \"avgHit\",\n    reactionMode: \"\",\n    equippedArtifacts: objectKeyMap(allSlotKeys, () => \"\"),\n    equippedWeapon: \"\",\n    conditional: {},\n    bonusStats: {},\n    enemyOverride: {},\n    talent: {\n      auto: 1,\n      skill: 1,\n      burst: 1,\n    },\n    infusionAura: \"\",\n    constellation: 0,\n    team: [\"\", \"\", \"\"],\n    compareData: false,\n    favorite: false,\n  }\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 16v-1H3.01L3 19c0 1.11.89 2 2 2h14c1.11 0 2-.89 2-2v-4h-7v1h-4zm10-9h-4.01V5l-2-2h-4l-2 2v2H4c-1.1 0-2 .9-2 2v3c0 1.11.89 2 2 2h6v-2h4v2h6c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm-6 0h-4V5h4v2z\"\n}), 'BusinessCenter');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["ThumbSide","styled","theme","display","width","height","lineHeight","verticalAlign","marginTop","spacing","marginLeft","marginRight","marginBottom","CharacterDropdownButton","value","onChange","unSelectText","unSelectIcon","inventory","noUnselect","filter","props","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","characterSheet","filterConfigs","useMemo","characterFilterConfigs","characterKeys","_getCharKeys","ck","sort","console","log","DropdownButton","title","name","color","startIcon","thumbImg","src","thumbImgSide","BusinessCenter","Replay","MenuItem","onClick","selected","disabled","ListItemIcon","Typography","variant","noWrap","Divider","CharacterMenuItemArray","selectedCharacterKey","faves","filterFunction","element","weaponType","favorite","map","characterKey","CharMenuItem","nonFaves","concat","Suspense","fallback","Skeleton","flexGrow","Favorite","sx","ml","mr","UpgradeOptDisplay","noCharacter","length","noArtifact","_getArts","onClickTeammate","navigate","useNavigate","cb","useCallback","_getChar","newChar","initialCharacter","updateChar","weapon","defaultInitialWeapon","weaponTypeKey","weaponId","createWeapon","setWeaponLocation","HackyGetAroun","selectCharacter","cKey","Box","flexDirection","gap","my","Alert","severity","Link","component","RouterLink","to","CardDark","CardContent","py","CardLight","fullWidth","useCharSelectionCallback","useMatch","path","end","params","tab","character","navTab","key","level","ascension","hitMode","reactionMode","equippedArtifacts","objectKeyMap","allSlotKeys","equippedWeapon","conditional","bonusStats","enemyOverride","talent","auto","skill","burst","infusionAura","constellation","team","compareData","createSvgIcon","_jsx","d","createBox","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}