{"version":3,"file":"static/js/612.06d8d959.chunk.js","mappings":"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","sources":["PageUpgradeOpt/stopBreakingMe.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageUpgradeOpt/artifactUpgradeCrawl.ts","PageUpgradeOpt/mvncdf.ts","PageUpgradeOpt/artifactQuery.ts","PageUpgradeOpt/UpgradeOptChartCard.tsx","PageUpgradeOpt/UpgradeOptDisplay.tsx"],"sourcesContent":["import { BusinessCenter, Favorite, Replay } from \"@mui/icons-material\";\nimport { Divider, ListItemIcon, MenuItem, Skeleton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Suspense, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../Database/Database\";\nimport usePromise from \"../ReactHooks/usePromise\";\nimport { CharacterKey } from \"../Types/consts\";\nimport { CharacterFilterConfigs, characterFilterConfigs } from \"../Util/CharacterSort\";\nimport { filterFunction } from \"../Util/SortByFilters\";\nimport DropdownButton, { DropdownButtonProps } from \"../Components/DropdownMenu/DropdownButton\";\nimport ThumbSide from \"../Components/Character/ThumbSide\";\n\nexport type CharacterDropdownButtonProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\"> & {\n  value: CharacterKey | \"\"\n  onChange: (ck: CharacterKey | \"\") => void\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\n  inventory?: boolean\n  noUnselect?: boolean,\n  unSelectText?: Displayable,\n  unSelectIcon?: Displayable,\n}\n\nexport default function CharacterDropdownButton({ value, onChange, unSelectText, unSelectIcon, inventory = false, noUnselect = false, filter = () => true, ...props }: CharacterDropdownButtonProps) {\n  const { t } = useTranslation(\"ui\");\n  const { database } = useContext(DatabaseContext)\n  const characterSheets = usePromise(CharacterSheet.getAll, [])\n  const characterSheet = usePromise(CharacterSheet.get(value), [value])\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(database, characterSheets), [database, characterSheets])\n  const characterKeys = database._getCharKeys().filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\n  return <DropdownButton\n    {...props}\n    title={characterSheet?.name ?? (inventory ? t`inventory` : (unSelectText ?? t`unselect`))}\n    color={value ? \"success\" : \"primary\"}\n    startIcon={characterSheet?.thumbImg ? <ThumbSide src={characterSheet.thumbImgSide} /> : (inventory ? <BusinessCenter /> : (unSelectIcon ?? <Replay />))}>\n    {!noUnselect && (inventory ? <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\n      <ListItemIcon>\n        <BusinessCenter />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {t`inventory`}\n      </Typography>\n    </MenuItem> : <MenuItem onClick={() => onChange(\"\")} selected={value === \"\"} disabled={value === \"\"}>\n      <ListItemIcon>\n        <Replay />\n      </ListItemIcon>\n      <Typography variant=\"inherit\" noWrap>\n        {t`unselect`}\n      </Typography>\n    </MenuItem>)}\n    {!noUnselect && <Divider key=\"div\" />}\n    {!!characterSheets && CharacterMenuItemArray(characterSheets, characterKeys, onChange, value, filterConfigs)}\n  </DropdownButton >\n}\n\n// Returning an array instead of Fragment because MUI Menu doesn't like fragments.\nexport function CharacterMenuItemArray(characterSheets: StrictDict<CharacterKey, CharacterSheet>, characterKeys: CharacterKey[], onChange: (ck: CharacterKey) => void, selectedCharacterKey: CharacterKey | \"\" = \"\", filterConfigs: CharacterFilterConfigs | undefined) {\n  if (!filterConfigs) return []\n  const faves = characterKeys\n    .filter(filterFunction({ name:\"\", element: \"\", weaponType:\"\", favorite: \"yes\" }, filterConfigs))\n    .map(characterKey => <CharMenuItem key={characterKey} {...{ characterSheets, characterKey, selectedCharacterKey, onChange, favorite: true }} />)\n  const nonFaves = characterKeys\n    .filter(filterFunction({ name:\"\", element: \"\", weaponType:\"\", favorite: \"no\" }, filterConfigs))\n    .map(characterKey => <CharMenuItem key={characterKey} {...{ characterSheets, characterKey, selectedCharacterKey, onChange, favorite: false }} />)\n\n  return faves.concat(nonFaves)\n  // return characterKeys\n}\nfunction CharMenuItem({ characterSheets, characterKey, selectedCharacterKey = \"\", onChange, favorite }:\n  { characterKey: CharacterKey, selectedCharacterKey: CharacterKey | \"\", characterSheets: StrictDict<CharacterKey, CharacterSheet>, onChange: (ck: CharacterKey) => void, favorite: boolean }) {\n  return <MenuItem onClick={() => onChange(characterKey)} key={characterKey} selected={selectedCharacterKey === characterKey} disabled={selectedCharacterKey === characterKey} >\n    <ListItemIcon>\n      <ThumbSide src={characterSheets[characterKey]?.thumbImgSide} />\n    </ListItemIcon>\n    <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n      <Typography variant=\"inherit\" noWrap>\n        {characterSheets[characterKey]?.name}\n      </Typography>\n    </Suspense>\n    {favorite && <Box display=\"flex\" flexGrow={1} />}\n    {favorite && <Favorite sx={{ ml: 1, mr: -0.5 }} />}\n  </MenuItem>\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute } from \"./optimization\"\n\nexport function zero_deriv(funct: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): NumNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return { operation: \"sum_frac\", operands: [numerator, prod(numerator, -1), denom] }\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return cmp(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return cmp(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n\n    break\n    case \"threshold\":\n      const [value, threshold, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(threshold, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return cmp(value, threshold, ddx(pass, binding, diff), ddx(fail, binding, diff))\n\n    case \"match\": case \"lookup\": case \"subscript\": case \"data\":\n      throw new Error(`Unsupported [${operation}] node in ddx`)\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: Dict<string, number> = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"info\": { \"key\": \"TenacityOfTheMillelith\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"hp_\", \"source\": \"TenacityOfTheMillelith\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"info\": { \"key\": \"ShimenawasReminiscence\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"atk_\", \"source\": \"ShimenawasReminiscence\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"info\": { \"key\": \"WanderersTroupe\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"eleMas\", \"source\": \"WanderersTroupe\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"eleMas\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"info\": { \"key\": \"CrimsonWitchOfFlames\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"vaporize_dmg_\", \"variant\": \"vaporize\", \"source\": \"CrimsonWitchOfFlames\" }, \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1\n\n  var compute = precompute([formula2], f => f.path[1])\n  var result = compute(stats)[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  var res2 = compute(stat2)[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  var c_dhp_ = precompute([dhp_], f => f.path[1])\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_(stats)[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  res2 = compute(stat2)[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  var c_dhp = precompute([dhp], f => f.path[1])\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp(stats)[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  res2 = compute(stat2)[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  var c_datk_ = precompute([datk_], f => f.path[1])\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_(stats)[0])\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  res2 = compute(stat2)[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  var c_deleMas = precompute([deleMas], f => f.path[1])\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas(stats)[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../Types/artifact\"\nimport Artifact from \"../Data/Artifacts/Artifact\"\nimport { range } from \"../Util/Util\"\nimport { quadrinomial } from \"../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues(upOpt: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.maxSubstatValues(key, 5) / 1000 : Artifact.maxSubstatValues(key, 5) / 10\n  const base = upOpt.statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(upOpt.rollsLeft, (ns, p) => {\n    const vals = ns.map((ni, i) => {\n      const sub = upOpt.subs[i]\n      if (sub && !upOpt.skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 4; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = upOpt.subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: upOpt.evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../Util/MathUtil\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n","import { Data, NumNode } from \"../Formula/type\"\nimport { precompute, optimize } from \"../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../Formula/differentiate\"\nimport { DynStat } from '../PageCharacter/CharacterDisplay/Tabs/TabOptimize/background'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../Types/artifact\"\nimport { SlotKey, Rarity } from '../Types/consts';\nimport Artifact from \"../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_bad } from \"./mvncdf\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: Dict<string, number>) => StructuredNumber[],\n  skippableDerivs: boolean[]\n}\nexport type QueryResult = {\n  id: string,\n  subs: SubstatKey[],\n  rollsLeft: number,\n  statsBase: DynStat,\n  evalFn: (values: Dict<string, number>) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: Dict<string, number>) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  p: number,\n  upAvg: number,\n  appxDist: GaussianMixture\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.maxSubstatValues(key, art.rarity) / 1000 : Artifact.maxSubstatValues(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  const iq: InternalQuery = {\n    rollsLeft: rollsLeft,\n    subs: art.subs,\n    stats: newStats,\n    thresholds: objective.thresholds,\n    objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n    scale: scale,\n  }\n\n  const out = slow ? gmmNd(iq) : fastUB(iq);\n  return {\n    id: art.id,\n    subs: art.subs,\n    rollsLeft: rollsLeft,\n    statsBase: statsBase,\n\n    prob: out.p,\n    upAvg: out.upAvg,\n    distr: out.appxDist,\n    evalFn: objective.evalFn,\n    skippableDerivs: objective.skippableDerivs,\n    thresholds: objective.thresholds,\n\n    evalMode: slow ? 'slow' : 'fast',\n  }\n}\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, scale, objectiveEval, thresholds }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach(subKey => {\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 8 * rollsLeft * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { p: p_min, upAvg: upAvgUB, appxDist: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * ns[i] * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    // use wasm for mvnPE_good\n    const res = mvnPE_bad(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { p: 0, upAvg: 0, appxDist: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { p: p_ret, upAvg: upAvg_ret, appxDist: appx }\n}\n\nexport function querySetup(formulas: NumNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: NumNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n  const evalFn = precompute(evalOpt, f => f.path[1])\n\n  let stats = toStats(curBuild)\n  const dmg0 = evalFn(stats)[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: Dict<string, number>) => {\n    const out = evalFn(stats)\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo } from 'react';\nimport { DatabaseContext } from '../Database/Database';\nimport { DataContext } from '../DataContext';\nimport Assets from '../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../Formula';\nimport ArtifactCardPico from '../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../Types/consts';\nimport { ICachedArtifact } from '../Types/artifact';\nimport { gaussPDF } from '../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database._getArt(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  const perc = (x: number) => 100 * (x - thr0) / thr0;\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer height=\"99%\" aspect={3} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  Alert,\n  Box,\n  Button,\n  ButtonGroup,\n  CardContent,\n  Divider,\n  Grid,\n  Link,\n  Skeleton,\n  Typography,\n  Pagination\n} from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\n// import ReactGA from 'react-ga';\nimport { Link as RouterLink } from 'react-router-dom';\n// eslint-disable-next-line\nimport CardDark from '../Components/Card/CardDark';\nimport CardLight from '../Components/Card/CardLight';\nimport CharacterDropdownButton from './stopBreakingMe';\nimport StatFilterCard from '../Components/StatFilterCard';\nimport { DatabaseContext } from '../Database/Database';\nimport { DataContext, dataContextObj } from '../DataContext';\nimport { mergeData, uiDataForTeam } from '../Formula/api';\nimport { uiInput as input } from '../Formula/index';\nimport { optimize } from '../Formula/optimization';\nimport { NumNode } from '../Formula/type';\nimport { initGlobalSettings } from '../GlobalSettings';\nimport CharacterCard from '../Components/Character/CharacterCard';\nimport useCharacter from '../ReactHooks/useCharacter';\nimport useCharacterReducer from '../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../ReactHooks/useCharSelectionCallback';\nimport useDBState from '../ReactHooks/useDBState';\nimport useTeamData, { getTeamData } from '../ReactHooks/useTeamData';\nimport { buildSettingsReducer, initialBuildSettings } from '../PageCharacter/CharacterDisplay/Tabs/TabOptimize/BuildSetting';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../Types/consts';\nimport { clamp, objPathValue } from '../Util/Util';\nimport OptimizationTargetSelector from '../PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/OptimizationTargetSelector';\nimport { dynamicData } from '../PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground';\nimport { Query, QueryArtifact, QueryBuild, querySetup, evalArtifact, QueryResult, toQueryArtifact, cmpQ } from './artifactQuery'\nimport ArtifactCard from \"../PageArtifact/ArtifactCard\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { HitModeToggle, ReactionToggle } from '../Components/HitModeEditor';\nimport ArtifactSetConditional from '../PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConditional';\n\nfunction hackyGetAroun(): { characterKey: CharacterKey | \"\" } {\n  return { characterKey: '' }\n}\n\nexport default function UpgradeOptDisplay() {\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\n  const { database } = useContext(DatabaseContext)\n  const [{ characterKey }, setBuildSettings] = useDBState(\"BuildDisplay\", hackyGetAroun)\n  const setcharacterKey = useCallback(characterKey => {\n    if (characterKey && database._getChar(characterKey)) setBuildSettings({ characterKey })\n    else setBuildSettings({ characterKey: \"\" })\n  }, [setBuildSettings, database])\n\n  const setCharacter = useCharSelectionCallback()\n  const characterDispatch = useCharacterReducer(characterKey)\n  const character = useCharacter(characterKey)\n  const buildSettings = character?.buildSettings ?? initialBuildSettings()\n  const { plotBase, setFilters, statFilters, optimizationTarget, mainStatAssumptionLevel, maxBuildsToShow } = buildSettings\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const noCharacter = useMemo(() => !database._getCharKeys().length, [database])\n  const noArtifact = useMemo(() => !database._getArts().length, [database])\n\n  const buildSettingsDispatch = useCallback((action) =>\n    characterDispatch && characterDispatch({ buildSettings: buildSettingsReducer(buildSettings, action) }), [characterDispatch, buildSettings])\n\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState([] as QueryResult[])\n  const [qs2, setQuery] = useState(undefined as Query | undefined)\n  let querySaved = qs2\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    const numPages = Math.ceil(artifactUpgradeOpts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  //select a new character Key\n  const selectCharacter = useCallback((cKey = \"\") => {\n    if (characterKey === cKey) return\n    setcharacterKey(cKey)\n  }, [setcharacterKey, characterKey])\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback((upOpt: QueryResult[], start: number, expandTo: number) => {\n    const lookahead = 5\n    if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database._getArts()\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = upOpt.slice(0, start)\n    let arr = upOpt.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(querySaved, arti, true);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return [...fixedList, ...arr]\n  }, [database, querySaved])\n\n  //for pagination\n  const setPage = useCallback(\n    (e, value) => {\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const queryArts: QueryArtifact[] = database._getArts()\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    const equippedArts = database._getChar(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    let curEquip: QueryBuild = Object.assign({}, ...allSlotKeys.map(slotKey => {\n      const art = database._getArt(equippedArts[slotKey] ?? \"\")\n      if (!art) return { [slotKey]: undefined }\n      return { [slotKey]: toQueryArtifact(art) }\n    }))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n    console.log(curEquip, input)\n    console.log(database._getChar(characterKey))\n\n    let nodes = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    querySaved = query\n    artUpOpt = upgradeOptExpandSink(artUpOpt, 0, 5)\n\n    setArtifactUpgradeOpts(artUpOpt);\n    setQuery(query);\n  }, [characterKey, database, mainStatAssumptionLevel, maxBuildsToShow, optimizationTarget, plotBase, buildSettingsDispatch, setFilters, statFilters])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && characterSheet && character && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch, mainStatAssumptionLevel])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} sx={{ my: 1 }}>\n    {noCharacter && <Alert severity=\"error\" variant=\"filled\"> Opps! It looks like you haven't added a character to GO yet! You should go to the <Link component={RouterLink} to=\"/character\">Characters</Link> page and add some!</Alert>}\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {!dataContext && <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Typography variant=\"h6\">Build Generator</Typography>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <CardLight>\n          <CardContent>\n            <CharacterDropdownButton fullWidth value={characterKey} onChange={selectCharacter} />\n          </CardContent>\n        </CardLight>\n      </CardContent>\n    </CardDark>}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <CardDark>\n        <CardContent sx={{ py: 1 }}>\n          <Typography variant=\"h6\">Build Generator</Typography>\n        </CardContent>\n        <Divider />\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Grid container spacing={1} >\n            {/* Left half */}\n            <Grid item xs={12} md={4} lg={3} display=\"flex\" flexDirection=\"column\" gap={1} style={{ position: \"sticky\" }}>\n              <CardLight>\n                <CardContent>\n                  <CharacterDropdownButton fullWidth value={characterKey} onChange={selectCharacter} />\n                </CardContent>\n              </CardLight>\n              {/* character card */}\n              <Box><CharacterCard characterKey={characterKey} onClick={setCharacter} /></Box>\n            </Grid>\n\n            {/* Right half */}\n            <Grid item xs={12} md={8} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <Grid container spacing={1}>\n                {/* Optimization Target Selector */}\n                <Grid item lg={8}>\n                  <CardLight><CardContent>\n                    <span>Optimization Target: </span>\n                    {<OptimizationTargetSelector\n                      optimizationTarget={optimizationTarget}\n                      setTarget={target => buildSettingsDispatch({ optimizationTarget: target })}\n                      disabled={false}\n                    />}\n                    <br />\n                    {/* Hit mode options */}\n                    <HitModeToggle size=\"small\" />\n                    <br />\n                    <ReactionToggle size=\"small\" />\n                  </CardContent></CardLight>\n                </Grid>\n                <Grid item lg={4}>\n                  {/*Minimum Final Stat Filter */}\n                  <StatFilterCard statFilters={statFilters} setStatFilters={sFs => buildSettingsDispatch({ statFilters: sFs })} disabled={false} />\n\n                  <ArtifactSetConditional disabled={false} />\n                </Grid>\n              </Grid>\n\n              {/* Generate Builds button */}\n              <ButtonGroup>\n                <Button\n                  disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                  color={(characterKey) ? \"success\" : \"warning\"}\n                  onClick={generateBuilds}\n                  startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                >Calc Upgrade Priority</Button>\n              </ButtonGroup>\n\n              {numPages > 1 && <CardDark ><CardContent>\n                <Grid container>\n                  <Grid item flexGrow={1}>\n                    <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                  </Grid>\n                  <Grid item>\n                    <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts.length} t={t} />\n                  </Grid>\n                </Grid>\n              </CardContent></CardDark>}\n\n              <Box display=\"flex\" flexDirection=\"column\" gap={1} my={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 5000 }} />}>\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} gap={1} wrap=\"nowrap\">\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editor />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                </Suspense>\n                {numPages > 1 && <CardDark ><CardContent>\n                  <Grid container>\n                    <Grid item flexGrow={1}>\n                      <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                    </Grid>\n                    <Grid item>\n                      <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts.length} t={t} />\n                    </Grid>\n                  </Grid>\n                </CardContent></CardDark>}\n              </Box >\n\n            </Grid>\n          </Grid>\n\n        </CardContent>\n      </CardDark>\n\n    </DataContext.Provider>}\n  </Box>\n}\n\nfunction ShowingArt({ numShowing, total, t }) {\n  return <Typography color=\"text.secondary\">\n    <Trans t={t} i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n"],"names":["CharacterDropdownButton","value","onChange","unSelectText","unSelectIcon","inventory","noUnselect","filter","props","t","useTranslation","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","characterSheet","filterConfigs","useMemo","characterFilterConfigs","characterKeys","_getCharKeys","ck","sort","DropdownButton","title","name","color","startIcon","thumbImg","ThumbSide","src","thumbImgSide","BusinessCenter","Replay","MenuItem","onClick","selected","disabled","ListItemIcon","Typography","variant","noWrap","Divider","CharacterMenuItemArray","selectedCharacterKey","faves","filterFunction","element","weaponType","favorite","map","characterKey","CharMenuItem","nonFaves","concat","Suspense","fallback","Skeleton","width","display","flexGrow","Favorite","sx","ml","mr","zero_deriv","funct","binding","diff","ret","forEachNodes","_","f","operation","type","accu","Error","ddx","constant","sum","operands","fi","ops","i","prod","v","ix","a","da","b","slice","db","denom","numerator","length","arg1","arg2","cmp","assertUnreachable","threshold","pass","fail","quadrinomials","quadrinomial","n","k","s","nextRow","prev","c","d","push","erf","x","sign","Math","abs","exp","gaussPDF","mu","sig2","undefined","sqrt","PI","cartesian","reduce","flatMap","e","flat","sig_arr","sigr","sigma","ss","N","ssum","reverse","y","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","upOpt","scale","key","endsWith","Artifact","base","statsBase","results","rollsLeft","ns","p","vals","ni","sub","subs","skippableDerivs","allSubstatKeys","range","NaN","forEach","upVals","stats","p_upVals","isNaN","val","evalFn","gaussianPE","mean","variance","upAvg","z","y2","phi","toStats","build","Object","values","entries","evalArtifact","objective","art","slow","newBuild","curBuild","slot","newStats","rarity","level","iq","thresholds","objectiveEval","grads","ks","out","gmmNd","fastUB","id","prob","distr","appxDist","evalMode","stats2","subKey","obj","p_min","upAvgUB","apxDist","gmm","lower","upper","ksum","cp","min","appx","lpe","stat2","o","cov","o1","o2","pv","cv","res","ptot","cptot","mvnPE_bad","l","max","p_ret","upAvg_ret","querySetup","formulas","data","toEval","fo","path","evalOpt","optimize","precompute","dmg0","every","structuredEval","si","toQueryArtifact","fixedLevel","mainStatVal","mainStatKey","buildData","slotKey","setKey","fromEntries","substats","substat","accurateValue","cmpQ","meanA","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","useState","calcExacts","setCalcExacts","bla","_getArt","constrained","DataContext","artifacts","allSlotKeys","get","input","gaussConstrained","thresh","thr0","perc","miin","maax","ymax","dataEst","steps","arr","step","linspace","est","estCons","deltas","deltasConstrained","parseFloat","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","useEffect","exactData","true_p","true_e","bins","Array","fill","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","chartData","CustomTooltip","active","payload","label","className","toFixed","CardLight","CardContent","ResponsiveContainer","height","aspect","ComposedChart","margin","top","right","left","bottom","XAxis","dataKey","domain","allowDecimals","tickFormatter","Label","position","style","offset","YAxis","tick","angle","Legend","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Line","stroke","Area","dot","legendType","tooltipType","opacity","activeDot","ReferenceLine","strokeDasharray","ReferenceDot","shape","radius","Tooltip","content","cursor","Grid","direction","container","spacing","columns","sk","item","xs","ArtifactCardPico","artifactObj","Button","Box","transform","component","Assets","minWidth","hackyGetAroun","UpgradeOptDisplay","useDBState","initGlobalSettings","tcMode","setBuildSettings","setcharacterKey","useCallback","_getChar","setCharacter","useCharSelectionCallback","characterDispatch","useCharacterReducer","character","useCharacter","buildSettings","initialBuildSettings","plotBase","setFilters","statFilters","optimizationTarget","mainStatAssumptionLevel","maxBuildsToShow","teamData","useTeamData","target","noCharacter","noArtifact","_getArts","buildSettingsDispatch","action","buildSettingsReducer","pageIdex","setpageIdex","invScrollRef","useRef","artifactUpgradeOpts","setArtifactUpgradeOpts","qs2","setQuery","querySaved","numPages","ceil","currentPageIndex","clamp","toShow","thr","artifactsToShow","minObj0","maxObj0","selectCharacter","cKey","upgradeOptExpandSink","start","expandTo","queryArts","qaLookup","fixedList","end","arti","setPage","current","scrollIntoView","behavior","zz","generateBuilds","getTeamData","workerData","uiDataForTeam","assign","mergeData","dynamicData","optimizationTargetNode","objPathValue","valueFilter","minimum","Infinity","equippedArts","equippedArtifacts","curEquip","console","log","nodes","query","artUpOpt","dataContext","flexDirection","gap","my","Alert","severity","Link","RouterLink","to","CardDark","py","fullWidth","md","lg","CharacterCard","OptimizationTargetSelector","setTarget","size","StatFilterCard","setStatFilters","sFs","ArtifactSetConditional","ButtonGroup","getDisplay","icon","faCalculator","Pagination","count","page","ShowingArt","numShowing","total","minHeight","wrap","sm","xl","ArtifactCard","artifactId","editor","Trans","i18nKey"],"sourceRoot":""}