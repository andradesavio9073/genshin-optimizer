{"version":3,"file":"static/js/647.608c9719.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactSetTooltip.tsx","Components/Artifact/SubstatToggle.tsx","Components/Character/CharacterAutocomplete.tsx","Components/Character/LocationName.tsx","Components/Character/ThumbSide.tsx","Components/InfoTooltip.tsx","Components/MenuItemWithImage.tsx","Components/PercentBadge.tsx","Components/SolidColoredTextfield.tsx","PageArtifact/ArtifactCard.tsx","PageArtifact/ArtifactSort.ts","PageArtifact/RollProbability.ts","ReactHooks/useArtifact.tsx"],"sourcesContent":["import { Box, Skeleton, Stack, Typography } from \"@mui/material\"\nimport { Suspense } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport BootstrapTooltip from \"../BootstrapTooltip\"\nimport SqBadge from \"../SqBadge\"\nimport { Translate } from \"../Translate\"\n\nexport default function ArtifactSetTooltip({ children, artifactSheet, numInSet = 5 }: { children: JSX.Element, artifactSheet: ArtifactSheet, numInSet?: number }) {\n  return <BootstrapTooltip placement=\"top\" title={<ArtifactSetTooltipContent artifactSheet={artifactSheet} numInSet={numInSet} />} disableInteractive >\n    {children}\n  </BootstrapTooltip>\n}\nexport function ArtifactSetTooltipContent({ artifactSheet, numInSet = 5 }: { artifactSheet: ArtifactSheet, numInSet?: number }) {\n  return <Suspense fallback={<Skeleton variant='rectangular' width={100} height={100} />}>\n    <SetToolTipTitle artifactSheet={artifactSheet} numInSet={numInSet} />\n  </Suspense>\n}\nfunction SetToolTipTitle({ artifactSheet, numInSet = 5 }: { artifactSheet: ArtifactSheet, numInSet?: number }) {\n  const { t } = useTranslation(\"sheet\")\n  return <Stack spacing={2} sx={{ p: 1 }}>\n    {Object.keys(artifactSheet.setEffects).map((setKey) => <Box key={setKey} sx={{ opacity: parseInt(setKey) <= numInSet ? 1 : 0.5 }}>\n      <Typography><SqBadge color=\"success\">{t(`${setKey}set`)}</SqBadge></Typography>\n      <Typography><Translate ns={`artifact_${artifactSheet.key}_gen`} key18={`setEffects.${setKey}`} /></Typography>\n    </Box>\n    )}\n  </Stack>\n}\n","import { Box, Grid, ToggleButton } from \"@mui/material\"\nimport KeyMap from \"../../KeyMap\"\nimport { allSubstatKeys } from \"../../Types/artifact\"\nimport SolidToggleButtonGroup from \"../SolidToggleButtonGroup\"\nimport StatIcon from \"../StatIcon\"\n\nexport default function SubstatToggle({ selectedKeys, onChange }) {\n  const keys1 = allSubstatKeys.slice(0, 6)\n  const keys2 = allSubstatKeys.slice(6)\n  const selKeys1 = selectedKeys.filter(k => keys1.includes(k))\n  const selKeys2 = selectedKeys.filter(k => keys2.includes(k))\n  return <Grid container spacing={1}>\n    <Grid item xs={12} md={6}>\n      <SolidToggleButtonGroup fullWidth value={selKeys1} onChange={(e, arr) => onChange([...selKeys2, ...arr])} sx={{ height: \"100%\" }}>\n        {keys1.map(key => <ToggleButton size=\"small\" key={key} value={key}>\n          <Box display=\"flex\" gap={1} alignItems=\"center\">\n            {StatIcon[key]}\n            {KeyMap.getArtStr(key)}\n          </Box>\n        </ToggleButton>)}\n      </SolidToggleButtonGroup>\n    </Grid>\n    <Grid item xs={12} md={6}>\n      <SolidToggleButtonGroup fullWidth value={selKeys2} onChange={(e, arr) => onChange([...selKeys1, ...arr])} sx={{ height: \"100%\" }}>\n        {keys2.map(key => <ToggleButton size=\"small\" key={key} value={key}>\n          <Box display=\"flex\" gap={1} alignItems=\"center\">\n            {StatIcon[key]}\n            {KeyMap.getArtStr(key)}\n          </Box>\n        </ToggleButton>)}\n      </SolidToggleButtonGroup>\n    </Grid>\n  </Grid>\n}\n","import { faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { BusinessCenter, Favorite } from \"@mui/icons-material\";\nimport { Autocomplete, AutocompleteProps, Box, Skeleton, Typography, useTheme } from \"@mui/material\";\nimport { Suspense, useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { initCharMeta } from \"../../stateInit\";\nimport { allElements, allWeaponTypeKeys, CharacterKey } from \"../../Types/consts\";\nimport { CharacterFilterConfigs, characterFilterConfigs } from \"../../Util/CharacterSort\";\nimport { filterFunction } from \"../../Util/SortByFilters\";\nimport MenuItemWithImage from \"../MenuItemWithImage\";\nimport SolidColoredTextField from \"../SolidColoredTextfield\";\nimport ThumbSide from \"./ThumbSide\";\n\ntype CharacterAutocompleteValue = CharacterKey | \"\" | \"Inventory\" | \"Equipped\"\ntype CharacterAutocompleteOption = {\n  value: CharacterAutocompleteValue\n  label: string\n}\ntype CharacterAutocompleteProps = Omit<AutocompleteProps<CharacterAutocompleteOption, false, true, false>, \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  value: CharacterAutocompleteValue\n  onChange: (v: any) => void\n  filter?: (cs: CharacterSheet, ck: CharacterKey) => boolean\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  showInventory?: boolean\n  showEquipped?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n  placeholderText?: string\n  labelText?: string\n}\n\nexport default function CharacterAutocomplete({ value, onChange, defaultText = \"\", defaultIcon = \"\", placeholderText = \"\", labelText = \"\", showDefault = false, showInventory = false, showEquipped = false, filter = () => true, disable = () => false, ...props }: CharacterAutocompleteProps) {\n  const { t } = useTranslation([\"ui\", \"artifact\", \"charNames_gen\"])\n  const theme = useTheme()\n  const { database } = useContext(DatabaseContext)\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const filterConfigs = useMemo(() => characterSheets && characterFilterConfigs(database, characterSheets), [database, characterSheets])\n  const characterKeys = database.chars.keys.filter(ck => characterSheets?.[ck] && filter(characterSheets[ck], ck)).sort()\n\n  const textForValue = useCallback((value: CharacterAutocompleteValue): string => {\n    switch (value) {\n      case \"Equipped\":\n        return t(\"artifact:filterLocation.currentlyEquipped\")\n      case \"Inventory\":\n        return t(\"artifact:filterLocation.inventory\")\n      case \"\":\n        return defaultText\n      default:\n        return t(`charNames_gen:${value}`)\n    }\n  }, [defaultText, t])\n\n  const imageForValue = useCallback((value: CharacterAutocompleteValue): Displayable => {\n    switch (value) {\n      case \"Equipped\":\n        return <FontAwesomeIcon icon={faUserShield} />\n      case \"Inventory\":\n        return <BusinessCenter />\n      case \"\":\n        return defaultIcon\n      default:\n        return <ThumbSide src={characterSheets![value]?.thumbImgSide} sx={{ pr: 1 }} />\n    }\n  }, [defaultIcon, characterSheets])\n\n  const characterOptions = useMemo(() => filterConfigs && charOptions(characterKeys, filterConfigs, textForValue, showDefault, showInventory, showEquipped),\n    [filterConfigs, characterKeys, showDefault, showInventory, showEquipped, textForValue])\n\n\n\n  if (!characterSheets || !characterOptions) return <Skeleton height={50} />\n\n  return <Autocomplete\n    autoHighlight\n    options={characterOptions}\n    clearIcon={value ? undefined : \"\"} // Hide the clear icon if the value is already default\n    getOptionLabel={(option) => option.label}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && onChange(newValue ? newValue.value : \"\")}\n    isOptionEqualToValue={(option, value) => option.value === value.value}\n    getOptionDisabled={option => disable(option.value)}\n    value={{ value, label: textForValue(value) }}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={labelText}\n      placeholder={placeholderText}\n      startAdornment={imageForValue(value)}\n      hasValue={value ? true : false}\n    />}\n    renderOption={(props, option) => {\n      const favorite = option.value !== \"Equipped\" && option.value !== \"Inventory\"\n        && option.value !== \"\" && database.states.getWithInit(`charMeta_${option.value}`, initCharMeta).favorite\n      return <MenuItemWithImage\n        key={option.value ? option.value : \"default\"}\n        value={option.value ? option.value : \"default\"}\n        image={imageForValue(option.value)}\n        text={\n          <Suspense fallback={<Skeleton variant=\"text\" width={100} />}>\n            <Typography variant=\"inherit\" noWrap>\n              {textForValue(option.value)}\n            </Typography>\n          </Suspense>\n        }\n        theme={theme}\n        isSelected={value === option.value}\n        addlElement={<>\n          {favorite && <Box display=\"flex\" flexGrow={1} />}\n          {favorite && <Favorite sx={{ ml: 1, mr: -0.5 }} />}\n        </>}\n        props={props}\n      />\n    }}\n    {...props}\n  />\n}\n\n\nfunction charOptions(characterKeys: CharacterKey[], filterConfigs: CharacterFilterConfigs | undefined, textForValue: (v: CharacterAutocompleteValue) => string, showDefault: boolean, showInventory, showEquipped): CharacterAutocompleteOption[] {\n  if (!filterConfigs) return []\n  const base: CharacterAutocompleteOption[] = []\n  if (showDefault) {\n    base.push({ value: \"\", label: textForValue(\"\") })\n  }\n  if (showInventory) {\n    base.push({ value: \"Inventory\", label: textForValue(\"Inventory\") })\n  }\n  if (showEquipped) {\n    base.push({ value: \"Equipped\", label: textForValue(\"Equipped\") })\n  }\n  const faves = characterKeys\n    .filter(filterFunction({ element: [...allElements], weaponType: [...allWeaponTypeKeys], favorite: \"yes\", name: \"\" }, filterConfigs))\n    .map(characterKey => ({ value: characterKey, label: textForValue(characterKey) }))\n  const nonFaves = characterKeys\n    .filter(filterFunction({ element: [...allElements], weaponType: [...allWeaponTypeKeys], favorite: \"no\", name: \"\" }, filterConfigs))\n    .map(characterKey => ({ value: characterKey, label: textForValue(characterKey) }))\n\n  return base.concat(faves).concat(nonFaves)\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Typography } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport usePromise from \"../../ReactHooks/usePromise\";\n\nexport default function LocationName({ location }) {\n  const { t } = useTranslation(\"ui\");\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return <Typography component=\"span\">\n    {characterSheet?.name ? characterSheet.nameWIthIcon : <span><BusinessCenter sx={{ verticalAlign: \"text-bottom\" }} /> {t<string>(\"inventory\")}</span>}\n  </Typography>\n\n}\n","import { styled } from \"@mui/system\";\n\nconst ThumbSide = styled(\"img\")(({ theme }) => ({\n  display: \"inline-block\",\n  width: \"auto\",\n  height: `2.3em`,\n  lineHeight: 1,\n  verticalAlign: \"text-bottom\",\n  marginTop: theme.spacing(-3),\n  marginLeft: theme.spacing(-1.25),\n  marginRight: theme.spacing(-1),\n  marginBottom: theme.spacing(-1),\n}))\n\nexport default ThumbSide","\nimport { faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, TooltipProps } from \"@mui/material\";\nimport BootstrapTooltip from \"./BootstrapTooltip\";\n\ninterface ITooltipProps extends Omit<TooltipProps, \"children\"> {\n  className?: string,\n}\nconst InfoTooltip = ({ className, ...props }: ITooltipProps) =>\n  <BootstrapTooltip placement=\"top\" {...props} className={className}>\n    <Box component=\"span\" sx={{ cursor: \"help\" }}><FontAwesomeIcon icon={faInfoCircle} /></Box>\n  </BootstrapTooltip>\n\nexport default InfoTooltip\n","import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import SqBadge from './SqBadge';\nimport { clamp } from '../Util/Util';\nimport { ButtonProps } from '@mui/material';\nimport { RollColorKey } from '../Types/consts';\n\nexport default function PercentBadge({ value, max = 1, valid }: {\n  valid?: boolean,\n  value: number | string,\n  max?: number\n}) {\n  let [badgeColor, text]: [color: ButtonProps['color'], text: string] = typeof value === 'number' ?\n    [`roll${clamp(Math.floor((value / max) * 10) - 4, 1, 6)}` as RollColorKey, value.toFixed() + \"%\"] : [\"secondary\", value]\n  if (value > max) valid = false\n  if (!valid) badgeColor = \"error\"\n  return <SqBadge color={badgeColor} >{text}</SqBadge>\n}\n","import { TextField, TextFieldProps, useTheme } from \"@mui/material\";\n\ntype SolidColoredTextFieldProps = Omit<TextFieldProps, \"multiline\" | \"variant\" | \"color\" | \"hiddenLabel\" | \"type\" | \"InputLabelProps\"> & {\n  hasValue: boolean\n  startAdornment?: Displayable\n}\nexport default function SolidColoredTextField({ hasValue, startAdornment, InputProps, sx, ...props }: SolidColoredTextFieldProps) {\n  const theme = useTheme()\n  return <TextField\n    {...props}\n    variant=\"filled\"\n    color={hasValue ? \"success\" : \"primary\"}\n    hiddenLabel={props.label ? false : true}\n    type=\"search\"\n    InputProps={{\n      ...InputProps,\n      startAdornment,\n    }}\n    InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n    sx={{\n      ...sx,\n      // Fill in the background without using the `focused` prop\n      \"& .MuiFilledInput-root\": { backgroundColor: hasValue ? theme.palette.success.main : theme.palette.primary.main, paddingTop: props.label ? undefined : 0, paddingBottom: 0 },\n      \"& .MuiFilledInput-root.Mui-focused\": { backgroundColor: hasValue ? theme.palette.success.light : theme.palette.primary.light },\n      \"& .MuiFilledInput-root:hover\": { backgroundColor: hasValue ? theme.palette.success.dark : theme.palette.primary.dark },\n      // Remove the colored bar at the bottom of the input\n      \"& .MuiFilledInput-root:before\": { border: \"none\" },\n      \"& .MuiFilledInput-root.Mui-disabled:before\": { border: \"none\" },\n      \"& .MuiFilledInput-root:after\": { border: \"none\" },\n      \"& .MuiFilledInput-root:hover:not(.Mui-disabled):before\": { border: \"none\" },\n      // Remove the x at the end of search input for IE\n      \"& input[type=search]::-ms-clear\": { display: \"none\", width: 0, height: 0 },\n      \"& input[type=search]::-ms-reveal\": { display: \"none\", width: 0, height: 0 },\n      // Remove the x at the end of search input for Chrome\n      \"& input[type=search]::-webkit-search-decoration\": { display: \"none\" },\n      \"& input[type=search]::-webkit-search-cancel-button\": { display: \"none\" },\n      \"& input[type=search]::-webkit-search-results-button\": { display: \"none\" },\n      \"& input[type=search]::-webkit-search-results-decoration\": { display: \"none\" },\n    }}\n  />\n}\n","import { faBan, faChartLine, faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { BusinessCenter, Lock, LockOpen } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, Chip, IconButton, Skeleton, Tooltip, Typography } from '@mui/material';\nimport { lazy, Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSetTooltipContent } from '../Components/Artifact/ArtifactSetTooltip';\nimport SlotNameWithIcon from '../Components/Artifact/SlotNameWIthIcon';\nimport CardLight from '../Components/Card/CardLight';\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete';\nimport LocationName from '../Components/Character/LocationName';\nimport ColorText from '../Components/ColoredText';\nimport ConditionalWrapper from '../Components/ConditionalWrapper';\nimport InfoTooltip from '../Components/InfoTooltip';\nimport PercentBadge from '../Components/PercentBadge';\nimport { StarsDisplay } from '../Components/StarDisplay';\nimport StatIcon from '../Components/StatIcon';\nimport Artifact from '../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../Database/Database';\nimport KeyMap, { cacheValueString } from '../KeyMap';\nimport useArtifact from '../ReactHooks/useArtifact';\nimport usePromise from '../ReactHooks/usePromise';\nimport { allSubstatKeys, ICachedArtifact, ICachedSubstat, SubstatKey } from '../Types/artifact';\nimport { allElementsWithPhy, CharacterKey, Rarity } from '../Types/consts';\nimport { clamp, clamp01 } from '../Util/Util';\n\nconst ArtifactEditor = lazy(() => import('./ArtifactEditor'))\n\ntype Data = {\n  artifactId?: string,\n  artifactObj?: ICachedArtifact,\n  onClick?: (id: string) => void,\n  onDelete?: (id: string) => void,\n  mainStatAssumptionLevel?: number,\n  effFilter?: Set<SubstatKey>,\n  editor?: boolean,\n  canExclude?: boolean\n  canEquip?: boolean,\n  extraButtons?: JSX.Element\n}\nconst allSubstatFilter = new Set(allSubstatKeys)\n\nexport default function ArtifactCard({ artifactId, artifactObj, onClick, onDelete, mainStatAssumptionLevel = 0, effFilter = allSubstatFilter, editor = false, canExclude = false, canEquip = false, extraButtons }: Data): JSX.Element | null {\n  const { t } = useTranslation([\"artifact\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseArtifact = useArtifact(artifactId)\n  const sheet = usePromise(() => ArtifactSheet.get((artifactObj ?? databaseArtifact)?.setKey), [artifactObj, databaseArtifact])\n  const equipOnChar = (charKey: CharacterKey | \"\") => database.arts.set(artifactId!, { location: charKey })\n  const editable = !artifactObj\n  const [showEditor, setshowEditor] = useState(false)\n  const onHideEditor = useCallback(() => setshowEditor(false), [setshowEditor])\n  const onShowEditor = useCallback(() => editable && setshowEditor(true), [editable, setshowEditor])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => artifactId && onClick?.(artifactId)} sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }} >{children}</CardActionArea>, [onClick, artifactId],)\n  const falseWrapperFunc = useCallback(children => <Box sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\" }} >{children}</Box>, [])\n\n  const art = artifactObj ?? databaseArtifact\n\n  const { currentEfficiency, maxEfficiency, currentEfficiency_, maxEfficiency_ } = useMemo(() => {\n    if (!art) return { currentEfficiency: 0, maxEfficiency: 0, currentEfficiency_: 0, maxEfficiency_: 0 }\n    const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, effFilter)\n    const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n    return { currentEfficiency, maxEfficiency, currentEfficiency_, maxEfficiency_ }\n  }, [art, effFilter])\n\n\n  if (!art) return null\n\n  const { id, lock, slotKey, rarity, level, mainStatKey, substats, exclude, location = \"\" } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n\n  const artifactValid = maxEfficiency !== 0\n  const slotName = sheet?.getSlotName(slotKey)\n  const slotDesc = sheet?.getSlotDesc(slotKey)\n  const slotDescTooltip = slotDesc && <InfoTooltip title={<Box>\n    <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><Typography variant='h6'>{slotName}</Typography></Suspense>\n    <Typography>{slotDesc}</Typography>\n  </Box>} />\n  const ele = allElementsWithPhy.find(e => mainStatKey.startsWith(e))\n  const mainIcon = ele ? <ColorText color={ele}>{StatIcon[mainStatKey]}</ColorText> : StatIcon[mainStatKey]\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 350 }} />}>\n    {editor && <Suspense fallback={false}>\n      <ArtifactEditor\n        artifactIdToEdit={showEditor ? artifactId : \"\"}\n        cancelEdit={onHideEditor}\n      />\n    </Suspense>}\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", width: \"100%\" }}>\n          {!onClick && <IconButton color=\"primary\" disabled={!editable} onClick={() => database.arts.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ pt: 2, px: 2, position: \"relative\", zIndex: 1 }}>\n            {/* header */}\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n              {!slotName && <Skeleton variant=\"text\" width={100} />}\n              {slotName && <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{slotName}</strong></Typography>}\n              {!slotDescTooltip && <Skeleton width={10} />}\n              {slotDescTooltip}\n            </Box>\n            <Typography color=\"text.secondary\" variant=\"body2\">\n              <SlotNameWithIcon slotKey={slotKey} />\n            </Typography>\n            <Typography variant=\"h6\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n              {mainIcon}\n              <span>{KeyMap.get(mainStatKey)}</span>\n            </Typography>\n            <Typography variant=\"h5\">\n              <strong>\n                <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n              </strong>\n            </Typography>\n            <StarsDisplay stars={rarity} colored />\n            {/* {process.env.NODE_ENV === \"development\" && <Typography color=\"common.black\">{id || `\"\"`} </Typography>} */}\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={sheet?.slotIcons[slotKey] ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent sx={{ flexGrow: 1, display: \"flex\", flexDirection: \"column\", pt: 1, pb: 0, width: \"100%\" }}>\n          {substats.map((stat: ICachedSubstat) => !!stat.value && <SubstatDisplay key={stat.key} stat={stat} effFilter={effFilter} rarity={rarity} />)}\n          <Typography variant=\"caption\" sx={{ display: \"flex\", gap: 1, my: 1 }}>\n            <ColorText color=\"secondary\" sx={{ flexGrow: 1 }}>{t`artifact:editor.curSubEff`}</ColorText>\n            <PercentBadge value={currentEfficiency} max={900} valid={artifactValid} />\n            {currentEfficiency !== currentEfficiency_ && <span>/</span>}\n            {currentEfficiency !== currentEfficiency_ && <PercentBadge value={currentEfficiency_} max={900} valid={artifactValid} />}\n          </Typography>\n          {currentEfficiency !== maxEfficiency && <Typography variant=\"caption\" sx={{ display: \"flex\", gap: 1 }}>\n            <ColorText color=\"secondary\" sx={{ flexGrow: 1 }}>{t`artifact:editor.maxSubEff`}</ColorText>\n            <PercentBadge value={maxEfficiency} max={900} valid={artifactValid} />\n            {maxEfficiency !== maxEfficiency_ && <span>/</span>}\n            {maxEfficiency !== maxEfficiency_ && <PercentBadge value={maxEfficiency_} max={900} valid={artifactValid} />}\n          </Typography>}\n          <Box flexGrow={1} />\n          {art.probability !== undefined && art.probability >= 0 && <strong>Probability: {(art.probability * 100).toFixed(2)}%</strong>}\n          <Typography color=\"success.main\">{sheet?.name ?? \"Artifact Set\"} {sheet && <InfoTooltip title={<ArtifactSetTooltipContent artifactSheet={sheet} />} />}</Typography>\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        {editable && canEquip\n          ? <CharacterAutocomplete sx={{ flexGrow: 1 }} size=\"small\" showDefault\n            defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\n            value={location} onChange={equipOnChar} />\n          : <LocationName location={location} />}\n        {editable && <ButtonGroup sx={{ height: \"100%\" }}>\n          {editor && <Tooltip title={<Typography>{t`artifact:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" size=\"small\" onClick={onShowEditor} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {canExclude && <Tooltip title={<Box>\n            <Typography>{t`artifact:excludeArtifactTip`}</Typography>\n            <Typography><ColorText color={exclude ? \"error\" : \"success\"}>{t(`artifact:${exclude ? \"excluded\" : \"included\"}`)}</ColorText></Typography>\n          </Box>} placement=\"top\" arrow>\n            <Button onClick={() => database.arts.set(id, { exclude: !exclude })} color={exclude ? \"error\" : \"success\"} size=\"small\" >\n              <FontAwesomeIcon icon={exclude ? faBan : faChartLine} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" size=\"small\" onClick={() => onDelete(id)} disabled={lock}>\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>}\n      </Box>\n    </CardLight >\n  </Suspense>\n}\nfunction SubstatDisplay({ stat, effFilter, rarity }: { stat: ICachedSubstat, effFilter: Set<SubstatKey>, rarity: Rarity }) {\n  const numRolls = stat.rolls?.length ?? 0\n  const maxRoll = stat.key ? Artifact.substatValue(stat.key) : 0\n  const rollData = useMemo(() => stat.key ? Artifact.getSubstatRollData(stat.key, rarity) : [], [stat.key, rarity])\n  const rollOffset = 7 - rollData.length\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const efficiency = stat.efficiency ?? 0\n  const inFilter = stat.key && effFilter.has(stat.key)\n  const effOpacity = clamp01(0.5 + (efficiency / (100 * 5)) * 0.5) //divide by 6 because an substat can have max 6 rolls\n  const statName = KeyMap.getStr(stat.key)\n  const unit = KeyMap.unit(stat.key)\n  const progresses = useMemo(() => <Box display=\"flex\" gap={0.25} height=\"1.3em\" sx={{ opacity: inFilter ? 1 : 0.3 }}>\n    {[...stat.rolls].sort().map((v, i) => <SmolProgress key={`${i}${v}`} value={100 * v / maxRoll} color={`roll${clamp(rollOffset + rollData.indexOf(v), 1, 6)}.main`} />)}\n  </Box>, [inFilter, stat.rolls, maxRoll, rollData, rollOffset])\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">{StatIcon[stat.key]} {statName}{`+${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</Typography>\n    {progresses}\n    <Typography sx={{ opacity: effOpacity, minWidth: 40, textAlign: \"right\" }}>{efficiency.toFixed()}%</Typography>\n  </Box>)\n}\nexport function SmolProgress({ color = \"red\", value = 50 }) {\n  return <Box sx={{ width: 7, height: \"100%\", bgcolor: color, overflow: \"hidden\", borderRadius: 1, display: \"inline-block\" }}>\n    <Box sx={{ width: 10, height: `${100 - clamp(value, 0, 100)}%`, bgcolor: \"gray\" }} />\n  </Box>\n}\n","import { ICachedArtifact, MainStatKey } from \"../Types/artifact\";\nimport { allArtifactRarities, allSlotKeys, ArtifactRarity, ArtifactSetKey, CharacterKey, SlotKey } from \"../Types/consts\";\nimport { FilterConfigs, SortConfigs } from \"../Util/SortByFilters\";\nimport Artifact from \"../Data/Artifacts/Artifact\";\nimport { probability } from \"./RollProbability\";\nimport { SubstatKey } from \"../Types/artifact\";\nexport const artifactSortKeys = [\"rarity\", \"level\", \"artsetkey\", \"efficiency\", \"mefficiency\", \"probability\"] as const\nexport const artifactSortKeysTC = [\"probability\"] as const\nexport type ArtifactSortKey = typeof artifactSortKeys[number]\nexport type FilterOption = {\n  artSetKeys: ArtifactSetKey[],\n  rarity: ArtifactRarity[],\n  levelLow: number,\n  levelHigh: number,\n  slotKeys: SlotKey[],\n  mainStatKeys: MainStatKey[],\n  substats: SubstatKey[]\n  location: CharacterKey | \"Inventory\" | \"Equipped\" | \"\"\n  exclusion: Array<\"excluded\" | \"included\">,\n  locked: Array<\"locked\" | \"unlocked\">,\n}\n\ntype ArtifactSortFilter = {\n  filterOption: FilterOption\n  ascending: boolean\n  sortType: ArtifactSortKey\n}\nexport function initialFilterOption(): FilterOption {\n  return {\n    artSetKeys: [],\n    rarity: [...allArtifactRarities],\n    levelLow: 0,\n    levelHigh: 20,\n    slotKeys: [...allSlotKeys],\n    mainStatKeys: [],\n    substats: [],\n    location: \"\",\n    exclusion: [\"excluded\", \"included\"],\n    locked: [\"locked\", \"unlocked\"],\n  }\n}\nexport const initialArtifactSortFilter = (): ArtifactSortFilter => ({\n  filterOption: initialFilterOption(),\n  ascending: false,\n  sortType: artifactSortKeys[0],\n})\n\nexport function artifactSortConfigs(effFilterSet: Set<SubstatKey>, probabilityFilter): SortConfigs<ArtifactSortKey, ICachedArtifact> {\n  return {\n    rarity: {\n      getValue: art => art.rarity ?? 0,\n      tieBreaker: \"level\"\n    },\n    level: {\n      getValue: art => art.level ?? 0,\n      tieBreaker: \"artsetkey\"\n    },\n    artsetkey: {\n      getValue: art => art.setKey ?? \"\",\n      tieBreaker: \"level\"\n    },\n    efficiency: {\n      getValue: art => Artifact.getArtifactEfficiency(art, effFilterSet).currentEfficiency\n    },\n    mefficiency: {\n      getValue: art => Artifact.getArtifactEfficiency(art, effFilterSet).maxEfficiency\n    },\n    probability: {\n      getValue: art => {\n        if (!Object.keys(probabilityFilter).length) return 0\n        const prob = (art as any).probability\n        if (prob === undefined) return probability(art, probabilityFilter);\n        return prob\n      }\n    }\n  }\n}\nexport function artifactFilterConfigs(): FilterConfigs<keyof FilterOption, ICachedArtifact> {\n  return {\n    exclusion: (art, filter) => {\n      if (!filter.includes(\"included\") && !art.exclude) return false\n      if (!filter.includes(\"excluded\") && art.exclude) return false\n      return true\n    },\n    locked: (art, filter) => {\n      if (!filter.includes(\"locked\") && art.lock) return false\n      if (!filter.includes(\"unlocked\") && !art.lock) return false\n      return true\n    },\n    location: (art, filter) => {\n      if (!filter) return true\n      if (filter === \"Inventory\" && !art.location) return true\n      if (filter === \"Equipped\" && art.location) return true\n      if (filter === art.location) return true\n      return false\n    },\n    artSetKeys: (art, filter) => filter.length ? filter.includes(art.setKey) : true,\n    slotKeys: (art, filter) => filter.includes(art.slotKey),\n    mainStatKeys: (art, filter) => filter.length ? filter.includes(art.mainStatKey) : true,\n    levelLow: (art, filter) => filter <= art.level,\n    levelHigh: (art, filter) => filter >= art.level,\n    rarity: (art, filter) => filter.includes(art.rarity),\n    substats: (art, filter) => {\n      for (const filterKey of filter)\n        if (filterKey && !art.substats.some(substat => substat.key === filterKey)) return false;\n      return true\n    }\n  }\n}\n","import { IArtifact, ISubstat, MainStatKey, SubstatKey } from '../Types/artifact'\nimport { crawlObject, layeredAssignment } from '../Util/Util'\nimport Artifact from '../Data/Artifacts/Artifact'\nimport ArtifactMainStatsData from '../Data/Artifacts/artifact_main_gen.json'\n\n// We separate rolls into \"filler rolls\" that occurs when there are less than 4 substats,\n// and \"upgrade rolls\" that occurs when all 4 substats are added. They have different\n// probability distribution and require separate consideration.\n\n// Notations for the remainder of this file.\n//\n// i, j, k := substat\n// E(i) := Extra substat that rolls into substat i\n// T(i) := Targetted (extra) substat for substat i\n// Nf(i) := # of filler roll into substat i (0 <= Nfi <= 1)\n// Nu(i) := # of upgrade rolls into substat i\n//\n// E := { E1, E2, ... }\n// T := { T1, T2, ... }\n// N(i) := Nf(i) + Nu(i)\n// Nf := Nf(1) + Nf(2) + ...\n// Nu := Nu(1) + Nu(2) + ...\n//\n// For example, if the artifact has 14 atk, and the target atk is 30,\n// in a scenario where we roll 2 rolls of 16 and 18 into atk, then\n//\n// i = atk, E(atk) = 16 + 18, T(atk) = 30 - 14, Nf(atk) = 0 roll, Nu(atk) = 2 rolls\n\nconst allWeights = [3, 4, 6] as const\ntype Weight = typeof allWeights[number]\n\n/**\n * Weight used when rolling a filler roll. Each roll will choose from available\n * substats (excluding main stat and existing substats) with these weights.\n */\nconst fWeight: StrictDict<SubstatKey, Weight> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\n\n/**\n * Probability of observing a filler sequence with particular weights\n *\n * pFillerSeq[w0][w1][w2][...] = Pr [ fWeight[main stat] = w0, fWeight[substat1] = w1, fWeight[substat2] = w2, ... ]\n */\nconst pFillerSeq: Dict<0 | Weight, Dict<Weight, Dict<Weight, Dict<Weight, Dict<Weight, number>>>>> = {}\nfunction populatePFillerSeq(prefix: (0 | Weight)[], prob: { [key in Weight]: number }, sumProb: number, current: number) {\n  if (prefix.length === 5) {\n    layeredAssignment(pFillerSeq, prefix as any, current)\n    return\n  }\n\n  for (const i of allWeights)\n    if (prob[i] > 0)\n      populatePFillerSeq([...prefix, i], { ...prob, [i]: prob[i] - i }, sumProb - i, current * prob[i] / sumProb)\n}\npopulatePFillerSeq([0], { 3: 6, 4: 20, 6: 18 }, 44, 1)\n\npopulatePFillerSeq([3], { 3: 3, 4: 20, 6: 18 }, 41, 1)\npopulatePFillerSeq([4], { 3: 6, 4: 16, 6: 18 }, 40, 1)\npopulatePFillerSeq([6], { 3: 6, 4: 20, 6: 12 }, 38, 1)\n\n/**\n * cnr[n][r] = C(n, r) = n! / (r!(n-r)!)\n *\n * 0 <= n <= 5; 0 <= r <= n\n */\nconst cnr = Array(6).fill(0).map((_, n) => {\n  const result = [1]\n  let r = 0, value = 1\n  while (++r <= n) {\n    value *= n - r + 1\n    value /= r\n    result.push(value)\n  }\n\n  return result\n})\n\n/**\n * pNExtra[n][i] = Pr[ E(k) >= (i - 7n) * alpha(i) | N(k) = n ]\n *               = Pr[ (E(k) / alpha(k)) - 7n >= i | N(k) = n ]\n *\n * 0 <= n <= 5; 0 <= i < 3*n + 1\n */\nconst pNExtra = [[1]]\nwhile (pNExtra.length < 6) {\n  const last = pNExtra[pNExtra.length - 1]\n  const next = Array(last.length + 3).fill(0)\n  last.forEach((value, i) => {\n    for (const j of [0, 1, 2, 3]) {\n      next[i + j] += value\n    }\n  })\n\n  pNExtra.push(next.map(x => x / 4))\n}\nfor (const array of pNExtra) {\n  let accu = array.reduce((a, b) => a + b)\n  array.forEach((x, i, array) => {\n    array[i] = accu\n    accu -= x\n  })\n}\n\n/** Probability that `artifact` will have at least `target` stats at max level */\nfunction probability(artifact: IArtifact, _target: { [key in SubstatKey]?: number }): number {\n  if (artifact.rarity <= 2) return NaN // Doesn't work with 1* and 2* should we decide to add them\n\n  const { rarity, level, substats } = artifact\n\n  // `target = target - mainstat - substat` to find the extra substats we need\n  // Also count filler rolls (4 - # of substats) while we're at it\n  const target = { ..._target }, required = new Set(Object.keys(target))\n  let numFillerSlots = 0\n  {\n    const key = artifact.mainStatKey\n    if (key in target) {\n      const maxLevel = rarity * 4 // Note: this formula doesn't work with 1* and 2* artifacts\n      const maxLevelMainStat = ArtifactMainStatsData[rarity][key][maxLevel]\n      if (maxLevelMainStat < target[key]!) return 0 // Main stat won't meet the target\n\n      delete target[key]\n      required.delete(key as SubstatKey)\n    }\n  }\n  for (const { key, value } of substats) {\n    if (key) {\n      if (required.has(key)) {\n        required.delete(key)\n        if (target[key]! > value)\n          target[key]! -= value\n        else delete target[key] // Requirement already met\n      }\n    } else numFillerSlots += 1\n  }\n  numFillerSlots += 4 - substats.length\n\n  if (required.size > numFillerSlots || Object.keys(target).length > 4) return 0 // Not enough filler rolls\n\n  const numUpgradeRolls = Artifact.rollsRemaining(level, rarity) - numFillerSlots\n\n  // normalize `target`\n  for (const [key, value] of Object.entries(target))\n    target[key] = Math.max(Math.ceil(10 * value / Artifact.substatValue(key, rarity)), 1)\n\n  let minTotalUpgrades = 0\n  const targetEntries = Object.entries(target).map(([key, target]) => {\n    const filler = required.has(key) ? 1 : 0 // Nf(i)\n    const minUpgrade = Math.ceil(target / 10) - filler // Minimum # of upgrade rolls to ensure E(i) > T(i)\n    minTotalUpgrades += minUpgrade\n    return { target, filler, minUpgrade }\n  }).reverse()\n\n  if (minTotalUpgrades > numUpgradeRolls) return 0 // Not enough upgrade rolls\n\n  /**\n   * The optimization trick here is to write Pr[ E > T | N ] using a recursive relation. Let\n   *\n   *  f(n, t) = Pr[ E(i) >= t | N(i) = n ]\n   *  g(k, n) = Pr[ E(1) >= T(1), E(2) >= T(2), ..., E(k) >= T(k) | Nu - Nu(1) - Nu(2) - ... - Nu(k) = n ]\n   *  h(n, m, M) = Pr[ Nu(k) = m | 0 <= Nu(k) <= n, |K| = M ]\n   *\n   * Then\n   *\n   *  Pr [ E > T | N ] = Pr[ Nf(k) = I(k requires filler) for all k | N ] sum{0 <= n <= Nu} g(|K|, n)\n   *\n   * where I(X) is the indicator function, and |K| is the number of substat constraints, and\n   *\n   *  f(n, e * alpha(i)) = pNExtra[n][ e - 7n ]\n   *  h(n, m, M) = C(n, m) (M-1)^(n - m) M^(-n) = pRollInto(n, m, M)\n   *  g(0, N) = 1\n   *  g(0, n) = 0 for n != N\n   *\n   *  g(k + 1, n) = sum{0 <= m <= n} g(k, n + m) f(m + Nf(k), T(k)) h(n + m, m, |K| - k)\n   */\n\n  // At this point,\n  //  `target` = ceil(T / alpha)\n  //  `numUpgradeRolls` = Nu\n\n  let result = { [numUpgradeRolls]: 1 }, additionalUpgradeRolls = numUpgradeRolls - minTotalUpgrades\n\n  // Keep applying `target` from first to last.\n  // At each step i in the loop, `result[n]` = g(i, n)\n  targetEntries.forEach(({ target, filler, minUpgrade }, targetIndex) => {\n    const next: typeof result = {}\n\n    for (let rolls = minUpgrade; rolls <= minUpgrade + additionalUpgradeRolls; rolls++) {\n      // rolls = m; extra = T(i) / alpha - 7n\n\n      // Extra substat (mutiple of alpha) required from upgrade & filler rolls\n      const extra = target - 7 * (rolls + filler)\n      // pExtra = Pr[ Has at least `extra` * alpha from `rolls` upgrade or filler rolls into `key` ]\n      //        = f(m + Nf(i), T(i))\n      const pExtra = (extra > 0 ? pNExtra[rolls + filler][extra] : 1)\n\n      for (const [_remaining, probability] of Object.entries(result)) {\n        const remaining = parseInt(_remaining)\n        if (remaining < rolls) continue\n\n        // n := remaining - m\n        // remaining = n + m\n        // probability = g(i, n + m)\n\n        // `pRolls` = Pr[ Has `rolls` rolls into `key` from `remaining` upgrade rolls ]\n        //          = h(n + m, m, |K| - i)\n        const pRolls = pRollInto(remaining, rolls, 4 - targetIndex)\n        const index = remaining - rolls // n\n\n        // g(i + 1, n) += g(i, n + m) f(m + Nf(i), T(i)) h(n + m, m, |K| - i)\n        next[index] = (next[index] ?? 0) + probability * pExtra * pRolls\n      }\n    }\n    result = next\n  })\n\n  // At this point, `result[i]` = g(|K|, i)\n\n  return calculatePFillerRolls(artifact.mainStatKey, substats, required) * Object.values(result).reduce((a, b) => a + b)\n}\n\n/**\n * Pr[ N(k) = n | N = m, |K| = M ]\n *\n * 0 <= n <= N <= 5; 0 <= M <= 4\n */\nfunction pRollInto(m: number, n: number, M: number) {\n  return cnr[m][n] * Math.pow(M - 1, m - n) / Math.pow(M, m)\n}\n\n// Given a list of substat (in that order), calculate the probability that filler rolls will have all `required` substats in any order\nfunction calculatePFillerRolls(mainStat: MainStatKey, substats: ISubstat[], required: Set<SubstatKey>) {\n  // Instead of picking substats in a particular order [critDMG_, atk_, ...],\n  // We pick substat weights first [3, 4, 3, ...], then assign proper substats\n  // that corresponds to that weight: 3 => critDMG_ | critRate_ ; 4 => atk_, etc.\n  // This reduces the search space significantly (5040 substat sequences => 71 weight sequences).\n\n  const mainStatRatio = fWeight[mainStat] ?? 0\n  let pFillerRolls = 0 // Pr[ filler rolls include all `required` substats, Substats are in the same order as `substats` ]\n\n  const numUnusedSubstats = { 3: 2, 4: 5, 6: 3 } // # of substat not used by main stat or substats\n  let pSuffixFillerSeq: any = pFillerSeq[mainStatRatio] // Suffix of `pFillerSeq` that excludes the `substats` portion\n  for (const { key } of substats) {\n    if (key) {\n      const ratio = fWeight[key]\n      pSuffixFillerSeq = pSuffixFillerSeq[ratio]\n      numUnusedSubstats[ratio] -= 1\n    }\n  }\n  if (mainStatRatio) numUnusedSubstats[mainStatRatio] -= 1\n\n  const requiredCount = { 3: 0, 4: 0, 6: 0 }\n  for (const key of required) requiredCount[fWeight[key]] += 1\n\n  let total = 0\n  crawlObject(pSuffixFillerSeq, [], obj => typeof obj === \"number\", (prob: number, path: string[]) => {\n    total += prob\n    const currentCount = { 3: 0, 4: 0, 6: 0 }\n    for (const key of path) currentCount[key] += 1\n\n    let sum = prob\n    for (const i of allWeights) {\n      const current = currentCount[i], required = requiredCount[i]\n      if (current < required) return\n      sum *= cnr[current][required]\n    }\n\n    pFillerRolls += sum\n  })\n\n  for (const i of allWeights)\n    pFillerRolls /= cnr[numUnusedSubstats[i]][requiredCount[i]]\n  return pFillerRolls / total\n}\n\nexport { probability }\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\n\nexport default function useArtifact(artifactID: string | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [artifact, setArtifact] = useState(database.arts.get(artifactID))\n  useEffect(() => setArtifact(database.arts.get(artifactID)), [database, artifactID])\n  useEffect(() =>\n    artifactID ? database.arts.follow(artifactID, setArtifact) : undefined,\n    [artifactID, setArtifact, database])\n  return artifact\n}\n"],"names":["ArtifactSetTooltip","children","artifactSheet","numInSet","placement","title","ArtifactSetTooltipContent","disableInteractive","Suspense","fallback","variant","width","height","SetToolTipTitle","t","useTranslation","spacing","sx","p","Object","keys","setEffects","map","setKey","opacity","parseInt","color","ns","key","key18","SubstatToggle","selectedKeys","onChange","keys1","allSubstatKeys","keys2","selKeys1","filter","k","includes","selKeys2","container","item","xs","md","fullWidth","value","e","arr","size","display","gap","alignItems","StatIcon","KeyMap","CharacterAutocomplete","defaultText","defaultIcon","placeholderText","labelText","showDefault","showInventory","showEquipped","disable","props","theme","useTheme","database","useContext","DatabaseContext","characterSheets","usePromise","CharacterSheet","filterConfigs","useMemo","characterFilterConfigs","characterKeys","chars","ck","sort","textForValue","useCallback","imageForValue","icon","faUserShield","src","thumbImgSide","pr","characterOptions","base","push","label","faves","filterFunction","element","allElements","weaponType","allWeaponTypeKeys","favorite","name","characterKey","nonFaves","concat","charOptions","autoHighlight","options","clearIcon","undefined","getOptionLabel","option","event","newValue","reason","type","isOptionEqualToValue","getOptionDisabled","renderInput","placeholder","startAdornment","hasValue","renderOption","states","getWithInit","initCharMeta","image","text","noWrap","isSelected","addlElement","flexGrow","ml","mr","LocationName","location","characterSheet","component","nameWIthIcon","verticalAlign","ThumbSide","styled","lineHeight","marginTop","marginLeft","marginRight","marginBottom","className","cursor","faInfoCircle","MenuItemWithImage","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","PercentBadge","max","valid","clamp","Math","floor","toFixed","badgeColor","SolidColoredTextField","InputProps","hiddenLabel","InputLabelProps","palette","primary","backgroundColor","success","main","paddingTop","paddingBottom","light","dark","border","ArtifactEditor","lazy","allSubstatFilter","Set","ArtifactCard","artifactId","artifactObj","onClick","onDelete","mainStatAssumptionLevel","effFilter","editor","canExclude","canEquip","extraButtons","databaseArtifact","useArtifact","sheet","ArtifactSheet","editable","useState","showEditor","setshowEditor","onHideEditor","onShowEditor","wrapperFunc","flexDirection","falseWrapperFunc","art","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","Artifact","id","lock","slotKey","rarity","level","mainStatKey","substats","exclude","mainStatLevel","min","mainStatUnit","artifactValid","slotName","getSlotName","slotDesc","getSlotDesc","slotDescTooltip","ele","allElementsWithPhy","startsWith","mainIcon","minHeight","artifactIdToEdit","cancelEdit","condition","wrapper","falseWrapper","position","disabled","arts","set","right","bottom","zIndex","pt","px","mb","textAlign","borderRadius","cacheValueString","stars","colored","top","slotIcons","float","pb","stat","SubstatDisplay","my","probability","A","justifyContent","charKey","arrow","faEdit","faBan","faChartLine","faTrashAlt","numRolls","rolls","length","maxRoll","rollData","rollOffset","rollColor","efficiency","inFilter","has","effOpacity","clamp01","statName","unit","progresses","v","i","SmolProgress","indexOf","alignContent","minWidth","bgcolor","overflow","artifactSortKeys","artifactSortKeysTC","initialFilterOption","artSetKeys","allArtifactRarities","levelLow","levelHigh","slotKeys","allSlotKeys","mainStatKeys","exclusion","locked","initialArtifactSortFilter","filterOption","ascending","sortType","artifactSortConfigs","effFilterSet","probabilityFilter","getValue","tieBreaker","artsetkey","mefficiency","prob","artifactFilterConfigs","filterKey","some","substat","allWeights","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","pFillerSeq","populatePFillerSeq","prefix","sumProb","current","layeredAssignment","cnr","Array","fill","_","n","result","r","pNExtra","last","next","forEach","x","array","accu","reduce","a","b","artifact","_target","NaN","target","required","numFillerSlots","maxLevel","ArtifactMainStatsData","delete","numUpgradeRolls","entries","ceil","minTotalUpgrades","targetEntries","filler","minUpgrade","reverse","additionalUpgradeRolls","targetIndex","m","M","extra","pExtra","_remaining","remaining","pRolls","pow","index","mainStat","mainStatRatio","pFillerRolls","numUnusedSubstats","pSuffixFillerSeq","ratio","requiredCount","total","crawlObject","obj","path","currentCount","sum","calculatePFillerRolls","values","artifactID","get","setArtifact","useEffect","follow"],"sourceRoot":""}