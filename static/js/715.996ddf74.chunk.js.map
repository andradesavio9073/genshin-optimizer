{"version":3,"file":"static/js/715.996ddf74.chunk.js","mappings":"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","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","Components/Weapon/WeaponSelectionModal.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","Formula/solveLP_simplex.ts","Formula/linearUpperBound.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Context/OptimizationTargetContext.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/subproblemUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildResult.ts","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","../wasmpack/assembly.js"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport ColorText from '../ColoredText';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={<ColorText color={KeyMap.getVariant(option.key)}>{getImage(option.key)}</ColorText>}\n        text={<ColorText color={KeyMap.getVariant(option.key)}>{option.label}</ColorText>}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => artifactSheets(key).nameRaw}\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && artifactSheets(key).nameRaw}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Box, CardActionArea, CardContent, Divider, Grid, TextField, Typography } from \"@mui/material\"\nimport { ChangeEvent, useDeferredValue, useEffect, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../Assets/Assets\"\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\nimport CardDark from \"../Card/CardDark\"\nimport CardLight from \"../Card/CardLight\"\nimport CloseButton from \"../CloseButton\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport { StarsDisplay } from \"../StarDisplay\"\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\n\ntype WeaponSelectionModalProps = {\n  show: boolean,\n  ascension?: number,\n  onHide: () => void,\n  onSelect: (wKey: WeaponKey) => void,\n  filter?: (sheet: WeaponSheet) => boolean,\n  weaponTypeFilter?: WeaponTypeKey,\n}\n\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponTypeFilter }: WeaponSelectionModalProps) {\n  const { t } = useTranslation([\"page_weapon\", \"weaponNames_gen\"])\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(weaponTypeFilter ? [weaponTypeFilter] : [...allWeaponTypeKeys])\n\n  useEffect(() => weaponTypeFilter && setWeaponfilter([weaponTypeFilter]), [weaponTypeFilter])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = !weaponSheets ? [] : allWeaponKeys.filter(wKey => filter(weaponSheets(wKey)))\n    .filter(wKey => weaponFilter.includes(weaponSheets(wKey).weaponType))\n    .filter(wKey => !deferredSearchTerm || t(`weaponNames_gen:${wKey}`).toLowerCase().includes(deferredSearchTerm.toLowerCase()))\n    .sort((a, b) => weaponSheets(b).rarity - weaponSheets(a).rarity)\n\n  if (!weaponSheets) return null\n\n  return <ModalWrapper open={show} onClose={onHide}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!weaponTypeFilter} size=\"small\" />\n          </Grid >\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid >\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {weaponIdList.map(weaponKey => {\n          const weaponSheet = weaponSheets(weaponKey)\n          return <Grid item key={weaponKey} lg={3} md={4}>\n            <CardLight sx={{ height: \"100%\" }} >\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\n                <Box sx={{ flexGrow: 1, px: 1 }}>\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n                </Box>\n              </CardActionArea>\n            </CardLight>\n          </Grid>\n        })}\n      </Grid></CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onHide} />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Button } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterSelectionModal } from '../CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{node.info.name}</ColorText> <strong>{nodeVStr(node)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore, Replay } from \"@mui/icons-material\";\nimport { Box, Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport { nodeVStr } from \"../Formula/uiData\";\nimport KeyMap from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  const onReset = useCallback(() => characterDispatch({ enemyOverride: {} }), [characterDispatch])\n\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }}>\n      <Chip size=\"small\" color=\"success\" label={<span>{eLvlNode.info.name} <strong>{eLvlNode.value}</strong></span>} />\n      {allElementsWithPhy.map(element => <Typography key={element} ><EnemyResText element={element} /></Typography>)}\n      <Typography>DEF Red. {nodeVStr(eDefRed)}</Typography>\n      <Typography>DEF Ignore {nodeVStr(eDefIgn)}</Typography>\n      <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n        <Button size=\"small\" color=\"error\" sx={{ minWidth: 0, p: 0.5 }} onClick={onReset}><Replay /> RESET</Button>\n        <ExpandButton\n          expand={expanded}\n          onClick={toggle}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          size=\"small\"\n          sx={{ marginLeft: 0 }}\n        >\n          <ExpandMore />\n        </ExpandButton>\n      </Box>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} &#8734;</span> :\n    <span >{StatIcon[element]} <strong>{nodeVStr(node)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val !== undefined ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"∞ \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport { nodeVStr } from \"../../Formula/uiData\";\nimport { allEleDmgKeys, allEleResKeys } from \"../../KeyMap\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  const { t } = useTranslation(\"page_character\")\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={JSON.stringify(rn.info)} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = characterSheet.elementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.filter(k => {\n      if (k.includes(charEle)) return false\n      if (isMelee && k.includes(\"physical\")) return true\n      return true\n    }).map(k => input.total[k])\n\n    return nodes.filter(n => !!data.get(n).value)\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.icon} {specialNode.info.name}</ColorText></span>\n              <span >{nodeVStr(specialNode)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { threshold, constant, prod, sum } from './utils';\nimport { OptNode } from \"./optimization\";\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: OptNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: OptNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return threshold(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands])\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands])\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: OptNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: OptNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'const' && bval.operation === 'const') {\n          return branch.value >= bval.value ? ge : lt\n        }\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, threshold(br2, bv2, left, right))\n            return threshold(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(threshold(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, threshold } from \"./utils\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { OptNode } from \"./optimization\"\nimport { ArtSetExclusion } from \"../Database/DataManagers/BuildsettingData\"\n\nexport function foldSum(nodes: readonly OptNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) {\n    if (nodes.length === 1) return nodes[0]\n    return sum(...nodes)\n  }\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly OptNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: OptNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => Math.abs(lower[statKey] - upper[statKey]) < 1e-6)\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: OptNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return threshold(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { OptNode } from \"./optimization\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, OptNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: OptNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, OptNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: OptNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n)\n  })\n\n  function toSOP(n: OptNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","function pivotInplace(A: number[][], { i, j }: { i: number, j: number }) {\n  const Aij = A[i][j]\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    for (let k = 0; k < A[0].length; k++) {\n      if (k === j) continue\n      A[h][k] -= A[i][k] * A[h][j] / Aij\n    }\n  }\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    A[h][j] = -A[h][j] / Aij\n  }\n  for (let k = 0; k < A[0].length; k++) {\n    if (k === j) continue\n    A[i][k] = A[i][k] / Aij\n  }\n  A[i][j] = 1 / Aij\n}\n\nfunction findPiv1(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let j = 0; j < c - 1; j++) {\n    if (A[r - 1][j] >= 0) continue\n    for (let i = 0; i < r - 1; i++) {\n      if (A[i][j] > 1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('UNBOUNDED FEASIBLE')\n  }\n\n  if (minloc.i < 0) throw Error('NO PIVOTS (done)')\n  return { i: minloc.i, j: minloc.j }\n}\n\nfunction findPiv2(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let i = 0; i < r - 1; i++) {\n    if (A[i][c - 1] >= 0) continue\n    for (let j = 0; j < c - 1; j++) {\n      if (A[i][j] < -1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('INFEASIBLE')\n    return { i: minloc.i, j: minloc.j }\n  }\n  throw Error('NO PIVOTS (done)')\n}\n\nfunction backtrack(tableau: number[][], ijTrack: { i: number, j: number }[], targ: number) {\n  let side = 1;  // 0 left, 1 right\n  ijTrack.forEach(({ i, j }) => {\n    if (side === 1 && j === targ) {\n      targ = i\n      side = 0\n    }\n    else if (side === 0 && i === targ) {\n      targ = j\n      side = 1\n    }\n  })\n\n  const ncol = tableau[0].length\n  return side === 0 ? tableau[targ][ncol - 1] : 0\n}\n\n/**\n * Solve a Linear Program defined by:\n *              min  c^T x\n *               x\n *   Subject to:     Ax <= b\n *                    x >= 0\n *\n * Implemented according to:\n *   https://www.math.ucla.edu/~tom/LP.pdf\n *\n * Does not implement any cycle detection, though that *shouldnt* a problem for GO's use\n *   case. This algorithm is fairly numerically unstable though, use with care & always\n *   try to verify the solution. It's also a fair bit slower than it needs to be.\n *\n * @param c        Objective vector\n * @param Ab       Constraints matrix with thresholds. Inputted in block form [A, b]\n * @returns        the optimal solution x\n */\nexport function solveLP(c: number[], Ab: number[][]) {\n  let rows = Ab.length + 1\n  let cols = Ab[0].length\n\n  let tableau = Array(rows).fill(0).map(_ => Array(cols).fill(0))\n  Ab.forEach((Ai, i) => Ai.forEach((Aij, j) => tableau[i][j] = Aij))\n  // b.forEach((bi, i) => tableau[i][cols - 1] = bi)\n  c.forEach((cj, j) => tableau[rows - 1][j] = cj)\n  // console.log('tab', tableau)\n\n  let ijTrack: { i: number, j: number }[] = []\n\n  while (tableau.some((t, i) => i < rows - 1 && t[cols - 1] < 0)) {\n    const ij = findPiv2(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  while (tableau[rows - 1].some((t, j) => j < cols - 1 && t < 0)) {\n    const ij = findPiv1(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  return c.map((_, i) => backtrack(tableau, ijTrack, i))\n}\n","import { ArtifactsBySlot, ArtifactsBySlotVec, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { constant, sum, prod, threshold } from \"./utils\"\nimport { ExpandedPolynomial, Monomial, sumM, prodM, constantM, readM, foldLikeTerms } from './expandPoly'\nimport { precompute, allOperations, OptNode } from \"./optimization\"\nimport { solveLP } from './solveLP_simplex'\nimport { cartesian } from '../Util/Util'\n\nexport type LinearForm = {\n  w: DynStat,\n  c: number,\n  err: number\n}\nexport type LinearFormVec = {\n  w: number[],\n  c: number,\n  err: number\n}\n\nfunction minMax(node: OptNode, lower: DynStat, upper: DynStat) {\n  const compute = precompute([node], {}, n => n.path[1], 1)\n  const minval = compute([{ id: '', values: lower }])[0]\n  const maxval = compute([{ id: '', values: upper }])[0]\n  return [minval, maxval]\n}\n\n/**\n * `res` is the ONE place where negative arguments & negative slopes are allowed.\n * @param node\n */\nfunction handleResArg(node: OptNode, lower: DynStat, upper: DynStat) {\n  function flipOps(n: OptNode): OptNode {\n    switch (n.operation) {\n      case 'add':\n        return sum(...n.operands.map(n => flipOps(n)))\n      case 'const':\n        return constant(-n.value)\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (ge.operation === 'const' && lt.operation === 'const') {\n          if (ge.value <= lt.value) {\n            return threshold(branch, bval, -ge.value, -lt.value)\n          }\n        }\n        console.log(n)\n        throw Error('(res neg slope): threshold. Something went wrong.')\n      default:\n        console.log(n)\n        throw Error('(res neg slope) Havent written logic to handle this')\n    }\n  }\n\n  const flippedResOp = flipOps(node.operands[0]!)\n\n  let [a, b] = minMax(flippedResOp, lower, upper)\n  let resf = allOperations['res']\n  let [c, d] = [resf([-a]), resf([-b])]\n\n  if (b > 0 && a > -1.75) {\n    // 1 + x / 2\n    return sum(1, prod(.5, flippedResOp))\n  }\n\n  const intercept = (b * c - a * d) / (b - a)\n  const slope = (c - d) / (b - a)\n  return sum(intercept, prod(slope, flippedResOp))\n}\n\n/**\n * First converts a product of variables (including max, min, sum_frac, threshold, etc.) to\n *   a pure product form consisting of only `read` and `const` nodes, guaranteeing the\n *   product form is an upper bound.\n *\n * Then on the product form, create a linear upper bound using `lub` and return it.\n *\n * @param node The formula to expand\n * @param lower Stat lower bounds\n * @param upper Stat upper bounds\n * @returns\n */\nexport function toLinearUpperBound({ nodes, terms }: ExpandedPolynomial, lower: DynStat, upper: DynStat): LinearForm {\n  let stat2tag = {} as Dict<string, string>\n  Object.entries(nodes).forEach(([tag, n]) => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = tag\n  })\n\n  let linerr = 0\n  function toPureRead(n: OptNode): Monomial[] {\n    switch (n.operation) {\n      case 'const':\n        return constantM(n.value)\n      case 'read':\n        return readM(stat2tag[n.path[1]]!)\n      case 'add':\n        return sumM(...n.operands.map(toPureRead))\n      case 'mul':\n        return prodM(...n.operands.map(toPureRead))\n\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read' && bval.operation === 'const'\n          && lt.operation === 'const' && ge.operation === 'const') {\n          if (ge.value < lt.value) {\n            console.log(n)\n            throw Error('Not Implemented (threshold must be increasing)')\n          }\n\n          let key = branch.path[1]\n          if (lower[key] >= bval.value) return constantM(ge.value)\n          if (upper[key] < bval.value) return constantM(lt.value)\n\n          const slope = (ge.value - lt.value) / (bval.value - lower[key])\n          const mon1 = prodM(constantM(slope), readM(stat2tag[branch.path[1]]!))\n\n          const intercept = lt.value - slope * lower[key]\n          if (intercept === 0) return mon1\n          return sumM(constantM(intercept), mon1)\n          // if (lt.value === 0) return mon1\n          // return sumM(constantM(lt.value), mon1)\n        }\n        console.log(n)\n        throw Error('Not Implemented (threshold must branch between constants)')\n      case 'res':\n        let op = handleResArg(n, lower, upper)\n        return toPureRead(op)\n\n      case 'min': case 'max':\n        let [rop, cop] = n.operands\n        if (cop.operation !== 'const')\n          [rop, cop] = [cop, rop]  // Assume min(const, read)\n        if (n.operation === 'min') return toPureRead(rop)\n\n        if (cop.operation === 'const') {\n          const thresh = cop.value\n          const [minVal, maxVal] = minMax(rop, lower, upper)\n          if (minVal > thresh) return toPureRead(rop)\n          if (thresh > maxVal) return constantM(thresh)\n\n          // rescale `rop` to be above thresh, since max(f, 0) is a convex function\n          const m = (maxVal - thresh) / (maxVal - minVal)\n          const b = thresh - m * minVal\n          return sumM(constantM(b), prodM(constantM(m), toPureRead(rop)))\n        }\n        console.log(n)\n        throw Error('Not Implemented (max between two non-constants)')\n\n      case 'sum_frac':\n        const [em, denom] = n.operands\n        if (denom.operation !== 'const') throw Error('Not Implemented (non-constant sum_frac denominator)')\n\n        const [minEM, maxEM] = minMax(em, lower, upper)\n        const k = denom.value\n        // The sum_frac form is concave, so any Taylor expansion of EM / (EM + k) gives an upper bound.\n        // We can solve for the best Taylor approximation location with the following formula.\n        let loc = Math.sqrt((minEM + k) * (maxEM + k)) - k\n        let below = (k + loc) * (k + loc)\n        let slope = k / below\n        let c = loc * loc / below\n\n        // TODO: update linerr\n        return sumM(constantM(c), prodM(constantM(slope), toPureRead(em)))\n\n      default:\n        console.log(n)\n        throw Error('Not Implemented')\n    }\n  }\n\n  // 1. Turn all nodes into linear upper bounds\n  const nodesToMap = Object.fromEntries(Object.entries(nodes).filter(([tag, n]) => n.operation !== 'read').map(([tag, n]) => [tag, toPureRead(n)]))\n\n  // 2. substitute into `terms` and construct a new SOPForm whose nodes are all pure read nodes\n  let t2 = terms.flatMap(({ coeff, terms }) => prodM(constantM(coeff), ...terms.map(t => nodesToMap[t] ?? readM(t))))\n  t2 = foldLikeTerms(t2)\n\n  // 2.5 Re-name all the tags to their read node version\n  t2 = t2.map(({ coeff, terms }) => {\n    terms = terms.map(t => {\n      const nt = nodes[t]\n      if (!nt || nt.operation !== 'read') throw Error('MUST be a read node.')\n      return nt.path[1]\n    })\n    return { coeff, terms }\n  })\n\n  // 3. call lub() on each term\n  const lins = t2.map(({ coeff, terms }) => {\n    if (terms.length === 0) return { w: {}, c: coeff, err: 0 }\n    if (terms.length === 1) return { w: { [terms[0]]: coeff }, c: 0, err: 0 }\n    const { w, c, err } = lub(terms.map(k => ({ lower: lower[k], upper: upper[k] })))\n    const retw = w.reduce((ret, wi, i) => {\n      ret[terms[i]] = wi * coeff + (ret[terms[i]] ?? 0)\n      return ret\n    }, {} as DynStat)\n    return { w: retw, c: coeff * c, err: coeff * err + linerr }\n  })\n\n  return lins.reduce((lin, l) => {\n    lin.c += l.c; lin.err += l.err\n    Object.entries(l.w).forEach(([k, v]) => lin.w[k] = v + (lin.w[k] ?? 0))\n    return lin\n  }, { w: {}, c: 0, err: 0 })\n}\n\n/**\n * Constructs an upper bounding linear form for a function x_1 * x_2 * ... * x_n\n * @param bounds upper and lower bounds for each x_i\n * @returns { w, c, err } with\n */\nfunction lub(bounds: { lower: number, upper: number }[]): { w: number[], c: number, err: number } {\n  if (bounds.length === 0) return { w: [], c: 0, err: 0 }\n  const nVar = bounds.length\n\n  // Re-scale bounds to [0, 1] for numerical stability.\n  const boundScale = bounds.map(({ upper }) => upper)\n  const scaleProd = boundScale.reduce((prod, v) => prod * v, 1)\n  bounds = bounds.map(({ lower, upper }) => ({ lower: lower / upper, upper: 1 }))\n\n  // Setting up the linear program in terms of constraints.\n  // cartesian(bounds) loops 2^n times\n  let cons = cartesian(...bounds.map(({ lower, upper }) => [lower, upper])).flatMap((coords) => {\n    const prod = coords.reduce((prod, v) => prod * v, 1)\n    return [\n      [...coords.map(v => -v), 1, 0, -prod],\n      [...coords, -1, -1, prod],\n    ]\n  })\n\n  // Force equality at upper & lower corners?\n  // cons.push([...bounds.map(lu => lu.lower), -1, 0, bounds.reduce((prod, { lower }) => prod * lower, 1)])\n  // cons.push([...bounds.map(lu => lu.upper), -1, 0, bounds.reduce((prod, { upper }) => prod * upper, 1)])\n\n  let soln: any\n  const objective = [...bounds.map(_ => 0), 0, 1]\n  try {\n    // TODO: verify solution\n    soln = solveLP(objective, cons)\n  }\n  catch (e) {\n    console.log('ERROR on bounds', bounds)\n    console.log('Possibly numerical instability issue.')\n    throw e\n  }\n  return {\n    w: soln.slice(0, nVar).map((wi, i) => wi * scaleProd / boundScale[i]),\n    c: -scaleProd * soln[nVar],\n    err: scaleProd * soln[nVar + 1]\n  }\n}\n\nexport function maxWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMax([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((maxTotVal, [slotKey, slotArts]) => maxTotVal + sparseMatmulMax([lin], slotArts.map(a => a.values))[0], 0)\n}\nexport function minWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMin([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((minTotVal, [slotKey, slotArts]) => minTotVal + sparseMatmulMin([lin], slotArts.map(a => a.values))[0], 0)\n}\n\nexport function maxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  return Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n}\nexport function minMaxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  const maxw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n\n  const minw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.min(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n  return { minw, maxw }\n}\n\n\n\n// Implement matrix multiply between row-major w's of LinearForm and col-major DynStats that represent artifacts.\n/**\n * Implements sparse matrix multiplication between A and x\n * @param A A list of row-major w's of some LinearForm\n * @param x A list of col-major DynStats that represent some artifacts\n * @returns A col-major 2d array number[][] with shape (A.length, x.length).\n *          ret[0] is [A1 @ x1, A2 @ x1, ..., An @ x1]\n */\nexport function sparseMatmul(A: LinearForm[], x: DynStat[]) {\n  return x.map(dyn => A.map(({ w }) => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0)))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a max() along the rows.\n */\nexport function sparseMatmulMax(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.max(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a min() along the rows.\n */\nexport function sparseMatmulMin(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.min(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildsettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold, OptNode } from \"../../../../Formula/optimization\";\nimport { ConstantNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min, threshold } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: OptNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function pruneExclusion(nodes: OptNode[], exclusion: ArtSetExclusion): OptNode[] {\n  const maxValues: Dict<keyof typeof exclusion, number> = {}\n  for (const [key, e] of Object.entries(exclusion)) {\n    if (!e.includes(4)) continue\n    maxValues[key] = e.includes(2) ? 1 : 3\n  }\n  return mapFormulas(nodes, f => f, f => {\n    if (f.operation !== \"threshold\") return f\n\n    const [v, t, pass, fail] = f.operands\n    if (v.operation === \"read\" && t.operation === \"const\") {\n      const key = v.path[v.path.length - 1], thres = t.value\n      if (key in maxValues) {\n        const max: number = maxValues[key]\n        if (max < thres) return fail\n        if (thres === 2 && exclusion[key]!.includes(2))\n          return threshold(v, 4, pass, fail)\n      }\n    }\n    return f\n  })\n}\n\nexport function reaffine(nodes: OptNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<OptNode>(), topLevelAffine = new Set<OptNode>()\n\n  function visit(node: OptNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(op => affineNodes.has(op) && topLevelAffine.add(op))\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\": visit(f, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nfunction pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: OptNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: OptNode[], arts: ArtifactsBySlot): OptNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    {\n      const { min, max } = nodeRange.get(f)!\n      if (min === max) return constant(min)\n    }\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return f.operands[3]\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nexport function computeFullArtRange(arts: ArtifactsBySlot): DynMinMax {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  return addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n}\nexport function computeNodeRange(nodes: OptNode[], reads: DynMinMax): Map<OptNode, MinMax> {\n  const range = new Map<OptNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = operands[3]\n        else current = computeMinMax([], [operands[2], operands[3]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArtsVec(arts: ArtifactsBySlotVec, filters: RequestFilter): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArts2(arts: ArtifactsBySlot, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function filterArtsVec2(arts: ArtifactsBySlotVec, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\n\nexport type ArtifactBuildDataVecDense = {\n  id: string\n  set?: ArtifactSetKey\n  values: number[]\n  buffer: number[]\n}\n// I dont *think* its worth it to implement sparse vectors n shit\n// export type ArtifactBuildDataVecSparse = {\n//   id: string\n//   set?: ArtifactSetKey\n//   values: number[][]\n// }\nexport type ArtifactsBySlotVec = { keys: string[], base: number[], values: StrictDict<SlotKey, ArtifactBuildDataVecDense[]>, baseBuffer: number[] }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n\nexport type DynMinMax = { [key in string]: MinMax }\nexport type MinMax = { min: number, max: number }\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/DataManagers/BuildsettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useContext } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const { database } = useContext(DatabaseContext)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { DatabaseContext } from \"../../Database/Database\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { LocationKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.name) return null\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.name}</Typography>} disableInteractive>\n        <span>{node.info.icon}</span>\n      </BootstrapTooltip>\n      <span>{nodeVStr(node)}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: LocationKey }) {\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Checkroom, ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ArtifactSlotKey } from 'pipeline';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport ArtifactSetTooltip from '../../../../../Components/Artifact/ArtifactSetTooltip';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, charKeyToLocCharKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtonsRight?: JSX.Element,\n  extraButtonsLeft?: JSX.Element,\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtonsRight, extraButtonsLeft, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    allSlotKeys.forEach(s => {\n      const aid = data.get(input.art[s].id).value\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\n    })\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = data.get(input.art[slotKey].id).value!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <SetBadges currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          {extraButtonsLeft}\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped} startIcon={<Checkroom />}>Equip Build</Button>\n          {extraButtonsRight}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\n  const { data } = useContext(DataContext)\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n  )}</>\n\n}\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography >{t`tcGraph.vs`}</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton size='small' title={plotBase ? KeyMap.get(plotBase) : t`tcGraph.notSel`}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>{t`ui:unselect`}</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showMinStatThr`}</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotNode.info?.unit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueNode.info?.unit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name={t`tcGraph.optTarget`} dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name={t`tcGraph.minStatReqThr`} dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { input } from \"../../../../../Formula\"\nimport { StatKey } from \"../../../../../KeyMap\"\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\nimport useBuildSetting from \"../useBuildSetting\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\n\n  const statKeys = useMemo(() => {\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n    const charEle = data.get(input.charEle).value as ElementKey\n    statKeys.push(`${charEle}_dmg_`)\n    return statKeys\n  }, [data])\n\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport { CharacterSelectionModal } from \"../../../../CharacterSelectionModal\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setTO] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setTO(to)), [database, setTO])\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => database.displayOptimize.set({ equipmentPriority }), [database])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildsettingData\"\nimport { reducePolynomial } from \"../../../../Formula/addedUtils\"\nimport { ExpandedPolynomial, expandPoly, toNumNode } from \"../../../../Formula/expandPoly\"\nimport { LinearForm, minMaxWeightVec, toLinearUpperBound } from \"../../../../Formula/linearUpperBound\"\nimport { OptNode, precompute } from \"../../../../Formula/optimization\"\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\"\nimport { objectKeyMap, objectKeyValueMap, range } from \"../../../../Util/Util\"\nimport { ArtifactBuildDataVecDense, ArtifactsBySlot, ArtifactsBySlotVec, DynStat, filterArtsVec2, RequestFilter } from \"./common\"\n\nexport type UnionFilter = {\n  uType: true\n  filters: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>[]\n} | (RequestFilter & { uType: false })\n\nexport type RequestFilter2 = {\n  // filter: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>,\n  filterVec: StrictDict<SlotKey, number[]>,  // dict of list of indices (for some particular ArtifactsBySetVec)\n  lower: number[],  // length `k` list of lower bound stats\n  upper: number[],  // length `k` list of upper bound stats\n  minw: number[],   // length `l` list of minimum upper bound estimates\n  maxw: number[],   // length `l` list of maximum upper bound weights\n}\nexport type UnionFilter2 = RequestFilter2[]\nexport type ArtSetExclusionFull = Dict<Exclude<ArtifactSetKey, \"PrayersForDestiny\" | \"PrayersForIllumination\" | \"PrayersForWisdom\" | \"PrayersToSpringtime\"> | \"uniqueKey\", number[]>\n// export type SubProblem = SubProblemNC | SubProblemWC\nexport type SubProblem = SubProblemWC\nexport type SubProblemNC = {\n  cache: false,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  depth: number,\n}\nexport type SubProblemWC = {\n  cache: true,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  lin: LinearForm[],\n  // cachedCompute: CachedCompute,\n  depth: number,\n}\nexport type CachedCompute = {\n  maxEst: number[],\n  lin: LinearForm[],\n  lower: DynStat,\n  upper: DynStat\n}\n\nexport function countBuildsU(f: UnionFilter2): number {\n  return f.reduce((tot, { filterVec }) => tot + allSlotKeys.reduce((_count, slot) => _count * filterVec[slot].length, 1), 0)\n}\n\nexport function unionFilterUpperLower(f: UnionFilter2) {\n  const lower = [...f[0].lower]\n  const upper = [...f[0].upper]\n  const minw = [...f[0].minw]\n  const maxw = [...f[0].maxw]\n\n  for (let i = 1; i < f.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], f[i].lower[j])\n      upper[j] = Math.max(upper[j], f[i].upper[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], f[i].minw[j])\n      maxw[j] = Math.max(maxw[j], f[i].maxw[j])\n    }\n  }\n\n  return { lower, upper, minw, maxw }\n}\n\nexport function applyLinearForm(arts: ArtifactsBySlotVec, lin: LinearForm[]) {\n  const wixs: number[][] = []\n  const ws: number[][] = []\n  const baseC: number[] = []\n  lin.forEach(li => {\n    const ixs0: number[] = []\n    const w0: number[] = []\n    Object.entries(li.w).forEach(([k, w]) => {\n      ixs0.push(arts.keys.indexOf(k))\n      w0.push(w)\n    })\n    wixs.push(ixs0)\n    ws.push(w0)\n\n    baseC.push(ixs0.reduce((accum, ix, i) => accum + arts.base[ix] * w0[i], li.c))\n  })\n\n  arts.baseBuffer = baseC\n  allSlotKeys.forEach(slotKey => arts.values[slotKey].forEach(art =>\n    art.buffer = wixs.map((ixsi, i) => ixsi.reduce((accum, ix, j) => accum + art.values[ix] * ws[i][j], 0))\n  ))\n}\n\nexport function reduceSubProblem(arts: ArtifactsBySlotVec, threshold: number, subp: SubProblem): SubProblemWC | undefined {\n  const { optimizationTarget, constraints, artSetExclusion, depth } = subp\n  let { filters } = subp\n  let nodes = [...constraints.map(({ value }) => value), optimizationTarget]\n  const mins = constraints.map(({ min }) => min)\n\n  // 0. Check for never-feasible constraints\n  filters = filters.filter(({ maxw }) => {\n    if (mins.some((min, j) => maxw[j] < min)) return false\n    if (maxw[mins.length] < threshold) return false\n    return true\n  })\n  if (filters.length === 0) return undefined\n\n  // 0b. Calculate stat bounding box\n  const { lower, upper } = unionFilterUpperLower(filters)\n  const statsMin: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, lower[i]])))\n  const statsMax: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, upper[i]])))\n\n  nodes = reducePolynomial(nodes, statsMin, statsMax)\n\n  // 1. Check for always-feasible constraints.\n  const compute = precompute(constraints.map(({ value }) => toNumNode(value)), {}, n => n.path[1], 1)\n  const result = compute([{ id: '', values: statsMin }])\n\n  const active = mins.map((m, i) => m > result[i])\n\n  const newOptTarget = nodes.pop()!\n  const newConstraints = nodes.map((value, i) => ({ value, min: mins[i] })).filter((_, i) => active[i])\n  const newMins = newConstraints.map(({ min }) => min)\n\n  // 2. Check for never-active and always-active ArtSetExcl constraints.\n  const newArtExcl = {} as ArtSetExclusionFull\n  for (const [setKey, exclude] of Object.entries(artSetExclusion)) {\n    if (setKey === 'uniqueKey') {\n      // TODO: Check and exclude rainbow bullshit.\n      newArtExcl[setKey] = exclude\n      const feasibleKeys = allArtifactSets.filter(setKey => statsMax[setKey] > 0)\n      let feasible4sets = 0\n      let feasible2sets = 0\n      feasibleKeys.forEach(k => {\n        let allowedCnts = range(statsMin[k], statsMax[k])\n        if (artSetExclusion[k])\n          allowedCnts = allowedCnts.filter(cnt => !artSetExclusion[k].includes(cnt))\n\n        if (allowedCnts.includes(4) || allowedCnts.includes(5)) feasible4sets++\n        if (allowedCnts.includes(2) || allowedCnts.includes(3)) feasible2sets++\n      })\n\n      if (exclude.includes(5) && feasible4sets === 0) {\n        if (feasible2sets === 0) return; // No feasible 4sets or 2sets along with rainbow5 excluded is never satisfiable\n        if (exclude.includes(3) && feasible2sets < 2) return; // No 4sets, rainbow5 excluded, rainbow3 excluded means we need at least 2 2sets\n      }\n      continue\n    }\n    const reducedExcl = exclude.filter(n => statsMin[setKey] <= n && n <= statsMax[setKey])        // Cut away never-active\n    if (reducedExcl.includes(statsMin[setKey]) && reducedExcl.includes(statsMax[setKey])) return;  // Always active.\n    if (reducedExcl.length > 0) newArtExcl[setKey] = reducedExcl\n  }\n\n  // 3. Estimate Upper Bounds and re-check for never-feasible constraints\n  let f = [...newConstraints.map(({ value }) => value), newOptTarget]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  applyLinearForm(arts, lin)\n  const newFilters = filters\n    .map(filter => {\n      const { filterVec, lower, upper } = filter\n      const a = filterArtsVec2(arts, filter.filterVec)  // CANDIDATE for making this more efficient\n      const minww = [...a.baseBuffer]\n      const maxww = [...a.baseBuffer]\n      allSlotKeys.forEach(slotKey => {\n        const { minw, maxw } = slotUpperLowerVecW(a.values[slotKey])\n        for (let j = 0; j < minww.length; j++) {\n          minww[j] += minw[j]\n          maxww[j] += maxw[j]\n        }\n      })\n      return {\n        filterVec, lower, upper,\n        minw: minww, maxw: maxww,\n      }\n    })\n    .filter(({ maxw }) => {\n      if (newMins.some((min, j) => maxw[j] < min)) return false\n      if (maxw[mins.length] < threshold) return false\n      return true\n    })\n\n  return {\n    cache: true,\n    optimizationTarget: newOptTarget,\n    constraints: newConstraints,\n    artSetExclusion: newArtExcl,\n\n    depth, lin, filters: newFilters\n  }\n}\n\nexport function toArtifactBySlotVec(arts: ArtifactsBySlot): ArtifactsBySlotVec {\n  const allKeys = new Set(Object.keys(arts.base))\n  Object.values(arts.values).forEach(slotArts => {\n    slotArts.forEach(art => {\n      if (art.set) allKeys.add(art.set)\n      Object.keys(art.values).forEach(k => allKeys.add(k))\n    })\n  })\n\n  const allKeysList = [...allKeys]\n  const keys = [...allKeysList.filter(k => !(allArtifactSets as readonly string[]).includes(k)), ...allKeysList.filter(k => (allArtifactSets as readonly string[]).includes(k))]\n\n  return {\n    keys, baseBuffer: [],\n    base: keys.map(k => arts.base[k] ?? 0),\n    values: {\n      flower: arts.values.flower.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      plume: arts.values.plume.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      sands: arts.values.sands.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      goblet: arts.values.goblet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      circlet: arts.values.circlet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n    }\n  }\n}\n\ntype ProblemSetup = {\n  optimizationTargetNode: OptNode,\n  nodes: OptNode[],\n  minimum: number[],\n  artSetExclusion: ArtSetExclusion\n}\nexport function problemSetup(arts: ArtifactsBySlotVec, { optimizationTargetNode, nodes, minimum, artSetExclusion }: ProblemSetup): SubProblemWC {\n  const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n    if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n    return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n  })\n\n  const constraintsEP = nodes\n    .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n    .filter(x => x.min > -Infinity)\n  const opttargetEP = expandPoly(optimizationTargetNode)\n\n  const { lower, upper } = statsUpperLowerVec(arts)\n  const statsMin = Object.fromEntries(arts.keys.map((k, i) => [k, lower[i]]))\n  const statsMax = Object.fromEntries(arts.keys.map((k, i) => [k, upper[i]]))\n  let f = [...constraintsEP.map(({ value }) => value), opttargetEP]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  const minMaxEst = lin.map(li => minMaxWeightVec(arts, li))\n\n  console.log('-----------------------------------------------------------------------')\n  console.log('lin', lin)\n  console.log('-----------------------------------------------------------------------')\n\n  const filterVec = objectKeyMap(allSlotKeys, slotKey => {\n    return arts.values[slotKey].map((v, i) => i)\n  })\n\n  const initialProblem: SubProblemWC = {\n    cache: true,\n    optimizationTarget: opttargetEP,\n    constraints: constraintsEP,\n    artSetExclusion: artSetExclFull,\n\n    filters: [{\n      filterVec, lower, upper,\n      maxw: minMaxEst.map(({ maxw }) => maxw),\n      minw: minMaxEst.map(({ minw }) => minw),\n    }],\n    depth: 0,\n    lin,\n  }\n  const initialReducedProblem = reduceSubProblem(arts, -Infinity, initialProblem)\n  console.log(initialReducedProblem)\n\n  const statsBase = Object.fromEntries(arts.keys.map((k, i) => [k, arts.base[i]]))\n  evaluateExpandedPolynomial(opttargetEP, statsBase)\n\n  if (initialReducedProblem === undefined)\n    return initialProblem\n  return initialReducedProblem\n}\n\nexport function slotUpperLowerVec(arts: ArtifactBuildDataVecDense[]) {\n  const lower = [...arts[0].values]\n  const upper = [...arts[0].values]\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], arts[i].values[j])\n      upper[j] = Math.max(upper[j], arts[i].values[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { lower, upper, minw, maxw }\n}\nexport function slotUpperLowerVecW(arts: ArtifactBuildDataVecDense[]) {\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { minw, maxw }\n}\nexport function statsUpperLowerVec(a: ArtifactsBySlotVec) {\n  const lower = [...a.base]\n  const upper = [...a.base]\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVec(slotArts)\n    for (let i = 0; i < lower.length; i++) {\n      lower[i] += slotUL.lower[i]\n      upper[i] += slotUL.upper[i]\n    }\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { lower, upper, minw, maxw }\n}\nexport function statsUpperLowerVecW(a: ArtifactsBySlotVec) {\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVecW(slotArts)\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { minw, maxw }\n}\nexport function evaluateExpandedPolynomial(poly: ExpandedPolynomial, x: DynStat) {\n  // 1. evaluate each component node\n  const nodeVals = Object.fromEntries(Object.entries(poly.nodes).map(([fk, f]) => {\n    const compute = precompute([f], {}, n => n.path[1], 1);\n    return [fk, compute([{ id: '', values: x }])[0]]\n  }))\n\n  const termVals = poly.terms.map(({ coeff, terms }) => coeff * terms.reduce((v, t) => v * nodeVals[t], 1))\n  console.log('Value of {poly(x)}: ', termVals.reduce((a, b) => a + b))\n}\n","import { CheckBox, CheckBoxOutlineBlank, Close, Science, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography, Pagination } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { defThreads } from '../../../../Database/DataEntries/DisplayOptimizeEntry';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { Build, mergeBuilds, mergePlot, pruneAll, pruneExclusion } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { countBuildsU, problemSetup, SubProblem, toArtifactBySlotVec } from './subproblemUtil';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport useBuildResult from './useBuildResult';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setDisplayOptimize] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setDisplayOptimize(to)), [database, setDisplayOptimize])\n\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => database.displayOptimize.set({ threads }), [database],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const { buildResult: { builds, buildDate }, buildResultDispatch } = useBuildResult(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let unoptimizedOptimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!unoptimizedOptimizationTargetNode) return\n    const targetNode = unoptimizedOptimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let unoptimizedNodes = [...valueFilter.map(x => x.value), unoptimizedOptimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      unoptimizedNodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    // BEGIN: problem pre-processing steps\n    const prepruneArts = arts\n    let nodes = optimize(unoptimizedNodes, workerData, ({ path: [p] }) => p !== \"dyn\")\n    nodes = pruneExclusion(nodes, artSetExclusion);\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // BNB vector pre-processing\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    let optimizationTargetNode = nodes.pop()!\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const constraints = nodes\n      .map((value, i) => ({ node: value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const artsVec = toArtifactBySlotVec(arts)\n    const initialProblem = problemSetup(artsVec, { optimizationTargetNode, nodes, minimum, artSetExclusion })\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 5\n    const minFilterCount = 2_000 // Don't split for single worker\n    // const maxRequestFilterInFlight = maxWorkers * 4\n    const maxRequestFilterInFlight = 1\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    // const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1].val }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuildsU(subproblem.filters)\n      // let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1].val, subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1].val, minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\n      workers.push(worker)\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts, artsVec,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        constraints: constraints\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              // wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (targetNode.info?.unit === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (plotBaseNode.info?.unit === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildResultDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildResultDispatch, maxWorkers, buildSetting, equipmentPriority])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Box>\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\n              </Box>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>{t`levelFilter`}</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<TrendingUp />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildResultDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        <BuildList builds={builds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\n      </OptimizationTargetContext.Provider>\n    </DataContext.Provider>}\n  </Box>\n}\n\nconst maxArtsToShowPerPage = 5\nfunction BuildList({ builds, characterKey, data, compareData, disabled }: {\n  builds: string[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {builds?.map((build, index) => characterKey && data && <DataContextWrapper\n      key={index + build.join()}\n      characterKey={characterKey}\n      build={build}\n      oldData={data}\n    >\n      <BuildItemWrapper index={index} build={build} compareData={compareData} disabled={disabled} />\n    </DataContextWrapper>\n    )}\n  </Suspense>, [builds, characterKey, data, compareData, disabled])\n  return list\n}\nfunction BuildItemWrapper({ index, build, compareData, disabled }: {\n  index: number\n  build: string[],\n  compareData: boolean,\n  disabled: boolean,\n}) {\n  const location = useLocation()\n  const navigate = useNavigate()\n  const toTC = useCallback(() => {\n    const paths = location.pathname.split(\"/\")\n    paths.pop()\n    navigate(`${paths.join(\"/\")}/theorycraft`, { state: { build } })\n  }, [navigate, build, location.pathname])\n\n  return <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled}\n    extraButtonsLeft={<Button color=\"info\" size=\"small\" startIcon={<Science />} onClick={toTC}>Theorycraft</Button>} />\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: string[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { database } = useContext(DatabaseContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  // Update the build when the build artifacts are changed.\n  const [dirty, setDirty] = useForceUpdate()\n  useEffect(() => database.arts.followAny((id) => build.includes(id) && setDirty()), [database, build, setDirty])\n  const buildsArts = useMemo(() => dirty && build.map(i => database.arts.get(i)!), [dirty, build, database])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, buildsArts)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n\nfunction PageBrowser({ numPages, pageIdx, setPageIdex }: {\n  numPages: number,\n  pageIdx: number,\n  setPageIdex: (e: any, n: number) => void\n}) {\n  return <CardDark ><CardContent>\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Pagination count={numPages} page={pageIdx + 1} onChange={setPageIdex} />\n      </Grid>\n      <Grid item>\n        page {pageIdx + 1} / {numPages}\n        {/* <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} /> */}\n      </Grid>\n    </Grid>\n  </CardContent></CardDark>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { IBuildResult } from \"../../../../Database/DataManagers/BuildResult\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildResult(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildResult, setBuildResult] = useState(() => database.buildResult.get(characterKey))\n  useEffect(() => setBuildResult(database.buildResult.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildResult.follow(characterKey, (k, r, v) => r === \"update\" && setBuildResult(v)),\n    [characterKey, setBuildResult, database])\n  const buildResultDispatch = useCallback((action: Partial<IBuildResult>) => characterKey && database.buildResult.set(characterKey, action), [characterKey, database],)\n\n  return { buildResult, buildResultDispatch }\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap).filter(a => a)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n      <BuildDisplayItem compareBuild={true} extraButtonsLeft={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /></>} extraButtonsRight={<><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n    </DataContext.Provider>}\n  </Suspense>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useCharMeta from '../../../../ReactHooks/useCharMeta';\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const { rvFilter } = useCharMeta(characterKey)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editorProps={{}} canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const { rvFilter } = useCharMeta(characterKey)\n  const setRVFilter = useCallback(rvFilter => database.charMeta.set(characterKey, { rvFilter }), [database, characterKey],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useCharMeta from \"../../../../ReactHooks/useCharMeta\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { database } = useContext(DatabaseContext)\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const { favorite } = useCharMeta(characterKey)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => database.charMeta.set(characterKey, { favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <Box>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </Box>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from 'react';\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).filter(([_, node]) => !node.isEmpty).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { AutocompleteProps, CardContent, CardHeader, Divider, Grid, Skeleton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DatabaseContext } from \"../../../Database/Database\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport useDBMeta from \"../../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n]) => n && <Grid item xs={12} key={JSON.stringify(n.info)} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { t } = useTranslation(\"page_character\")\n  const { data } = useContext(DataContext)\n  const { character: { team } } = useContext(CharacterContext)\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\n  return <>\n    <CardLight>\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\n    </CardLight>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\n  const onClickHandler = useCharSelectionCallback()\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\n      setChar={setTeammate}\n      label={t(\"teammate\", { count: index + 1 })}\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n\nfunction TeammateAutocomplete({ characterKey, team, label, setChar, autoCompleteProps = {} }:\n  { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<CharacterKey | \"\">, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\n  const isFavorite = useCallback((key: CharacterKey) => database.charMeta.get(key).favorite, [database])\n  const onDisable = useCallback(({ key }: { key: CharacterKey | \"\" }) => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\n    key: \"\",\n    label: t`page_character:none`,\n  },\n  ...database.chars.keys\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} getOptionDisabled={onDisable} toImg={toImg} {...autoCompleteProps} /></Suspense>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Slider, Stack, ToggleButton, Typography } from \"@mui/material\";\nimport { WeaponTypeKey } from \"pipeline\";\nimport { Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ColorText from \"../../../../Components/ColoredText\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponSelectionModal from \"../../../../Components/Weapon/WeaponSelectionModal\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/DataManagers/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n\n  const copyFrom = useCallback(\n    (eWeapon: ICachedWeapon, build: ICachedArtifact[]) => {\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      build.forEach(art => {\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat => {\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        })\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n      setData(newData)\n    },\n    [data, setData],\n  )\n  const location = useLocation()\n  const { build: locBuild } = (location.state as { build: string[] } | undefined) ?? { build: undefined }\n  useEffect(() => {\n    if (!locBuild) return\n    const eWeapon = database.weapons.get(character.equippedWeapon)!\n    copyFrom(eWeapon, locBuild.map(i => database.arts.get(i)!))\n    // WARNING: if copyFrom is included, it will cause a render loop due to its setData <---> data\n    // eslint-disable-next-line\n  }, [locBuild, database])\n\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      copyFrom(eWeapon, Object.values(character.equippedArtifacts).map(a => database.arts.get(a)!).filter(a => a))\n    },\n    [database, character.equippedArtifacts, character.equippedWeapon, copyFrom],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const deferredData = useDeferredValue(data)\n  const overriderArtData = useMemo(() => {\n    const stats = { ...deferredData.artifact.substats.stats }\n    Object.values(deferredData.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(deferredData.artifact.sets, v => constant(v)),\n    }\n  }, [deferredData])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n    }\n  }, [charUIData, teamData])\n  const dataContextValueWithOld: dataContextObj | undefined = useMemo(() => {\n    if (!dataContextValue) return undefined\n    return {\n      ...dataContextValue,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [dataContextValue, compareData, oldData])\n  return <Stack spacing={1}>\n    <CardLight>\n      <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n        <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n          <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n          <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n        </Box>\n        <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n          <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n          <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n        </SolidToggleButtonGroup>\n      </Box>\n    </CardLight>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n        <Grid item sx={{ flexGrow: -1 }}  >\n          <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n        </Grid>\n        <Grid item sx={{ flexGrow: 1 }}  >\n          <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\n        </Grid>\n      </Grid >\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    <CardLight sx={{ flexGrow: 1, p: 1 }}>\n      {dataContextValueWithOld ? <DataContext.Provider value={dataContextValueWithOld}>\n        <StatDisplayComponent />\n      </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    </CardLight>\n\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, mb: 1 }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} component={ListItem} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} >\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <Suspense fallback={<Skeleton variant='rectangular' width='100%' height={200} />}>\n      <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n    </Suspense>\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const [rolls, setRolls] = useState(() => value / substatValue)\n  useEffect(() => setRolls(value / substatValue), [value, substatValue])\n\n  const unit = KeyMap.unit(statKey)\n  const displayValue = rolls * substatValue\n\n  const rv = (rolls * substatValue) / Artifact.substatValue(statKey) * 100\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\n  const maxRolls = (5 - numMains) * 6\n  // 0.0001 to nudge float comparasion\n  const invalid = (rolls - 0.0001) > maxRolls\n  const setRValue = useCallback((r: number) => setValue(r * substatValue), [setValue, substatValue])\n\n  return <Stack spacing={0.5}>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n      </CardDark>\n      <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n          <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CustomNumberInput\n        color={displayValue ? \"success\" : \"primary\"}\n        float={KeyMap.unit(statKey) === \"%\"}\n        endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n        value={parseFloat(displayValue.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v)}\n        sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n        inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n      <CardDark sx={{ px: 2, flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Slider\n          size=\"small\"\n          value={rolls}\n          max={maxRolls}\n          min={0}\n          step={1}\n          marks\n          onChange={(e, v) => setRolls(v as number)}\n          onChangeCommitted={(e, v) => setRValue(v as number)}\n        />\n      </CardDark>\n      <CustomNumberInput\n        color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\n        float\n        startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n        value={parseFloat(rolls.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v * substatValue)}\n        sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n        inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    </Box>\n  </Stack>\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(() => database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, threshold, frac } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute, OptNode } from \"./optimization\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: OptNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: OptNode, binding: (readNode: ReadNode<number>) => string, diff: string): OptNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return frac(numerator, sum(prod(-1, numerator), denom))\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return threshold(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return threshold(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break;\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n      break;\n    case \"threshold\":\n      const [value, thr, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(thr, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return threshold(value, thr, ddx(pass, binding, diff), ddx(fail, binding, diff))\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15}, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1 as OptNode\n\n  const compute = precompute([formula2], {}, f => f.path[1], 1)\n\n  var result = compute([{ id: '', values: stats }])[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  var res2 = compute([{ id: '', values: stat2 }])[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  const c_dhp_ = precompute([dhp_], {}, f => f.path[1], 1)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  const c_dhp = precompute([dhp], {}, f => f.path[1], 1)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  const c_datk_ = precompute([datk_], {}, f => f.path[1], 1)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['atk'] = eps + (stat2['atk'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var datk = ddx(formula2, f => f.path[1], 'atk')\n  const c_datk = precompute([datk], {}, f => f.path[1], 1)\n  console.log('diff atk (numeric/symbolic)', (res2 - result) / eps, c_datk([{ id: '', values: stats }])[0])\n\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  const c_deleMas = precompute([deleMas], {}, f => f.path[1], 1)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas([{ id: '', values: stats }])[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, 5) / 1000 : Artifact.substatValue(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize, OptNode } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, art.rarity) / 1000 : Artifact.substatValue(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: OptNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: OptNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n\n  const evalFn = precompute(evalOpt, {}, f => f.path[1], 1)\n  let stats = toStats(curBuild)\n  const dmg0 = evalFn([{ id: '', values: stats }])[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    const out = evalFn([{ id: '', values: stats }])\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database.arts.get(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../TabOptimize/Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objectKeyMap, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { DynStat } from '../TabOptimize/common';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useFilters, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys, levelLow, levelHigh, artSetExclusion } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const equippedArts = database.chars.get(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    const curEquip: QueryBuild = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art ? toQueryArtifact(art) : undefined\n    })\n    const curEquipSetKeys = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art?.setKey ?? ''\n    })\n    function respectSexExclusion(art: ICachedArtifact) {\n      const newSK = { ...curEquipSetKeys }\n      newSK[art.slotKey] = art.setKey\n      const skc: DynStat = {}\n      allSlotKeys.forEach(slotKey => skc[newSK[slotKey]] = (skc[newSK[slotKey]] ?? 0) + 1)\n      let pass = Object.entries(skc).every(([setKey, num]) => {\n        if (!artSetExclusion[setKey]) return true\n        switch (num) {\n          case 0: case 1:\n            return true\n          case 2: case 3:\n            return !artSetExclusion[setKey].includes(2)\n          case 4: case 5:\n            return !artSetExclusion[setKey].includes(4)\n          default:\n            throw Error('error in respectSex: num > 5')\n        }\n      })\n      if (!pass) return false\n\n      if (!artSetExclusion['rainbow']) return true\n      const nRainbow = Object.values(skc).reduce((a, b) => a + (b % 2), 0)\n      switch (nRainbow) {\n        case 0: case 1:\n          return true\n        case 2: case 3:\n          return !artSetExclusion['rainbow'].includes(2)\n        case 4: case 5:\n          return !artSetExclusion['rainbow'].includes(4)\n        default:\n          throw Error('error in respectSex: nRainbow > 5')\n      }\n    }\n\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .filter(respectSexExclusion)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useFilters || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      .filter(art => !useFilters || (levelLow <= art.level && art.level <= levelHigh))\n      .map(art => toQueryArtifact(art, 20))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const nodesPreOpt = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    let nodes = optimize(nodesPreOpt, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useFilters, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useFilters && <CardLight>\n                <CardContent sx={{ py: 1 }}>\n                  Artifact Level Filter\n                </CardContent>\n                <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n                  setLow={levelLow => buildSettingDispatch({ levelLow })}\n                  setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n                  setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n                  disabled={false}\n                />\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              }\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useFilters ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useFilters ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useFilters)}>enable filters</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editorProps={{}} />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { stg } from '../../Data/SheetUtil';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\n\nexport default function TravelerElementSelect() {\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const setCharacter = useCharSelectionCallback()\n  if (!(key.startsWith(\"Traveler\"))) return null\n\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\n\n  return <DropdownButton color={elementKey} title={<strong>{stg(`element.${elementKey}`)}</strong>}>\n    {travelerElements.map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\n        <strong><ColorText color={eleKey}>{stg(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { Female, Male } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\n\nexport default function TravelerGenderSelect() {\n  const { t } = useTranslation(\"ui\")\n  const { database } = useContext(DatabaseContext)\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const { gender } = useDBMeta()\n  const toggleGender = useCallback(() => database.dbMeta.set({ gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\n  if (!(key.startsWith(\"Traveler\"))) return null\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport LevelSelect from '../../Components/LevelSelect';\nimport SqBadge from '../../Components/SqBadge';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\nimport TravelerElementSelect from './TravelerElementSelect';\nimport TravelerGenderSelect from './TravelerGenderSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const { database } = useContext(DatabaseContext)\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\n\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\n\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Box display=\"flex\" >\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n            <CharSelectDropdown />\n            <TravelerElementSelect />\n            <TravelerGenderSelect />\n            <DetailStatButton />\n            <CustomMultiTargetButton />\n            <FormulasButton />\n          </Box>\n          {!!onClose && <CloseButton onClick={onClose} />}\n        </Box>\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n          <HitModeToggle size=\"small\" />\n          <InfusionAuraDropdown />\n          <ReactionToggle size=\"small\" />\n        </Box>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <CharacterPanel />\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent></FormulaDataWrapper>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const { t } = useTranslation(\"page_character\")\n  const [open, onOpen, onClose] = useBoolState()\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const bStatsNum = Object.keys(bonusStats).length\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\n    </Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport { nodeVStr } from \"../Formula/uiData\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.name) return null\n            return <Box key={JSON.stringify(node.info)} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{node.info.icon} {node.info.name}</Typography>\n              <Typography>{nodeVStr(node)}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key, disableClearable: true }} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","KeyMap","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","nameRaw","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","WeaponSelectionModal","show","onHide","onSelect","weaponTypeFilter","weaponSheets","WeaponSheet","allWeaponTypeKeys","weaponFilter","setWeaponfilter","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","allWeaponKeys","wKey","weaponType","toLowerCase","open","onClose","py","container","spacing","item","autoFocus","target","InputProps","weaponKey","weaponSheet","lg","md","src","getImg","className","Assets","colored","large","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","nodeVStr","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","enemyOverride","EnemyResText","justifyContent","minWidth","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","href","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","JSON","stringify","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","n","miscStatReadNodes","StatDisplayCard","makeid","disallowed","characters","charactersLength","result","charAt","Math","floor","random","Error","readKey","operation","operands","accu","isShallow","f","deleteKey","base","flower","forEach","art","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","threshold","foldProd","constant","source","console","log","sum","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","some","toFold","orig","reduce","todistrib","mapped","pop","prod","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","push","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","NaN","reduceFormula","allStats","slotArts","rows","mat","dyn","record","Array","fill","selectedPivots","c","pivot","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","slotKey","allArtifactSets","con","sumM","monomials","flat","prodM","cartesian","monos","ret","nxt","terms","constantM","readM","tag","foldLikeTerms","mono","mon","termsA","termsB","ai","splice","expandPoly","inheritTags","varMap","tagMap","varTags","lookup","hsh","hashNode","z","cmpNode","next","newTag","stat2tag","sop","toSOP","slotsLeft","sCount","fromEntries","slotUsage","filterProductPossible","pivotInplace","A","Aij","findPiv1","minloc","cmp","findPiv2","minMax","compute","precompute","id","toLinearUpperBound","toPureRead","slope","mon1","intercept","op","flippedResOp","flipOps","resf","d","handleResArg","rop","cop","thresh","minVal","maxVal","em","denom","minEM","maxEM","loc","sqrt","below","nodesToMap","t2","nt","lins","err","bounds","nVar","boundScale","scaleProd","soln","cons","coords","objective","Ab","tableau","Ai","cj","ijTrack","ij","targ","side","ncol","backtrack","solveLP","slice","wi","lub","lin","constVal","pv","thresholdExclusions","excl","exc","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","pruneExclusion","maxValues","pass","fail","thres","forceRename","affineNodes","topLevelAffine","visit","isAffine","dynKeys","nonConst","assertUnreachable","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","objectMap","objectKeyMap","allSlotKeys","slot","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","newOperands","op1","op2","ranges","range","reads","computeMinMax","minMaxes","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","build","kind","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","setExclusionSet","slots","set4CondNums","setEffects","doc","defIconSrc","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","unit","alignContent","gender","useDBMeta","CharacterSheet","marginTop","BusinessCenter","OptimizationTargetContext","createContext","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","WeaponCardNano","weaponId","weapon","useWeapon","computeUIData","dataObjForWeapon","WeaponNameTooltip","hasRefinement","WeaponStat","BuildDisplayItem","compareBuild","extraButtonsRight","extraButtonsLeft","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","Checkroom","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","onEquip","containerProps","ArtifactCard","canExclude","canEquip","editorProps","disableSet","disableSlot","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","cursor","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","displayOptimize","tempEquipmentPriority","equipmentPriority","setTO","to","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","CharacterSelectionModal","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","mainStatVal","endsWith","substat","accurateValue","reduceSubProblem","subp","constraints","depth","filters","mins","maxw","minw","unionFilterUpperLower","tagNodePairs","reducedNodes","tagsToKill","newTerms","reducePolynomial","toNumNode","active","newOptTarget","newConstraints","newMins","newArtExcl","feasibleKeys","feasible4sets","feasible2sets","allowedCnts","cnt","reducedExcl","fi","wixs","ws","baseC","li","ixs0","w0","accum","ix","baseBuffer","buffer","ixsi","applyLinearForm","newFilters","filterVec","filterIxs","slotVals","filterArtsVec2","minww","maxww","slotUpperLowerVecW","cache","toArtifactBySlotVec","allKeysList","problemSetup","optimizationTargetNode","artSetExclFull","objectKeyValueMap","constraintsEP","opttargetEP","slotUL","slotUpperLowerVec","statsUpperLowerVec","minMaxEst","ixs","ww","baseVal","wtot","minMaxWeightVec","initialProblem","initialReducedProblem","poly","nodeVals","fk","termVals","evaluateExpandedPolynomial","TabBuild","compareData","buildStatus","setBuildStatus","setchartData","setArtsDirty","threads","defThreads","setDisplayOptimize","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","maxBuildsToShow","buildResult","setBuildResult","buildResultDispatch","useBuildResult","buildDate","teamData","useTeamData","cancelToken","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","numBuild","_count","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","unoptimizedOptimizationTargetNode","objPathValue","targetNode","valueFilter","cancelled","Promise","unoptimizedNodes","optimize","plotBaseNode","artsVec","masterInfo","ready","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","Worker","URL","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","DataContextWrapper","BuildItemWrapper","join","useLocation","navigate","useNavigate","toTC","paths","pathname","Science","dirty","setDirty","buildsArts","providerValue","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","extraButtons","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","setRarity","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","rvFilter","useCharMeta","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setRVFilter","charMeta","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","constellation","tlvl","auto","skill","burst","tBoost","favorite","Favorite","FavoriteBorder","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","autoCompleteProps","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","ThumbSide","pr","isFavorite","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","TabTheorycraft","defWeapon","charTCs","getWithInit","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFrom","eWeapon","newData","artifact","locBuild","copyFromEquipped","lock","setArtifact","data_","setSubstatsType","setSubstats","deferredData","overriderArtData","overrideWeapon","charUIData","dataContextValue","dataContextValueWithOld","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","setValue","deleteValue","rest","remaining","ArtifactSetEditor","disableClearable","shape","setName","DeleteForever","rv","substatType","ArtifactSubstatEditor","substatValue","setRolls","displayValue","numMains","ms","maxRolls","invalid","setRValue","parseFloat","Slider","zero_deriv","funct","binding","diff","ddx","ops","da","db","numerator","frac","arg1","arg2","thr","quadrinomials","quadrinomial","nextRow","prev","gaussPDF","mu","sig2","exp","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","slow","calc4th","newBuild","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","toEval","fo","evalOpt","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","artifacts","gaussConstrained","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","CustomTooltip","payload","aspect","margin","Label","offset","angle","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","dot","legendType","tooltipType","activeDot","ReferenceLine","ReferenceDot","radius","direction","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useFilters","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","arti","pageIdex","setpageIdex","invScrollRef","artifactsToShow","numPages","toShow","minObj0","maxObj0","ceil","currentPageIndex","setPage","zz","respectSexExclusion","newSK","curEquipSetKeys","skc","equippedArts","curEquip","nodesPreOpt","artUpOpt","upOpt","faCalculator","page","ShowingArt","numShowing","TravelerElementSelect","allElements","stg","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","dbMeta","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","tab","useTitle","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Calculate","bStatsNum","BarChart","onModalOpen","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","faEdit","faTrashAlt","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","replace","module","ex","ExitStatus","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","runCaller"],"sourceRoot":""}