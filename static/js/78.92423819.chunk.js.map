{"version":3,"file":"static/js/78.92423819.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactLevelSlider.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/ExpandButton.tsx","Components/TextButton.tsx","Data/Characters/dataUtil.tsx","Formula/reaction.ts","Components/StatInput.tsx","Components/EnemyEditor.tsx","Components/HitModeEditor.tsx","Formula/DisplayUtil.tsx","Components/Artifact/SetEffectDisplay.tsx","Components/Character/StatDisplayComponent.tsx","ReactHooks/useBoolState.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabEquip/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabEquip/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabEquip/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabEquip/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/BackgroundWorker.ts","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/OptimizationTargetSelector.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/DBState.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","ReactHooks/useWeapon.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts","../wasmpack/assembly.js"],"sourcesContent":["import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../CharacterContext';\nimport { DataContext } from '../../DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, CardHeader, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value ) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeader avatar={icon} title={displayTitle} action={action} titleTypographyProps={{ variant: \"subtitle2\" }} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { SubstatKey } from \"pipeline\";\nimport { input } from \"../../Formula\";\nimport { inferInfoMut, mergeData } from \"../../Formula/api\";\nimport { reactions } from \"../../Formula/reaction\";\nimport { Data, DisplaySub, NumNode } from \"../../Formula/type\";\nimport { constant, data, infoMut, lookup, percent, prod, stringPrio, subscript, sum, one } from \"../../Formula/utils\";\nimport { allMainStatKeys, MainStatKey } from \"../../Types/artifact\";\nimport { CharacterKey, ElementKey, Region } from \"../../Types/consts\";\nimport { layeredAssignment, objectKeyMap, objectMap } from \"../../Util/Util\";\nimport _charCurves from \"./expCurve_gen.json\";\n\n// TODO: Remove this conversion after changing the file format\nconst charCurves = objectMap(_charCurves, value => [0, ...Object.values(value)])\n\nconst commonBasic = objectKeyMap([\"hp\", \"atk\", \"def\", \"eleMas\", \"enerRech_\", \"critRate_\", \"critDMG_\", \"heal_\"], key => input.total[key])\n\nexport const infusionNode = stringPrio(\n  input.infusion.nonOverridableSelf,\n  input.infusion.team,\n  input.infusion.overridableSelf)\nconst inferredHitEle = stringPrio(\n  lookup(input.hit.move, {\n    \"skill\": input.charEle, \"burst\": input.charEle,\n  }, undefined),\n  lookup(input.weaponType, {\n    sword: infusionNode, claymore: infusionNode, polearm: infusionNode,\n    catalyst: input.charEle,\n  }, undefined),\n  \"physical\"\n)\n\nfunction getTalentType(move: \"normal\" | \"charged\" | \"plunging\" | \"skill\" | \"burst\") {\n  switch (move) {\n    case \"normal\": case \"charged\": case \"plunging\": return \"auto\";\n    case \"skill\": return \"skill\";\n    case \"burst\": return \"burst\";\n  }\n}\n\n/** Note: `additional` applies only to this formula */\nexport function customDmgNode(base: NumNode, move: \"normal\" | \"charged\" | \"plunging\" | \"skill\" | \"burst\" | \"elemental\", additional: Data = {}): NumNode {\n  return data(input.hit.dmg, mergeData([{\n    hit: { base, move: constant(move), ele: additional?.hit?.ele ? undefined : inferredHitEle },\n  }, additional]))\n}\n/** Note: `additional` applies only to this formula */\nexport function customShieldNode(base: NumNode, additional?: Data): NumNode {\n  const shieldNode = prod(base, sum(one, input.total.shield_))\n  return additional ? data(shieldNode, additional) : shieldNode\n}\n/** Note: `additional` applies only to this formula */\nexport function customHealNode(base: NumNode, additional?: Data): NumNode {\n  const healInc = input.total.healInc\n  const healNode = prod(sum(base, healInc), sum(one, input.total.heal_, input.total.incHeal_))\n\n  return additional ? data(healNode, additional) : healNode\n}\n/** Note: `additional` applies only to this formula */\nexport function dmgNode(base: MainStatKey | SubstatKey, lvlMultiplier: number[], move: \"normal\" | \"charged\" | \"plunging\" | \"skill\" | \"burst\", additional: Data = {}): NumNode {\n  const talentType = getTalentType(move)\n  return customDmgNode(prod(subscript(input.total[`${talentType}Index`], lvlMultiplier, { key: '_' }), input.total[base]), move, additional)\n}\n/** Note: `additional` applies only to this formula */\nexport function shieldNode(base: MainStatKey | SubstatKey, percent: NumNode | number, flat: NumNode | number, additional?: Data): NumNode {\n  return customShieldNode(sum(prod(percent, input.total[base]), flat), additional)\n}\n/** Note: `additional` applies only to this formula */\nexport function healNode(base: MainStatKey | SubstatKey, percent: NumNode | number, flat: NumNode | number, additional?: Data): NumNode {\n  return customHealNode(sum(prod(percent, input.total[base]), flat), additional)\n}\n/** Note: `additional` applies only to this formula */\nexport function shieldNodeTalent(base: MainStatKey | SubstatKey, baseMultiplier: number[], flat: number[], move: \"normal\" | \"charged\" | \"plunging\" | \"skill\" | \"burst\", additional?: Data): NumNode {\n  const talentType = getTalentType(move)\n  const talentIndex = input.total[`${talentType}Index`]\n  return customShieldNode(sum(\n    prod(subscript(talentIndex, baseMultiplier, { key: '_' }), input.total[base]),\n    subscript(talentIndex, flat)\n  ), additional)\n}\nexport function shieldElement(element: \"electro\" | \"cryo\" | \"hydro\" | \"pyro\" | \"geo\", shieldNode: NumNode) {\n  return infoMut(prod(percent(element === \"geo\" ? 1.5 : 2.5), shieldNode), { variant: element })\n}\n/** Note: `additional` applies only to this formula */\nexport function healNodeTalent(base: MainStatKey | SubstatKey, baseMultiplier: number[], flat: number[], move: \"normal\" | \"charged\" | \"plunging\" | \"skill\" | \"burst\", additional?: Data): NumNode {\n  const talentType = getTalentType(move)\n  const talentIndex = input.total[`${talentType}Index`]\n  return customHealNode(sum(\n    prod(subscript(talentIndex, baseMultiplier, { key: '_' }), input.total[base]),\n    subscript(talentIndex, flat)\n  ), additional)\n}\nexport function dataObjForCharacterSheet(\n  key: CharacterKey,\n  element: ElementKey | undefined,\n  region: Region | undefined,\n  gen: {\n    weaponTypeKey: string,\n    base: { hp: number, atk: number, def: number },\n    curves: { [key in string]?: string },\n    ascensions: { props: { [key in string]?: number } }[]\n  },\n  display: { [key: string]: DisplaySub },\n  additional: Data = {},\n): Data {\n  function curve(base: number, lvlCurve: string): NumNode {\n    return prod(base, subscript(input.lvl, charCurves[lvlCurve]))\n  }\n  display.basic = { ...commonBasic }\n  const data: Data = {\n    charKey: constant(key),\n    base: {},\n    weaponType: constant(gen.weaponTypeKey),\n    premod: {},\n    display,\n  }\n  if (element) {\n    data.charEle = constant(element)\n    data.teamBuff = { tally: { [element]: constant(1) } }\n    data.display!.basic[`${element}_dmg_`] = input.total[`${element}_dmg_`]\n    data.display!.reaction = reactions[element]\n  }\n  if (region)\n    layeredAssignment(data, [\"teamBuff\", \"tally\", region], constant(1))\n  if (gen.weaponTypeKey !== \"catalyst\") {\n    if (!data.display!.basic) data.display!.basic = {}\n    data.display!.basic!.physical_dmg_ = input.total.physical_dmg_\n  }\n\n  let foundSpecial: boolean | undefined\n  for (const stat of [...allMainStatKeys, \"def\" as const]) {\n    const list: NumNode[] = []\n    if (gen.curves[stat])\n      list.push(curve(gen.base[stat], gen.curves[stat]!))\n    const asc = gen.ascensions.some(x => x.props[stat])\n    if (asc)\n      list.push(subscript(input.asc, gen.ascensions.map(x => x.props[stat] ?? NaN)))\n\n    if (!list.length) continue\n\n    const result = infoMut(list.length === 1 ? list[0] : sum(...list), { key: stat, prefix: \"char\", asConst: true })\n    if (stat.endsWith(\"_dmg_\")) result.info!.variant = stat.slice(0, -5) as any\n    if (stat === \"atk\" || stat === \"def\" || stat === \"hp\")\n      data.base![stat] = result\n    else {\n      if (foundSpecial) throw new Error(\"Duplicated Char Special\")\n      foundSpecial = true\n      data.special = result\n      data.premod![stat] = input.special\n    }\n  }\n\n  return mergeData([data, inferInfoMut(additional)])\n}\n","import { transformativeReactions } from \"../KeyMap/StatConstants\";\nimport { absorbableEle } from \"../Types/consts\";\nimport { objectKeyMap } from \"../Util/Util\";\nimport { input } from \"./index\";\nimport { frac, infoMut, percent, prod, subscript, sum, one } from \"./utils\";\n\n// https://github.com/Dimbreath/GenshinData/blob/72c9112a7c5e8e5014f61009a1a2764e266aeab7/ExcelBinOutput/ElementCoeffExcelConfigData.json\n//   or if the permalink is dead,\n// https://github.com/Dimbreath/GenshinData/blob/master/ExcelBinOutput/ElementCoeffExcelConfigData.json\n//\n// PlayerElementLevelCo\nexport const transformativeReactionLevelMultipliers = [-1.0, // lvl 0\n  17.165606, 18.535048, 19.904854, 21.274902, 22.6454, 24.649612, 26.640642, 28.868587, 31.36768, 34.143345, 37.201, 40.66, 44.446667, 48.56352, 53.74848, 59.081898, 64.420044, 69.72446, 75.12314, 80.58478, 86.11203, 91.70374, 97.24463, 102.812645, 108.40956, 113.20169, 118.102905, 122.97932, 129.72733, 136.29291, 142.67085, 149.02902, 155.41699, 161.8255, 169.10631, 176.51808, 184.07274, 191.70952, 199.55692, 207.38205, 215.3989, 224.16566, 233.50217, 243.35057, 256.06308, 268.5435, 281.52606, 295.01364, 309.0672, 323.6016, 336.75754, 350.5303, 364.4827, 378.61917, 398.6004, 416.39825, 434.387, 452.95105, 472.60623, 492.8849, 513.56854, 539.1032, 565.51056, 592.53876, 624.4434, 651.47015, 679.4968, 707.79407, 736.67145, 765.64026, 794.7734, 824.67737, 851.1578, 877.74207, 914.2291, 946.74677, 979.4114, 1011.223, 1044.7917, 1077.4437, 1109.9976, 1142.9766, 1176.3695, 1210.1844, 1253.8357, 1288.9528, 1325.4841, 1363.4569, 1405.0974, 1446.8535]\n// PlayerShieldLevelCo\nexport const crystallizeLevelMultipliers = [-1.0, // lvl 0\n  91.1791, 98.707664, 106.23622, 113.76477, 121.29332, 128.82188, 136.35042, 143.87898, 151.40752, 158.93608, 169.99149, 181.07625, 192.19037, 204.0482, 215.939, 227.86275, 247.68594, 267.5421, 287.4312, 303.82642, 320.22522, 336.62762, 352.31927, 368.01093, 383.70255, 394.43237, 405.18146, 415.94992, 426.73764, 437.5447, 450.6, 463.7003, 476.84558, 491.1275, 502.55457, 514.0121, 531.4096, 549.9796, 568.5849, 584.9965, 605.67035, 626.3862, 646.0523, 665.7556, 685.4961, 700.8394, 723.3331, 745.8653, 768.4357, 786.79193, 809.5388, 832.32904, 855.16266, 878.0396, 899.4848, 919.362, 946.0396, 974.7642, 1003.5786, 1030.077, 1056.635, 1085.2463, 1113.9244, 1149.2587, 1178.0648, 1200.2238, 1227.6603, 1257.243, 1284.9174, 1314.7529, 1342.6652, 1372.7524, 1396.321, 1427.3124, 1458.3745, 1482.3358, 1511.9109, 1541.5493, 1569.1537, 1596.8143, 1622.4197, 1648.074, 1666.3761, 1684.6782, 1702.9803, 1726.1047, 1754.6715, 1785.8666, 1817.1375, 1851.0603]\n\n\nconst asConst = true as const\n\nconst crystallizeMulti1 = subscript(input.lvl, crystallizeLevelMultipliers)\nconst crystallizeElemas = prod(40 / 9, frac(input.total.eleMas, 1400))\nconst crystallizeHit = infoMut(prod(sum(one, /** + Crystallize bonus */ crystallizeElemas), crystallizeMulti1), { key: \"crystallize\", variant: \"geo\" })\n\nconst transMulti1 = subscript(input.lvl, transformativeReactionLevelMultipliers)\nconst transMulti2 = prod(16, frac(input.total.eleMas, 2000))\nconst trans = {\n  ...objectKeyMap([\"overloaded\", \"electrocharged\", \"superconduct\", \"shattered\"] as const, reaction => {\n    const { multi, variants: [ele] } = transformativeReactions[reaction]\n    return infoMut(prod(\n      infoMut(prod(multi, transMulti1), { asConst }),\n      sum(one, transMulti2, input.total[`${reaction}_dmg_`]),\n      input.enemy[`${ele}_resMulti`]),\n      { key: `${reaction}_hit`, variant: reaction })\n  }),\n  swirl: objectKeyMap(transformativeReactions.swirl.variants, ele => infoMut(\n    prod(\n      infoMut(prod(transformativeReactions.swirl.multi, transMulti1), { asConst }),\n      sum(one, transMulti2, input.total.swirl_dmg_),\n      input.enemy[`${ele}_resMulti`]),\n    { key: `${ele}_swirl_hit`, variant: ele }))\n}\nexport const reactions = {\n  anemo: {\n    electroSwirl: trans.swirl.electro,\n    pyroSwirl: trans.swirl.pyro,\n    cryoSwirl: trans.swirl.cryo,\n    hydroSwirl: trans.swirl.hydro,\n    shattered: trans.shattered,\n  },\n  geo: {\n    crystallize: crystallizeHit,\n    ...Object.fromEntries(absorbableEle.map(e => [`${e}Crystallize`,\n    infoMut(prod(percent(2.5), crystallizeHit), { key: `${e}_crystallize`, variant: e })])),\n    shattered: trans.shattered,\n  },\n  electro: {\n    overloaded: trans.overloaded,\n    electrocharged: trans.electrocharged,\n    superconduct: trans.superconduct,\n    shattered: trans.shattered,\n  },\n  hydro: {\n    electrocharged: trans.electrocharged,\n    shattered: trans.shattered,\n  },\n  pyro: {\n    overloaded: trans.overloaded,\n    shattered: trans.shattered,\n  },\n  cryo: {\n    superconduct: trans.superconduct,\n    shattered: trans.shattered,\n  },\n}\n","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ whiteSpace: \"nowrap\" }} >\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 30, flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { faCheckSquare, faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { ExpandMore } from \"@mui/icons-material\";\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport StatInput from \"./StatInput\";\nimport { DataContext } from \"../DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport KeyMap, { valueString } from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport { uncoloredEleIcons } from \"./StatIcon\";\nimport { CharacterContext } from \"../CharacterContext\";\n\nexport function EnemyExpandCard() {\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  return <CardLight>\n    <CardContent>\n      <Grid container>\n        <Grid item flexGrow={1} alignItems=\"center\">\n          <Grid container spacing={1}>\n            <Grid item>\n              <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\n            </Grid>\n            {allElementsWithPhy.map(element => <Grid item key={element}>\n              <Typography key={element} ><EnemyResText element={element} /></Typography>\n            </Grid>)}\n            <Grid item>\n              <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\n            </Grid>\n            <Grid item>\n              <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <ExpandButton\n            expand={expanded}\n            onClick={toggle}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n            size=\"small\"\n            sx={{ p: 0 }}\n          >\n            <ExpandMore />\n          </ExpandButton>\n        </Grid>\n      </Grid>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\n    <span >{uncoloredEleIcons[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} >\n            <FontAwesomeIcon icon={elementImmunity ? faCheckSquare : faSquare} className=\"fa-fw\" /> Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { Box, MenuItem, ToggleButton, ToggleButtonGroupProps } from \"@mui/material\";\nimport { useContext } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../CharacterContext\";\nimport { infusionNode } from \"../Data/Characters/dataUtil\";\nimport { DataContext } from \"../DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport { ElementKey } from \"../Types/consts\";\nimport ColorText from \"./ColoredText\";\nimport DropdownButton, { DropdownButtonProps } from \"./DropdownMenu/DropdownButton\";\nimport SolidToggleButtonGroup from \"./SolidToggleButtonGroup\";\nimport SqBadge from \"./SqBadge\";\nimport { uncoloredEleIcons } from \"./StatIcon\";\nconst infusionVals = {\n  \"\": <span>No Team Melee Infusion</span>,\n  \"pyro\": <span >{uncoloredEleIcons.pyro} <SqBadge>Bennett C6</SqBadge> Fire Ventures with Me</span>,\n  \"cryo\": <span >{uncoloredEleIcons.cryo} <SqBadge>Chongyun Skill</SqBadge> Spirit Blade: Chonghua's Layered Frost</span>,\n}\ntype InfusionAuraDropdownProps = Omit<DropdownButtonProps, \"title\" | \"onChange\" | \"children\">\nexport function InfusionAuraDropdown(props: InfusionAuraDropdownProps) {\n  const { characterSheet, character: { infusionAura }, characterDispatch } = useContext(CharacterContext)\n  if (!characterSheet?.isMelee()) return null\n  return <DropdownButton title={infusionVals[infusionAura]} color={infusionAura || \"secondary\"} disableElevation {...props}>\n    {Object.entries(infusionVals).map(([key, text]) =>\n      <MenuItem key={key} sx={key ? { color: `${key}.main` } : undefined}\n        selected={key === infusionAura} disabled={key === infusionAura}\n        onClick={() => characterDispatch({ infusionAura: key })}>{text}</MenuItem>)}\n  </DropdownButton>\n}\n\ntype ReactionToggleProps = Omit<ToggleButtonGroupProps, \"color\">\nconst sqBadgeStyle = { mx: 0.25, px: 0.25, fontSize: \"1em\" }\nexport function ReactionToggle(props: ReactionToggleProps) {\n  const { character: { reactionMode }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const charEleKey = data.get(input.charEle).value as ElementKey\n  const infusion = data.get(infusionNode).value as ElementKey\n  if (![\"pyro\", \"hydro\", \"cryo\"].includes(charEleKey) && ![\"pyro\", \"hydro\", \"cryo\"].includes(infusion)) return null\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\n    value={reactionMode} onChange={(_, reactionMode) => characterDispatch({ reactionMode })} {...props}>\n    <ToggleButton value=\"\" disabled={reactionMode === \"\"} >No Reactions</ToggleButton >\n    {(charEleKey === \"pyro\" || infusion === \"pyro\") && <ToggleButton value=\"pyro_vaporize\" disabled={reactionMode === \"pyro_vaporize\"}>\n      <ColorText color=\"vaporize\">\n        Vaporize(Pyro)\n      </ColorText>\n      <Box display=\"flex\" alignItems=\"center\">\n        <SqBadge sx={sqBadgeStyle} color=\"hydro\">{uncoloredEleIcons.hydro}</SqBadge>\n        +\n        <SqBadge sx={sqBadgeStyle} color=\"pyro\">{uncoloredEleIcons.pyro}</SqBadge>\n      </Box>\n    </ToggleButton >}\n    {(charEleKey === \"pyro\" || infusion === \"pyro\") && <ToggleButton value={\"pyro_melt\"} disabled={reactionMode === \"pyro_melt\"}>\n      <ColorText color=\"melt\">\n        Melt(Pyro)\n      </ColorText>\n      <Box display=\"flex\" alignItems=\"center\">\n        <SqBadge sx={sqBadgeStyle} color=\"cryo\">{uncoloredEleIcons.cryo}</SqBadge>\n        +\n        <SqBadge sx={sqBadgeStyle} color=\"pyro\">{uncoloredEleIcons.pyro}</SqBadge>\n      </Box>\n    </ToggleButton >}\n    {(charEleKey === \"hydro\" || infusion === \"hydro\") && <ToggleButton value={\"hydro_vaporize\"} disabled={reactionMode === \"hydro_vaporize\"}>\n      <ColorText color=\"vaporize\">\n        Vaporize(Hydro)\n      </ColorText>\n      <Box display=\"flex\" alignItems=\"center\">\n        <SqBadge sx={sqBadgeStyle} color=\"pyro\">{uncoloredEleIcons.pyro}</SqBadge>\n        +\n        <SqBadge sx={sqBadgeStyle} color=\"hydro\">{uncoloredEleIcons.hydro}</SqBadge>\n      </Box>\n    </ToggleButton >}\n    {(charEleKey === \"cryo\" || infusion === \"cryo\") && <ToggleButton value={\"cryo_melt\"} disabled={reactionMode === \"cryo_melt\"}>\n      <ColorText color=\"melt\">\n        Melt(Cryo)\n      </ColorText>\n      <Box display=\"flex\" alignItems=\"center\">\n        <SqBadge sx={sqBadgeStyle} color=\"pyro\">{uncoloredEleIcons.pyro}</SqBadge>\n        +\n        <SqBadge sx={sqBadgeStyle} color=\"cryo\">{uncoloredEleIcons.cryo}</SqBadge>\n      </Box>\n    </ToggleButton >}\n  </SolidToggleButtonGroup>\n}\ntype HitModeToggleProps = Omit<ToggleButtonGroupProps, \"color\">\nexport function HitModeToggle(props: HitModeToggleProps) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { hitMode }, characterDispatch } = useContext(CharacterContext)\n  return <SolidToggleButtonGroup exclusive baseColor=\"secondary\"\n    value={hitMode} onChange={(_, hitMode) => characterDispatch({ hitMode })} {...props} >\n    <ToggleButton value=\"avgHit\" disabled={hitMode === \"avgHit\"}>Avg. DMG</ToggleButton>\n    <ToggleButton value=\"hit\" disabled={hitMode === \"hit\"}>Non Crit DMG</ToggleButton>\n    <ToggleButton value=\"critHit\" disabled={hitMode === \"critHit\"}>Crit Hit DMG</ToggleButton>\n  </SolidToggleButtonGroup>\n}\n","import { Typography } from \"@mui/material\";\nimport { input } from \".\";\nimport { ArtifactSheet } from \"../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\";\nimport ColorText from \"../Components/ColoredText\";\nimport SqBadge from \"../Components/SqBadge\";\nimport { ArtifactSetKey, CharacterKey, ElementKey, WeaponKey } from \"../Types/consts\";\nimport { range } from \"../Util/Util\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { DisplaySub } from \"./type\";\nimport { NodeDisplay, UIData } from \"./uiData\";\n\nconst errHeader = {\n  title: <ColorText color=\"warning\">ERROR</ColorText>\n}\n\nconst talentMap = {\n  normal: \"Normal Atk.\",\n  charged: \"Charged Atk.\",\n  plunging: \"Plunging Atk.\",\n  skill: \"Ele. Skill\",\n  burst: \"Ele. Burst\",\n  passive: \"Passive\",\n  passive1: \"1st Asc. Pass.\",\n  passive2: \"4th Asc. Pass.\",\n  passive3: \"Util. Pass.\",\n  ...Object.fromEntries(range(1, 6).map(i => [`constellation${i}`, `Const. ${i}`]))\n}\nexport async function getDisplayHeader(data: UIData, sectionKey: string): Promise<{\n  title: Displayable,\n  icon?: string,\n  action?: Displayable\n}> {\n  if (!sectionKey) return errHeader\n  if (sectionKey === \"basic\") return { title: \"Basic Stats\" }\n  else if (sectionKey === \"reaction\") return { title: \"Transformative Reactions\" }\n  else if (sectionKey.includes(\":\")) {\n    const [namespace, key] = sectionKey.split(\":\")\n    if (namespace === \"artifact\") {\n      const sheet = await ArtifactSheet.get(key as ArtifactSetKey)\n      if (!sheet) return errHeader\n      return {\n        title: sheet.name,\n        icon: sheet.defIconSrc\n      }\n    } else if (namespace === \"weapon\") {\n      const sheet = await WeaponSheet.get(key as WeaponKey)\n      if (!sheet) return errHeader\n      const asc = data.get(input.weapon.asc).value\n      return {\n        title: sheet.name,\n        icon: sheet.getImg(asc)\n      }\n    }\n  } else {\n    const cKey = data.get(input.charKey).value\n    const cEle = data.get(input.charEle).value\n    if (!cKey || !cEle) return errHeader\n    const sheet = await CharacterSheet.get(cKey as CharacterKey)\n    const talentKey = [\"normal\", \"charged\", \"plunging\"].includes(sectionKey) ? \"auto\" : sectionKey\n    const talent = sheet?.getTalentOfKey(talentKey as any, cEle as ElementKey)\n    if (!talent) return errHeader\n    const actionText = talentMap[sectionKey]\n    return {\n      icon: talent.img,\n      title: talent.name,\n      action: actionText ? <SqBadge ><Typography variant=\"subtitle2\">{actionText}</Typography></SqBadge> : undefined\n    }\n  }\n  return errHeader\n}\n/**\n * Use this function to reorganize the sections to have basic stats at the beginning, and reation at the end.\n * @param data\n * @returns\n */\nexport function getDisplaySections(data: UIData,): [string, DisplaySub<NodeDisplay>][] {\n  const display = data.getDisplay()\n  const sections = Object.entries(display).filter(([key, nodes]) => !Object.values(nodes).every(x => x.isEmpty))\n  const basic = sections.filter(([k]) => k === \"basic\")\n  const reaction = sections.filter(([k]) => k === \"reaction\")\n  const weapon = sections.filter(([k]) => k.startsWith(\"weapon\"))\n  const artifact = sections.filter(([k]) => k.startsWith(\"artifact\"))\n  const rest = sections.filter(([k]) => k !== \"basic\" && k !== \"reaction\" && !k.startsWith(\"weapon\") && !k.startsWith(\"artifact\"))\n\n  return [\n    ...basic,\n    ...rest,\n    ...weapon,\n    ...artifact,\n    ...reaction\n  ]\n}\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { Masonry } from \"@mui/lab\"\nimport { CardContent, CardHeader, Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport CardDark from \"../Card/CardDark\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport { DataContext } from \"../../DataContext\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = getDisplaySections(data)\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data, oldData } = useContext(DataContext)\n  const header = usePromise(getDisplayHeader(data, sectionKey), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeader avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action} titleTypographyProps={{ variant: \"subtitle1\" }} />\n    <Divider />\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <FieldDisplayList sx={{ m: 0 }}>\n        {Object.entries(displayNs).map(([nodeKey, n]) => <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem} />)}\n      </FieldDisplayList>\n    </CardContent>\n  </CardDark>\n}\n","import { useCallback, useState } from \"react\"\n\nexport default function useBoolState(initial: boolean = false) {\n  const [bool, setBool] = useState(initial)\n  const onTrue = useCallback(() => setBool(true), [setBool],)\n  const onFalse = useCallback(() => setBool(false), [setBool],)\n  return [bool, onTrue, onFalse] as [boolean, () => void, () => void]\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon, { uncoloredEleIcons } from \"../StatIcon\";\nimport ArtifactSetSlotTooltip from \"./ArtifactSetSlotTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const sheet = usePromise(ArtifactSheet.get(art?.setKey), [art])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const levelVariant = \"roll\" + (Math.floor(Math.max(level, 0) / 4) + 1)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactSetSlotTooltip slotKey={slotKey} sheet={sheet}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactSetSlotTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={levelVariant as any} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{KeyMap.getArtStr(mainStatKey)}</Typography>} disableInteractive>\n              <span>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && KeyMap.getArtStr(stat.key)}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }) {\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from \"../../KeyMap\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon from \"../StatIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\n        <span>{StatIcon[node.info.key]}</span>\n      </BootstrapTooltip>\n      <span>{val}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }) {\n  const characterSheet = usePromise(CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport { CharacterContext } from '../../../../../CharacterContext';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext } from '../../../../../DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../BuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtons?: JSX.Element\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\n    database.equipArtifacts(characterKey, newBuild)\n    database.setWeaponLocation(data.get(input.weapon.id).value!, characterKey)\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  if (!artifactSheets || !oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          {(Object.entries(setToSlots) as [ArtifactSetKey, SlotKey[]][]).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n            <Box key={key}><SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n              {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheets?.[key].name ?? \"\"}\n            </Typography></SqBadge></Box>\n          )}\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\n          {extraButtons}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }}>\n          <Grid item xs={6} sm={4} md={3} lg={2}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {allSlotKeys.map(slotKey =>\n            <Grid item xs={6} sm={4} md={3} lg={2} key={slotKey} >\n              <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n                const oldId = equippedArtifacts[slotKey]\n                const newId = data.get(input.art[slotKey].id).value!\n                setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n              }} />\n            </Grid>)}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} disableEditSetSlot canExclude canEquip /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><CardLight sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></CardLight></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} disableEditSetSlot canExclude canEquip /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/BuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database._getArt(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database._getArt(id))\n    return Object.values(artmap)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database._getWeapon(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n        {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n          <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n        </DataContext.Provider>}\n      </Suspense>\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.followAnyArt(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database._getArts().filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, ToggleButton, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { Stars } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.followAnyWeapon(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\n\n  const filterConfigs = useMemo(() => weaponSheets && weaponFilterConfigs(weaponSheets), [weaponSheets])\n  const sortConfigs = useMemo(() => weaponSheets && weaponSortConfigs(weaponSheets), [weaponSheets])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n\n  const weaponIdList = useMemo(() => (filterConfigs && sortConfigs && dbDirty && database._getWeapons()\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity }, filterConfigs))\n    .sort(sortFunction(\"level\", false, sortConfigs))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, filterConfigs, sortConfigs, rarity, weaponTypeKey])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Box mb={1}>\n          <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n            {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n              <Box display=\"flex\" gap={1}><strong>{star}</strong><Stars stars={1} /></Box>\n            </ToggleButton>)}\n          </SolidToggleButtonGroup>\n        </Box>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../CharacterContext';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../Components/Character/StatDisplayComponent';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../DataContext';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSlotKeys, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { objectKeyMap } from '../../../../Util/Util';\nimport useBuildSetting from '../TabOptimize/BuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nfunction TabEquip() {\n  const { t } = useTranslation(\"page_character\")\n  const { character, character: { equippedWeapon, key: characterKey, equippedArtifacts }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const { weaponSheet } = teamData[characterKey]!\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const { database } = useContext(DatabaseContext)\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\n\n  // TODO: We can also listen only to equipped artifacts\n  const [, updateArt] = useForceUpdate()\n  useEffect(() => database.followAnyArt(updateArt))\n\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    database.equipArtifacts(character.key, objectKeyMap(allSlotKeys, _ => \"\"))\n  }, [character, database])\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n\n  const theme = useTheme();\n  const grxl = useMediaQuery(theme.breakpoints.up('xl'));\n  const artifactFields = useMemo(() => artifactSheets && setEffects && Object.entries(setEffects).map(([setKey, setNumKeyArr]) =>\n    <CardLight key={setKey} sx={{ flexGrow: 1, }} >\n      <CardContent >\n        <Grid container spacing={1} flexDirection=\"column\" height=\"100%\" >\n          <Grid item display=\"flex\" flexDirection=\"column\" gap={2}>\n            {setNumKeyArr.map(setNumKey => <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />)}\n          </Grid>\n        </Grid>\n      </CardContent>\n    </CardLight>), [artifactSheets, setEffects])\n  const weaponDoc = useMemo(() => weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <CardLight >\n      <CardContent>\n        <StatDisplayComponent />\n      </CardContent>\n    </CardLight>\n    <Grid container spacing={1}>\n      {grxl && <Grid item xs={12} md={12} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc}\n        {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth>{t`tabEquip.unequipArts`}</Button>}\n        {artifactFields}\n      </Grid>}\n      <Grid item xs={12} md={12} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!grxl && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth>{t`tabEquip.unequipArts`}</Button>}\n          {artifactFields}\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nexport default TabEquip\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.setArtLocation(id, characterKey)} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, characterKey)} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.setWeaponLocation(id, characterKey)} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.setArtLocation(id, characterKey)} />\n  </>\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BackgroundWorker.923d20f2.worker.js\");\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { cmp, constant, prod, sum } from './utils';\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: NumNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: NumNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return cmp(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands]) as NumNode[]\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands]) as NumNode[]\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: NumNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: NumNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, cmp(br2, bv2, left, right))\n            return cmp(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(cmp(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode } from \"./type\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { ArtSetExclusion } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/BuildSetting\"\n\nexport function foldSum(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) return sum(...nodes)\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: NumNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  // f2 = optimize(f2, {})\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: NumNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return cmp(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, NumNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: NumNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, NumNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: NumNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n as NumNode)\n  })\n\n  function toSOP(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","import { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\nimport type { ArtSetExclusion } from \"./BuildSetting\";\n\ntype DynMinMax = { [key in string]: MinMax }\ntype MinMax = { min: number, max: number }\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\n\n  function visit(node: NumNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(_op => {\n      const op = _op as NumNode\n      affineNodes.has(op) && topLevelAffine.add(op)\n    })\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const operation = f.operation\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\":\n        if (typeof f.value === \"string\" || f.value === undefined)\n          throw new Error(`Found constant ${f.value} while compacting`)\n        visit(f as NumNode, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return constant(0)\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\n  const range = new Map<NumNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, _f => {\n    const f = _f as NumNode\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"subscript\": current = computeMinMax(f.list); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = computeMinMax([0])\n        else current = computeMinMax([0], [operands[2]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      case \"data\": case \"lookup\": case \"match\":\n        throw new Error(`Unsupported ${operation} node`)\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\n\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { Stars } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../BuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.followAnyArt(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database._getArts().map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => fakeData(dataContext), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`tabOptimize.artSetConfig.title`}</strong>\n        </Typography>\n        <Typography>{t`tabOptimize.artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.enabled\")}</SqBadge></Typography>\n        <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n        <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n        <Typography>{t`tabOptimize.artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        <Typography>{t`tabOptimize.artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`tabOptimize.artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`tabOptimize.artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`tabOptimize.artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`tabOptimize.artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets[setKey]} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\" }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <Stars stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={1} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle1\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)} {count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\nfunction fakeData(currentContext: dataContextObj): dataContextObj {\n  return {\n    ...currentContext,\n    data: new UIData({ ...currentContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"tabOptimize.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl }) : t(\"tabOptimize.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\" >Optimization Target vs</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton title={plotBase ? KeyMap.get(plotBase) : \"Not Selected\"}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>Unselect</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>Show Min Stat Threshold</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>Download Data</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name=\"Optimization Target\" dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name=\"Minimum Stat Requirement Threshold\" dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../CharacterContext';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport StatIcon, { uncoloredEleIcons } from '../../../../../Components/StatIcon';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport KeyMap from '../../../../../KeyMap';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../BuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={i < 3 ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong>{KeyMap.getArtStr(mainStatKey)}</strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Masonry } from '@mui/lab';\nimport { Button, CardContent, CardHeader, Divider, MenuItem, MenuList, styled } from '@mui/material';\nimport React, { useCallback, useContext, useState } from 'react';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport ColorText from '../../../../../Components/ColoredText';\nimport ImgIcon from '../../../../../Components/Image/ImgIcon';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport { DataContext } from '../../../../../DataContext';\nimport { getDisplayHeader, getDisplaySections } from '../../../../../Formula/DisplayUtil';\nimport { DisplaySub } from '../../../../../Formula/type';\nimport { NodeDisplay } from '../../../../../Formula/uiData';\nimport KeyMap from '../../../../../KeyMap';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { objPathValue } from '../../../../../Util/Util';\n\nconst WhiteButton = styled(Button)({\n  color: \"black\",\n  backgroundColor: \"white\",\n  \"&:hover\": {\n    backgroundColor: \"#e1e1e1\",\n  }\n})\nexport default function OptimizationTargetSelector({ optimizationTarget, setTarget, disabled = false }: {\n  optimizationTarget?: string[], setTarget: (target: string[]) => void, disabled\n}) {\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => !disabled && setOpen(true), [setOpen, disabled])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n\n  const setTargetHandler = useCallback(\n    (target: string[]) => {\n      onClose()\n      setTarget(target)\n    },\n    [onClose, setTarget],\n  )\n  const { data } = useContext(DataContext)\n  const sections = getDisplaySections(data)\n  return <>\n    <WhiteButton onClick={onOpen} disabled={disabled} >\n      <TargetDisplayText optimizationTarget={optimizationTarget} />\n    </WhiteButton>\n    <ModalWrapper open={open} onClose={onClose}>\n      <CardDark >\n        <CardContent>\n          <Masonry columns={{ xs: 1, sm: 2, md: 3 }} spacing={1}>\n            {sections.map(([key, Nodes]) =>\n              <SelectorSection key={key} displayNs={Nodes} sectionKey={key} setTarget={setTargetHandler} />)}\n          </Masonry >\n        </CardContent>\n      </CardDark>\n    </ModalWrapper>\n  </>\n}\nfunction SelectorSection({ displayNs, sectionKey, setTarget }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string, setTarget: (target: string[]) => void }) {\n  const { data } = useContext(DataContext)\n  const header = usePromise(getDisplayHeader(data, sectionKey), [data, sectionKey])\n  return <CardLight key={sectionKey as string}>\n    {header && <CardHeader avatar={header.icon && <ImgIcon size={2} sx={{ m: -1 }} src={header.icon} />} title={header.title} action={header.action} titleTypographyProps={{ variant: \"subtitle1\" }} />}\n    <Divider />\n    <MenuList>\n      {Object.entries(displayNs).map(([key, n]) =>\n        <TargetSelectorMenuItem key={key} node={n} onClick={() => setTarget([sectionKey, key])} />)}\n    </MenuList>\n  </CardLight>\n}\nfunction NoTarget() {\n  return <b>Select an Optimization Target</b>\n}\nfunction TargetDisplayText({ optimizationTarget }: { optimizationTarget?: string[] }) {\n  const { data } = useContext(DataContext)\n  const displayHeader = usePromise(optimizationTarget && getDisplayHeader(data, optimizationTarget[0]), [data, optimizationTarget])\n\n  if (!optimizationTarget || !displayHeader) return <NoTarget />\n  const node: NodeDisplay | undefined = objPathValue(data.getDisplay(), optimizationTarget) as any\n  if (!node) return <NoTarget />\n\n  return <b>{displayHeader.title} : {<ColorText color={node.info.variant}>{KeyMap.get(node.info.key)}</ColorText>}</b>\n}\nfunction TargetSelectorMenuItem({ node, onClick }: { node: NodeDisplay, onClick: () => void }) {\n  if (node.isEmpty) return null\n  return <MenuItem onClick={onClick} style={{ overflow: \"hidden\", textOverflow: \"ellipsis\" }}>\n    <ColorText color={node.info.variant} >{KeyMap.get(node.info.key)}</ColorText>\n  </MenuItem>\n}\n","import useDBState from \"../../../../ReactHooks/useDBState\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport const defThreads = navigator.hardwareConcurrency || 4\n\nexport function initialTabOptimizeDBState(): {\n  equipmentPriority: CharacterKey[],\n  threads: number,\n} {\n  return {\n    equipmentPriority: [],\n    threads: defThreads\n  }\n}\n\nexport function useOptimizeDBState() {\n  return useDBState(\"TabOptimize\", initialTabOptimizeDBState)\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../CharacterContext\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport { CharacterSelectionModal } from \"../../../../../Components/Character/CharacterSelectionModal\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../BuildSetting\";\nimport { useOptimizeDBState } from \"../DBState\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useOptimizeDBState()\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database._getChar(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database._getCharKeys().length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database._getCharKeys().length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\"><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.title\">Character Priority for Equipped Artifacts</Trans></Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"tabOptimize.useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database._getArt(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../BuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database._getArts().reduce((a, art) => a + (art.exclude ? 1 : 0), 0), [database, artsDirty])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"tabOptimize.useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Close } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink } from 'react-router-dom';\n// eslint-disable-next-line\nimport Worker from \"worker-loader!./BackgroundWorker\";\nimport { CharacterContext } from '../../../../CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport StatFilterCard from '../../../../Components/StatFilterCard';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { expandPoly } from '../../../../Formula/expandPoly';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport { initGlobalSettings } from '../../../../GlobalSettings';\nimport KeyMap from '../../../../KeyMap';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useDBState from '../../../../ReactHooks/useDBState';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { CharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, SubProblem, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport useBuildSetting from './BuildSetting';\nimport { Build, countBuilds, emptyfilter, filterArts, mergeBuilds, mergePlot, pruneAll } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { defThreads, useOptimizeDBState } from './DBState';\nimport { compactArtifacts, dynamicData } from './foreground';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useOptimizeDBState()\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database._getArts().length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database._getArt(i)!)), [builds, database])\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.followAnyArt(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: CharacterKey[] = []\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) cantTakeList = [...equipmentPriority]\n      else cantTakeList = equipmentPriority.slice(0, index)\n    }\n    const filteredArts = database._getArts().filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === characterKey) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.includes(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    const targetNode = optimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      nodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // Can be further folded after pruning\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    optimizationTargetNode = nodes.pop()!\n\n    // var outcnt = 0\n    // forEachNodes([optimizationTargetNode], _ => { }, n => outcnt++)\n    // console.log('Original count', outcnt)\n    // debugHorny(expandPoly(optimizationTargetNode))\n    // debugMe(optimizationTargetNode, arts)\n    // console.log('artSetExclusion', artSetExclusion)\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const filters = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const filtersEP = nodes\n      .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const initialProblem: SubProblem = {\n      cache: false,\n      optimizationTarget: expandPoly(optimizationTargetNode),\n      constraints: filtersEP,\n      artSetExclusion: artSetExclFull,\n\n      filter: emptyfilter,\n      depth: 0,\n    }\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 10\n    const minFilterCount = 2_000 // Don't split for single worker\n    const maxRequestFilterInFlight = maxWorkers * 4\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1] }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1], subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker()\n      workers.push(worker)\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues.push(...data.buildValues)\n              wrap.buildValues.sort((a, b) => b - a).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>Main Stat</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Typography><strong>Level Assumption</strong> changes mainstat value to be at least a specific level. Does not change substats.</Typography>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`tabOptimize.allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent sx={{ py: 1 }}>\n              Artifact Level Filter\n            </CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<FontAwesomeIcon icon={faCalculator} />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      {tcMode && <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>}\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>\n                <small>Show New artifact Stats</small>\n              </ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>\n                <small>Compare against equipped artifacts</small>\n              </ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n      <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} />\n    </DataContext.Provider>}\n  </Box>\n}\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled }: {\n  buildsArts: ICachedArtifact[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {buildsArts?.map((build, index) => characterKey && data && <DataContextWrapper\n      key={index + build.join()}\n      characterKey={characterKey}\n      build={build}\n      oldData={data}\n    >\n      <BuildDisplayItem index={index} compareBuild={compareData} disabled={disabled} />\n    </DataContextWrapper>\n    )}\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled])\n  return list\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: ICachedArtifact[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n","import { faEdit, faSave } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, Button, CardActionArea, CardContent, Divider, Grid, IconButton, Typography } from \"@mui/material\";\nimport React, { useContext, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport ImgIcon from \"../../../Components/Image/ImgIcon\";\nimport { Stars } from \"../../../Components/StarDisplay\";\nimport StatIcon from \"../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../Components/Weapon/WeaponCardNano\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { DataContext } from \"../../../DataContext\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { ReadNode } from \"../../../Formula/type\";\nimport KeyMap, { valueString } from \"../../../KeyMap\";\nimport { amplifyingReactions, transformativeReactions } from \"../../../KeyMap/StatConstants\";\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { TalentSheetElementKey } from \"../../../Types/character\";\nimport { allElementsWithPhy, allSlotKeys, ElementKey } from \"../../../Types/consts\";\nimport { range } from \"../../../Util/Util\";\nimport CharacterCardPico from \"../../../Components/Character/CharacterCardPico\";\nimport StatInput from \"../../../Components/StatInput\";\nimport { CharacterContext } from \"../../../CharacterContext\";\n\nexport default function TabOverview() {\n  const { characterSheet, character: { key: characterKey, favorite, equippedWeapon, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const { t } = useTranslation(\"page_character\")\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  return <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n    <Grid item xs={8} sm={5} md={4} lg={2.5}  >\n      {/* Image card with star and name and level */}\n      <CardLight >\n        <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n        <CardContent>\n          <Typography variant=\"h5\" >\n            {characterSheet.name}&nbsp;\n            <ImgIcon sx={{ pr: 0.5 }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n            {StatIcon[charEle]}\n            <IconButton sx={{ p: 0.5, mt: -0.5 }} onClick={() => characterDispatch({ favorite: !favorite })}>\n              {favorite ? <Favorite /> : <FavoriteBorder />}\n            </IconButton>\n          </Typography>\n          <Typography variant=\"h6\"><Stars stars={characterSheet.rarity} colored /></Typography>\n          <Typography variant=\"h5\">Lvl. {CharacterSheet.getLevelString(level, ascension)}</Typography>\n          <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n            <Grid container spacing={1} mt={-1}>\n              {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n                <Grid item xs={4} key={tKey}>\n                  <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                    overlap=\"circular\"\n                    anchorOrigin={{\n                      vertical: 'bottom',\n                      horizontal: 'right',\n                    }}\n                    sx={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      \"& > .MuiBadge-badge\": {\n                        fontSize: \"1.25em\",\n                        padding: \".25em .4em\",\n                        borderRadius: \".5em\",\n                        lineHeight: 1,\n                        height: \"1.25em\"\n                      }\n                    }}>\n                    <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\n                  </Badge>\n                </Grid>)}\n            </Grid>\n          </CardActionArea>\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n          <Grid container spacing={1}>\n            {range(1, 6).map(i =>\n              <Grid item xs={4} key={i}>\n                <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n                  <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\n                    sx={{\n                      ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                    }}\n                    width=\"100%\" height=\"auto\" />\n                </CardActionArea>\n              </Grid>)}\n          </Grid>\n          <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{t(\"teammates\")}</Typography>\n          <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n            <Grid container columns={3} spacing={1}>\n              {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n            </Grid>\n          </CardActionArea>\n        </CardContent>\n      </CardLight>\n    </Grid>\n    <Grid item xs={12} sm={7} md={8} lg={9.5} sx={{\n      display: \"flex\", flexDirection: \"column\", gap: 1\n    }} >\n      <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 4, xl: 6 }}>\n        <Grid item xs={1}>\n          <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={() => navigate(\"equip\")} />\n        </Grid>\n        {allSlotKeys.map(slotKey =>\n          <Grid item key={slotKey} xs={1} >\n            <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={() => navigate(\"equip\")} />\n          </Grid>)}\n      </Grid>\n      <MainStatsCards />\n    </Grid>\n  </Grid >\n}\nconst EDIT = \"Edit Stats\"\nconst EXIT = \"EXIT\"\n\nconst mainBaseKeys = [\"atk\", \"hp\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatReadNodes = [\n  ...allElementsWithPhy.map(ele => input.total[`${ele}_dmg_`]),\n  ...allElementsWithPhy.map(ele => input.total[`${ele}_res_`]),\n  ...([\"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"] as const).map(x => input.total[x])\n]\nconst otherStatKeys = otherStatReadNodes.map(x => x.info!.key!)\n\nconst miscStatReadNodes = [\n  input.total.all_dmg_,\n  ...allElementsWithPhy.map(x => input.total[`${x}_enemyRes_`]),\n  input.total.normal_dmg_, input.total.normal_critRate_,\n  input.total.charged_dmg_, input.total.charged_critRate_,\n  input.total.plunging_dmg_, input.total.plunging_critRate_,\n  input.total.skill_dmg_, input.total.skill_critRate_,\n  input.total.burst_dmg_, input.total.burst_critRate_,\n  ...Object.keys(transformativeReactions).map(x => input.total[`${x}_dmg_`]),\n  ...Object.keys(amplifyingReactions).map(x => input.total[`${x}_dmg_`]),\n  ...([\"moveSPD_\", \"atkSPD_\", \"weakspotDMG_\"] as const).map(x => input.total[x]),\n  input.total.dmgRed_\n]\nconst miscStatkeys = miscStatReadNodes.map(x => x.info!.key!)\n\nconst statBreakpoint = {\n  xs: 12, sm: 12, md: 6, lg: 4,\n} as const\n\nfunction StatDisplayContent({ nodes, statBreakpoint, extra }: { nodes: ReadNode<number>[], statBreakpoint: object, extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <Grid container columnSpacing={{ xs: 2, lg: 3 }} rowSpacing={1}>\n    {nodes.map(rn => <Grid item key={rn.info?.key} {...statBreakpoint} >\n      {<NodeFieldDisplay node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />}\n    </Grid>)}\n    {extra}\n  </Grid>\n}\n\nfunction MainStatsCards() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n\n  return <>\n    <StatDisplayCard\n      title=\"Main Stats\"\n      content={<StatDisplayContent statBreakpoint={statBreakpoint} nodes={mainReadNodes}\n        extra={specialNode && <Grid item {...statBreakpoint} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n          <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\n          <span >{valueString(specialNode.value, specialNode.unit)}</span>\n        </Grid>}\n      />}\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\n        {mainEditKeys.map(statKey => {\n          const statName = KeyMap.get(statKey)\n          return <Grid item xs={12} lg={6} key={statKey}>\n            <StatInput\n              name={<span>{StatIcon[statKey]} {statName}</span>}\n              placeholder={KeyMap.getStr(statKey)}\n              value={bonusStats[statKey] ?? 0}\n              percent={KeyMap.unit(statKey) === \"%\"}\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\n            />\n          </Grid>\n        })}\n      </Grid>}\n    />\n    <StatDisplayCard\n      title=\"Other Stats\"\n      content={<StatDisplayContent statBreakpoint={statBreakpoint} nodes={otherStatReadNodes} />}\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\n        {otherStatKeys.map(statKey => {\n          const statName = KeyMap.get(statKey)\n          return <Grid item xs={12} lg={6} key={statKey}>\n            <StatInput\n              name={<span>{StatIcon[statKey]} {statName}</span>}\n              placeholder={KeyMap.getStr(statKey)}\n              value={bonusStats[statKey] ?? 0}\n              percent={KeyMap.unit(statKey) === \"%\"}\n              defaultValue={undefined}\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\n            />\n          </Grid>\n        })}\n      </Grid>}\n    />\n    <StatDisplayCard\n      title=\"Misc Stats\"\n      content={<StatDisplayContent statBreakpoint={{\n        xs: 12, sm: 12, md: 6,\n      }} nodes={miscStatReadNodes} />}\n      editContent={<Grid container columnSpacing={2} rowSpacing={1}>\n        {miscStatkeys.map(statKey => {\n          const statName = KeyMap.get(statKey)\n          return <Grid item xs={12} lg={6} key={statKey}>\n            <StatInput\n              name={<span>{StatIcon[statKey]} {statName}</span>}\n              placeholder={KeyMap.getStr(statKey)}\n              value={bonusStats[statKey] ?? 0}\n              percent={KeyMap.unit(statKey) === \"%\"}\n              onValueChange={value => characterDispatch({ type: \"editStats\", statKey, value })}\n            />\n          </Grid>\n        })}\n      </Grid>}\n    />\n  </>\n}\nfunction StatDisplayCard({ title, content, editContent }) {\n  const [edit, setedit] = useState(false)\n  return <CardLight>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n        <Button size=\"small\" color={edit ? \"error\" : \"info\"} onClick={() => setedit(!edit)} >\n          <span><FontAwesomeIcon icon={edit ? faSave : faEdit} /> {edit ? EXIT : EDIT}</span>\n        </Button>\n      </Box>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {edit ? editContent : content}\n    </CardContent>\n  </CardLight>\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { CharacterContext } from \"../../../CharacterContext\";\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { DataContext } from '../../../DataContext';\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { TalentSheetElementKey } from \"../../../Types/character\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight sx={{ mb: 1 }}>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n    const setTalentLevel = (tKey, newTalentLevelKey) => {\n      talent[tKey] = newTalentLevelKey\n      characterDispatch({ talent })\n    }\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { CardContent, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useContext, useMemo } from 'react';\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport CharacterAutocomplete from \"../../../Components/Character/CharacterAutocomplete\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DataContext, dataContextObj } from \"../../../DataContext\";\nimport { CharacterContext, CharacterContextObj } from \"../../../CharacterContext\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"enemy\", key], node]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      Team Buffs\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={n.info.key} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { data } = useContext(DataContext)\n  return <>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, characterDispatch: activeCharacterDispatch } = useContext(CharacterContext)\n  const activeCharacterKey = active.key\n  const characterKey = active.team[index]\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickHandler = useCharSelectionCallback()\n\n  const dataBundle = teamData[characterKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: dataBundle.character,\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch\n  }, [dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <CardContent>\n      <CharacterAutocomplete fullWidth value={characterKey}\n        onChange={charKey => activeCharacterDispatch({ type: \"team\", index, charKey })}\n        disable={ck => ck === activeCharacterKey || active.team.includes(ck)}\n        labelText={t(\"teammate\", { count: index + 1 })}\n        defaultText={t(\"none\")}\n        defaultIcon={<PersonAdd />}\n        showDefault\n      />\n    </CardContent>\n    {teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={characterKey}\n          onClickHeader={onClickHandler}\n          artifactChildren={<CharArtifactCondDisplay />}\n          weaponChildren={<CharWeaponCondDisplay />}\n          characterChildren={<CharTalentCondDisplay />}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { data, teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute } from \"./optimization\"\nimport { fillBuffer } from \"./addedUtils\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): NumNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return { operation: \"sum_frac\", operands: [numerator, prod(numerator, -1), denom] }\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return cmp(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return cmp(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n\n      break\n    case \"threshold\":\n      const [value, threshold, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(threshold, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return cmp(value, threshold, ddx(pass, binding, diff), ddx(fail, binding, diff))\n\n    case \"match\": case \"lookup\": case \"subscript\": case \"data\":\n      throw new Error(`Unsupported [${operation}] node in ddx`)\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"info\": { \"key\": \"TenacityOfTheMillelith\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"hp_\", \"source\": \"TenacityOfTheMillelith\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"info\": { \"key\": \"ShimenawasReminiscence\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"atk_\", \"source\": \"ShimenawasReminiscence\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"info\": { \"key\": \"WanderersTroupe\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"eleMas\", \"source\": \"WanderersTroupe\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"eleMas\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"info\": { \"key\": \"CrimsonWitchOfFlames\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"vaporize_dmg_\", \"variant\": \"vaporize\", \"source\": \"CrimsonWitchOfFlames\" }, \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1\n\n  var [compute, mapping, buffer] = precompute([formula2], f => f.path[1])\n  fillBuffer(stats, mapping, buffer)\n  var result = compute()[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  var res2 = compute()[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  var [c_dhp_, mapping2, buffer2] = precompute([dhp_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer2[mapping2[k] ?? 0] = v)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_()[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  var [c_dhp, mapping3, buffer3] = precompute([dhp], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer3[mapping3[k] ?? 0] = v)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp()[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  var [c_datk_, buffer4, mapping4] = precompute([datk_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer4[mapping4[k] ?? 0] = v)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_()[0])\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  var [c_deleMas, mapping5, buffer5] = precompute([deleMas], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer5[mapping5[k] ?? 0] = v)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas()[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.maxSubstatValues(key, 5) / 1000 : Artifact.maxSubstatValues(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\nimport { fillBuffer } from \"../../../../Formula/addedUtils\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.maxSubstatValues(key, art.rarity) / 1000 : Artifact.maxSubstatValues(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: NumNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: NumNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n  const [evalFn, mapping, buffer] = precompute(evalOpt, f => f.path[1])\n\n  let stats = toStats(curBuild)\n  fillBuffer(stats, mapping, buffer)\n  const dmg0 = evalFn()[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    Object.values(mapping).forEach(k => buffer[k] = 0)  // Need to reset buffer before evaluating\n    fillBuffer(stats, mapping, buffer)\n    const out = evalFn()\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database._getArt(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database._getArt(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../../../../Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/BuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../CharacterContext';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database._getArts().length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useMainStatFilter, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database._getArts()\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const queryArts: QueryArtifact[] = database._getArts()\n      .filter(art => art.rarity === 5)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useMainStatFilter || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      // .filter(art => true)\n      .map(art => toQueryArtifact(art, 20))\n\n    const equippedArts = database._getChar(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    let curEquip: QueryBuild = Object.assign({}, ...allSlotKeys.map(slotKey => {\n      const art = database._getArt(equippedArts[slotKey] ?? \"\")\n      if (!art) return { [slotKey]: undefined }\n      return { [slotKey]: toQueryArtifact(art) }\n    }))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    let nodes = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useMainStatFilter, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useMainStatFilter && <CardLight>\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>}\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useMainStatFilter ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useMainStatFilter ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useMainStatFilter)}>filter main stats</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editor />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { Calculate, Checkroom, ExpandMore, FactCheck, Groups, Person } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, ButtonGroup, Card, CardContent, CardHeader, Collapse, Divider, Grid, MenuItem, Skeleton, Tab, Tabs, Typography } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport { CharacterContext, CharacterContextObj } from '../../CharacterContext';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport { CharacterSelectionModal } from '../../Components/Character/CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from '../../Components/CustomNumberInput';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { EnemyExpandCard } from '../../Components/EnemyEditor';\nimport ExpandButton from '../../Components/ExpandButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { ambiguousLevel, ascensionMaxLevel, milestoneLevels } from '../../Data/LevelData';\nimport { sgt } from '../../Data/SheetUtil';\nimport { DataContext, dataContextObj, TeamData } from '../../DataContext';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub } from '../../Formula/type';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from '../../KeyMap';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { allCharacterKeys, CharacterKey } from '../../Types/consts';\nimport { clamp } from '../../Util/Util';\nimport TabEquip from './Tabs/TabEquip';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    {characterKey && <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      <CharacterDisplayCard characterKey={characterKey} onClose={() => navigate(\"/characters\")} />\n    </Suspense>}\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  newteamData?: TeamData,\n  mainStatAssumptionLevel?: number,\n  onClose?: (any) => void,\n}\nfunction CharacterDisplayCard({ characterKey, newteamData, mainStatAssumptionLevel = 0, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const characterSheet = usePromise(CharacterSheet.get(characterKey), [characterKey])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation()\n  useTitle(`${t(`char_${characterKey}_gen:name`)} - ${t(`page_character:tabs.${tab}`)}`)\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n  const { compareData } = character ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: (newteamData ? newteamData[characterKey]!.target : charUIData),\n      teamData: (newteamData ? newteamData : teamData),\n      oldData: (compareData && newteamData) ? charUIData : undefined,\n    }\n  }, [newteamData, charUIData, teamData, characterKey, compareData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Grid container spacing={1}>\n          <Grid item>\n            <CharSelectDropdown />\n          </Grid>\n          <Grid item flexGrow={1} />\n          {!!mainStatAssumptionLevel && <Grid item><Card sx={{ p: 1, bgcolor: t => t.palette.warning.dark }}><Typography><strong>Assume Main Stats are Level {mainStatAssumptionLevel}</strong></Typography></Card></Grid>}\n          {!!onClose && <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>}\n        </Grid>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <FormulaCalcCard />\n        <EnemyExpandCard />\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n          <Routes>\n            {/* Character Panel */}\n            <Route index element={<TabOverview />} />\n            <Route path=\"/talent\" element={<TabTalent />} />\n            <Route path=\"/equip\" element={<TabEquip />} />\n            <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n            <Route path=\"/optimize\" element={<TabBuild />} />\n            <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n          </Routes>\n        </Suspense>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />}\n  </CardDark>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"15%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"15%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"15%\" }} value=\"equip\" label={t(\"tabs.equip\")} icon={<Checkroom />} component={RouterLink} to=\"equip\" />\n    <Tab sx={{ minWidth: \"15%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"15%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<Calculate />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"15%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n  </Tabs>\n}\n\nfunction CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  const setLevel = useCallback((level) => {\n    level = clamp(level, 1, 90)\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\n    characterDispatch({ level, ascension })\n  }, [characterDispatch])\n  const setAscension = useCallback(() => {\n    if (!character) return\n    const { level = 1, ascension = 0 } = character\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\n    if (ascension === lowerAscension) characterDispatch({ ascension: ascension + 1 })\n    else characterDispatch({ ascension: lowerAscension })\n  }, [characterDispatch, character])\n  const { elementKey = \"anemo\", level = 1, ascension = 0 } = character\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Grid container spacing={1}>\n      <Grid item>\n        <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n      </Grid>\n      <Grid item>\n        <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n          {characterSheet?.sheet && \"talents\" in characterSheet?.sheet && <DropdownButton title={<strong><ColorText color={elementKey}>{sgt(`element.${elementKey}`)}</ColorText></strong>}>\n            {Object.keys(characterSheet.sheet.talents).map(eleKey =>\n              <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\n                <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n          </DropdownButton>}\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setLevel} value={level}\n              startAdornment=\"Lv. \"\n              inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\n              disabled={!characterSheet} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button sx={{ pl: 1 }} disabled={!ambiguousLevel(level) || !characterSheet} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n          <DropdownButton title={t(\"selectLevel\")} disabled={!characterSheet}>\n            {milestoneLevels.map(([lv, as]) => {\n              const sameLevel = lv === ascensionMaxLevel[as]\n              const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\n              const selected = lv === level && as === ascension\n              return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => characterDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\n            })}\n          </DropdownButton>\n        </ButtonGroup>\n      </Grid>\n    </Grid>\n  </>\n}\n\nfunction FormulaCalcCard() {\n  const { t } = useTranslation(\"page_character\")\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\", gap: 1 }}>\n      <Grid container spacing={1}>\n        <Grid item><HitModeToggle size=\"small\" /></Grid>\n        <Grid item><InfusionAuraDropdown /></Grid>\n        <Grid item><ReactionToggle size=\"small\" /></Grid>\n      </Grid>\n      <Box display=\"flex\" gap={1} >\n        <Box>\n          <Typography variant='subtitle2' >{t(\"formulas\")} {\"&\"}</Typography>\n          <Typography variant='subtitle2' >{t(\"calculations\")}</Typography>\n        </Box>\n        <ExpandButton\n          expand={expanded}\n          onClick={toggle}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          size=\"small\"\n          sx={{ p: 0 }}\n        >\n          <ExpandMore />\n        </ExpandButton>\n      </Box>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const sections = getDisplaySections(data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const header = usePromise(getDisplayHeader(data, sectionKey), [data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardDark sx={{ mb: 1 }}>\n    <CardHeader avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action} titleTypographyProps={{ variant: \"subtitle1\" }} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) =>\n        !node.isEmpty && <Accordion sx={{ bgcolor: \"contentLight.main\" }} key={key}>\n          <AccordionSummary expandIcon={<ExpandMore />}>\n            <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n          </AccordionDetails>\n        </Accordion>)}\n    </CardContent>\n  </CardDark>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete'\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { Stars } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.setWeaponLocation(weaponId, charKey), [database, weaponId],)\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.updateWeapon({ lock: !lock }, id)} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><Stars stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        {canEquip\n          ? <CharacterAutocomplete size=\"small\" sx={{ flexGrow: 1 }} disable={(v: any) => v === \"\"}\n            showDefault defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\n            value={location} onChange={equipOnChar} filter={filter} disableClearable />\n          : <LocationName location={location} />}\n        <ButtonGroup>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","import { useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../Database/Database\";\n\nexport default function useWeapon(weaponID: string | undefined = \"\") {\n  const { database } = useContext(DatabaseContext)\n  const [weapon, setWeapon] = useState(database._getWeapon(weaponID))\n  useEffect(() => setWeapon(database._getWeapon(weaponID)), [database, weaponID])\n  useEffect(() =>\n    weaponID ? database.followWeapon(weaponID, setWeapon) : undefined,\n    [weaponID, setWeapon, database])\n  return weapon\n}\n","import { strPadLeft } from \"./Util\"\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = 60 * SECOND_MS\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\n\nexport function msToUnits(ms: number) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nexport function timeString(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nexport function timeStringMs(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\n","import { WeaponKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nexport const weaponSortKeys = [\"level\", \"rarity\"]\nexport type WeaponSortKey = typeof weaponSortKeys[number]\n\nexport function weaponSortConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): SortConfigs<WeaponSortKey, ICachedWeapon> {\n  return {\n    level: {\n      getValue: wp => wp.level * wp.ascension ?? 0,\n      tieBreaker: \"rarity\"\n    },\n    rarity: {\n      getValue: wp => weaponSheets?.[wp.key]?.rarity,\n      tieBreaker: \"level\"\n    }\n  }\n}\nexport function weaponFilterConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): FilterConfigs<\"rarity\" | \"weaponType\", ICachedWeapon> {\n  return {\n    rarity: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.rarity),\n    weaponType: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.weaponType),\n  }\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","value","TypeError","l","h","useEffect","sx","width","display","alignItems","bgcolor","onChange","val","clamp","px","pl","undefined","inputProps","textAlign","startAdornment","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","ConditionalSelector","conditional","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","entries","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","color","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","title","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","props","children","ml","key","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","p","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","flexDirection","gap","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","action","description","displayTitle","InfoTooltip","Typography","CardHeader","avatar","titleTypographyProps","variant","ExpandButton","styled","expand","other","theme","transform","marginLeft","transition","transitions","create","duration","shortest","DisabledButton","backgroundColor","palette","primary","secondary","TextButton","charCurves","objectMap","_charCurves","commonBasic","objectKeyMap","input","infusionNode","stringPrio","inferredHitEle","lookup","sword","claymore","polearm","catalyst","getTalentType","move","customDmgNode","base","additional","mergeData","hit","constant","ele","customShieldNode","shieldNode","prod","sum","one","customHealNode","healInc","healNode","dmgNode","lvlMultiplier","talentType","subscript","percent","flat","shieldNodeTalent","baseMultiplier","talentIndex","shieldElement","element","infoMut","healNodeTalent","dataObjForCharacterSheet","region","gen","curve","lvlCurve","basic","foundSpecial","charKey","weaponType","weaponTypeKey","premod","charEle","tally","reaction","reactions","physical_dmg_","stat","list","curves","push","ascensions","some","x","NaN","result","prefix","asConst","endsWith","info","slice","Error","special","allMainStatKeys","inferInfoMut","crystallizeMulti1","crystallizeElemas","frac","crystallizeHit","transMulti1","transMulti2","trans","transformativeReactions","multi","variants","swirl","anemo","electroSwirl","electro","pyroSwirl","pyro","cryoSwirl","cryo","hydroSwirl","hydro","shattered","geo","crystallize","fromEntries","absorbableEle","overloaded","electrocharged","superconduct","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","onReset","restProps","whiteSpace","CustomNumberInput","flexBasis","float","endAdornment","Replay","EnemyExpandCard","expanded","setexpanded","toggle","eLvlNode","eDefRed","eDefIgn","CardLight","Grid","container","item","spacing","Chip","label","KeyMap","allElementsWithPhy","EnemyResText","valueString","unit","ExpandMore","Collapse","in","timeout","unmountOnExit","pt","EnemyEditor","node","content","isFinite","uncoloredEleIcons","bsProps","xs","md","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","height","component","href","target","rel","t","contentLight","main","type","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","faCheckSquare","faSquare","className","infusionVals","InfusionAuraDropdown","characterSheet","infusionAura","isMelee","sqBadgeStyle","fontSize","ReactionToggle","reactionMode","charEleKey","infusion","includes","SolidToggleButtonGroup","exclusive","baseColor","_","ToggleButton","HitModeToggle","useTranslation","hitMode","errHeader","talentMap","normal","charged","plunging","skill","burst","passive","passive1","passive2","passive3","range","getDisplayHeader","sectionKey","split","namespace","ArtifactSheet","sheet","defIconSrc","WeaponSheet","asc","getImg","cKey","cEle","CharacterSheet","talentKey","talent","getTalentOfKey","actionText","img","getDisplaySections","getDisplay","nodes","every","isEmpty","weapon","startsWith","artifact","rest","k","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","usePromise","document","setEffectDocument","StatDisplayComponent","mr","mb","Masonry","columns","sm","xl","Nodes","Section","displayNs","oldData","displayNsReads","useMemo","n","nodeKey","customRead","ImgIcon","m","src","FieldDisplay","oldValue","ListItem","useBoolState","initial","bool","setBool","onTrue","onFalse","ArtifactCardNano","artifactId","pSlotKey","slotKey","mainStatAssumptionLevel","showLocation","BGComponent","art","useArtifact","actionWrapperFunc","CardActionArea","useTheme","justifyContent","Assets","opacity","rarity","level","mainStatKey","substats","location","mainStatLevel","Math","mainStatUnit","levelVariant","floor","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactSetSlotTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","LocationIcon","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","StatIcon","cacheValueString","Artifact","SubstatDisplay","numRolls","rolls","rollColor","alignContent","thumbImgSide","marginTop","BusinessCenter","WeaponCardNano","weaponId","useWeapon","weaponSheet","UIData","computeUIData","dataObjForWeapon","Skeleton","refinement","WeaponNameTooltip","ascension","hasRefinement","WeaponStat","BuildDisplayItem","index","compareBuild","extraButtons","characterKey","equippedArtifacts","useBuildSetting","buildSetting","database","DatabaseContext","dataContext","artifactSheets","newOld","setNewOld","close","equipBuild","window","confirm","newBuild","allSlotKeys","id","equipArtifacts","setWeaponLocation","statProviderContext","dataContext_","currentlyEquipped","setToSlots","set","Suspense","fallback","CompareArtifactModal","onClose","flexWrap","sort","slotarr1","slotarr","artifactSlotIcon","lg","oldId","newId","ModalWrapper","open","containerProps","ArtifactCard","disableEditSetSlot","canExclude","canEquip","ChevronRight","CompareBuildButton","artId","show","onShow","onHide","build","newArt","_getArt","artmap","slot","teamData","useTeamData","_getWeapon","dataProviderValue","Close","Tooltip","arrow","Difference","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","useForceUpdate","dbDirty","forceUpdate","followAnyArt","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","_getArts","py","CloseButton","mt","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","followAnyWeapon","weaponSheets","weaponFilterConfigs","sortConfigs","weaponSortConfigs","setRarity","weaponIdList","_getWeapons","sortFunction","star","stars","WeaponCard","WeaponEditor","equippedWeapon","setweaponId","showWeapon","hideWeapon","updateArt","hasEquipped","unequipArts","setEffects","grxl","useMediaQuery","breakpoints","up","artifactFields","setNumKeyArr","weaponDoc","footer","LargeWeaponSwapButton","onEdit","WeaponSwapButton","ArtifactSwapButton","editor","ArtSwapCard","onOpen","minHeight","setArtLocation","SwapHoriz","Worker_fn","Worker","makeid","disallowed","characters","charactersLength","charAt","random","readKey","operation","operands","accu","isShallow","f","deleteKey","a","flower","forEach","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","cmp","foldProd","source","console","log","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","toFold","orig","reduce","todistrib","mapped","pop","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","reduceFormula","allStats","slotArts","rows","cols","mat","dyn","record","Array","fill","selectedPivots","c","pivot","r","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","b","allArtifactSets","con","sumM","monomials","prodM","cartesian","monos","ret","nxt","terms","expandPoly","inheritTags","varMap","tagMap","varTags","hsh","hashNode","z","cmpNode","tag","next","newTag","stat2tag","sop","mono","mon","termsA","termsB","ai","splice","foldLikeTerms","toSOP","slotsLeft","sCount","slotUsage","filterProductPossible","constVal","pv","fillBuffer","mapping","buffer","thresholdExclusions","excl","exc","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","newArts","forceRename","affineNodes","topLevelAffine","visit","isAffine","_op","op","dynKeys","nonConst","assertUnreachable","current","nextDynKey","affine","affineMap","Map","reaffineArt","constantFold","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","newList","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","ranges","reads","_f","computeMinMax","minMaxes","filterArts","filters","kind","ids","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","countBuilds","_count","emptyfilter","ArtifactSetConfig","artSetExclusion","buildSettingDispatch","setOpen","artSetKeyList","reverse","artSlotCount","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","currentContext","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","set4CondNums","doc","paddingTop","parseInt","levels","AssumeFullLevelToggle","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStats","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","statKeys","displayData","downloadData","increasingX","y","minimumData","point","last","allData","sKey","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","readOnly","JSON","stringify","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","mainStatKeys","numSel","cursor","WhiteButton","OptimizationTargetSelector","optimizationTarget","setTarget","setTargetHandler","TargetDisplayText","SelectorSection","MenuList","TargetSelectorMenuItem","NoTarget","displayHeader","objPathValue","style","textOverflow","defThreads","navigator","hardwareConcurrency","initialTabOptimizeDBState","equipmentPriority","threads","useOptimizeDBState","useDBState","UseEquipped","useEquippedArts","tempEquipmentPriority","setOptimizeDBState","ck","_getChar","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","_getCharKeys","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","flexShrink","useCharacter","useCharSelectionCallback","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","CharacterSelectionModal","onSelect","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","allSubstatKeys","compactArtifacts","allowPartial","mainStatVal","substat","accurateValue","TabBuild","compareData","initGlobalSettings","tcMode","buildStatus","setBuildStatus","setchartData","setArtsDirty","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","buildsArts","cancelToken","useRef","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","statFilters","cantTakeList","filteredArts","mainStats","getTeamData","workerData","uiDataForTeam","assign","optimizationTargetNode","targetNode","valueFilter","cancelled","Promise","optimize","plotBaseNode","artSetExclFull","objectKeyValueMap","filtersEP","initialProblem","cache","constraints","depth","masterInfo","ready","maxRequestFilterInFlight","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","StatFilterCard","faCalculator","maxBuildsToShowList","BuildList","DataContextWrapper","join","providerValue","TabOverview","favorite","team","navigate","useNavigate","constellation","tlvl","auto","tBoost","cardImg","pr","IconButton","Favorite","FavoriteBorder","colored","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","constellationName","MainStatsCards","mainSubKeys","mainReadNodes","mainEditKeys","otherStatReadNodes","otherStatKeys","miscStatReadNodes","amplifyingReactions","miscStatkeys","statBreakpoint","StatDisplayContent","extra","columnSpacing","rowSpacing","rn","specialNode","StatDisplayCard","editContent","statName","edit","setedit","faSave","faEdit","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","onClickTitle","ReactionDisplay","tText","enabled","talentLimits","actionWrapeprFunc","levelBoost","newTalentLevelKey","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","enemy","resonanceSheets","res","desc","active","activeCharacterDispatch","activeCharacterKey","onClickHandler","dataBundle","teammateCharacterContext","teamMateDataContext","CharacterAutocomplete","disable","labelText","defaultText","defaultIcon","PersonAdd","showDefault","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","getTalent","sheets","sts","zero_deriv","funct","binding","diff","ddx","fi","ops","ix","da","db","denom","numerator","arg1","arg2","quadrinomials","quadrinomial","nextRow","prev","d","gaussPDF","mu","sig2","exp","sqrt","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","objective","slow","calc4th","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","compute","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","formulas","toEval","fo","evalOpt","precompute","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","artifacts","gaussConstrained","thresh","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","parseFloat","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","concat","CustomTooltip","payload","aspect","margin","top","Label","offset","angle","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","dot","legendType","tooltipType","activeDot","ReferenceLine","ReferenceDot","shape","radius","direction","minWidth","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useMainStatFilter","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","arti","pageIdex","setpageIdex","invScrollRef","artifactsToShow","numPages","toShow","minObj0","maxObj0","ceil","currentPageIndex","thr","setPage","scrollIntoView","behavior","zz","equippedArts","curEquip","artUpOpt","upOpt","Pagination","page","ShowingArt","numShowing","CharacterDisplay","useParams","allCharacterKeys","my","CharacterDisplayCard","newteamData","charUIData","useMatch","params","tab","useTitle","dataContextValue","characterContextValue","CharSelectDropdown","Card","warning","TabNav","FormulaCalcCard","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Checkroom","Groups","Calculate","showModal","setshowModal","setCharacter","setLevel","ascensionMaxLevel","ascenML","setAscension","lowerAscension","elementKey","ThumbSide","contentDark","sgt","talents","ambiguousLevel","milestoneLevels","lv","as","lvlstr","CalculationDisplay","FormulaCalc","Accordion","AccordionSummary","expandIcon","AccordionDetails","subform","onDelete","cs","wrapperFunc","falseWrapperFunc","equipOnChar","lock","falseWrapper","updateWeapon","noWrap","displayVal","disableClearable","faTrashAlt","weaponID","setWeapon","followWeapon","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","getValue","wp","tieBreaker","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","err","replace","module","ex","ExitStatus","reason","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","toString","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","setTimeout","runCaller"],"sourceRoot":""}