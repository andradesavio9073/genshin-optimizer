{"version":3,"file":"static/js/800.bf5acd4b.chunk.js","mappings":"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","sources":["Components/MenuItemWithImage.tsx","Components/Artifact/ArtifactAutocomplete.tsx","Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/RefinementDropdown.tsx","Components/TextButton.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","Context/GraphContext.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","Formula/solveLP_simplex.ts","Formula/linearUpperBound.ts","Context/OptimizationTargetContext.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetBadges.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildResult.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/CustomDot.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/CustomTooltip.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/EnhancedPoint.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/OptimizationTargetEditorList.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/WorkerErr.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/subproblemUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTheorycraft/useCharTC.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/TravelerGenderSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","../wasmpack/assembly.js"],"sourcesContent":["import { ListItemIcon, ListItemText, MenuItem, Theme } from \"@mui/material\";\n\ntype MenuItemWithImageProps = {\n  value: string\n  image?: Displayable\n  text: Displayable\n  theme: Theme\n  isSelected?: boolean\n  addlElement?: Displayable\n  props?: object\n}\n\nexport default function MenuItemWithImage({ value, image = \"\", text, theme, isSelected, addlElement, props }: MenuItemWithImageProps) {\n  return <MenuItem key={value} value={value} {...props}>\n    <ListItemIcon>{image}</ListItemIcon>\n    <ListItemText primaryTypographyProps={{ style: { fontWeight: isSelected ? theme.typography.fontWeightMedium : theme.typography.fontWeightRegular } }}>\n      {text}\n    </ListItemText>\n    {addlElement && addlElement}\n  </MenuItem>\n}\n","import { Autocomplete, AutocompleteProps, AutocompleteRenderGroupParams, Box, Chip, List, ListSubheader, TextField, useTheme } from '@mui/material';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArtifactSheet } from '../../Data/Artifacts/ArtifactSheet';\nimport i18n from '../../i18n';\nimport KeyMap from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allMainStatKeys, allSubstatKeys, MainStatKey, SubstatKey } from '../../Types/artifact';\nimport { allElementsWithPhy, ArtifactRarity, ArtifactSetKey } from '../../Types/consts';\nimport ColorText from '../ColoredText';\nimport MenuItemWithImage from '../MenuItemWithImage';\nimport SolidColoredTextField from '../SolidColoredTextfield';\nimport { StarsDisplay } from '../StarDisplay';\nimport StatIcon from '../StatIcon';\n\ntype Grouper = string | number | undefined\n\ntype ArtifactMultiAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey\ntype ArtifactMultiAutocompleteOption<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactMultiAutocompleteProps<T extends ArtifactMultiAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<T, G>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKeys: T[]\n  setArtifactKeys: (keys: T[]) => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n}\nfunction ArtifactMultiAutocomplete<T extends ArtifactMultiAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKeys, setArtifactKeys, getName, getImage, label, ...props }:\n  ArtifactMultiAutocompleteProps<T, G>) {\n  const theme = useTheme()\n\n  const handleChange = (_, value: ArtifactMultiAutocompleteOption<T, G>[]) => {\n    setArtifactKeys(value.map(v => v.key))\n  }\n  const options = useMemo(() => allArtifactKeysWithGrouper.map(({ key, grouper }) => ({ key, label: getName(key), grouper })), [allArtifactKeysWithGrouper, getName])\n  return <Autocomplete\n    autoHighlight\n    multiple\n    disableCloseOnSelect\n    options={options}\n    value={selectedArtifactKeys.map(key => ({ key: key, label: getName(key) }))}\n    onChange={handleChange}\n    getOptionLabel={(option) => option.label}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    renderInput={(params) => <TextField\n      {...params}\n      label={label}\n      variant=\"filled\"\n      InputLabelProps={{ style: { color: theme.palette.text.primary } }}\n      color={selectedArtifactKeys.length ? \"success\" : \"primary\"}\n      type=\"search\"\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={<ColorText color={KeyMap.getVariant(option.key)}>{getImage(option.key)}</ColorText>}\n        text={<ColorText color={KeyMap.getVariant(option.key)}>{option.label}</ColorText>}\n        theme={theme}\n        isSelected={selectedArtifactKeys.includes(option.key)}\n        props={props}\n      />\n    )}\n    renderTags={(selected, getTagProps) => selected.map((value, index) => {\n      const element = allElementsWithPhy.find(ele => value.key === `${ele}_dmg_`)\n      const color = element ? element : undefined\n      return <Chip {...getTagProps({ index })} key={value.key} icon={getImage(value.key)} label={value.label} color={color} />\n    })}\n    {...props}\n  />\n}\n\ntype ArtifactSetMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<ArtifactSetKey, ArtifactRarity>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKeys: ArtifactSetKey[]\n  setArtSetKeys: (keys: ArtifactSetKey[]) => void\n}\nexport function ArtifactSetMultiAutocomplete({ artSetKeys, setArtSetKeys, ...props }: ArtifactSetMultiAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactMultiAutocomplete<ArtifactSetKey, ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKeys={artSetKeys}\n    setArtifactKeys={setArtSetKeys}\n    getName={(key: ArtifactSetKey) => t(`artifactNames_gen:${key}`)}\n    getImage={(key: ArtifactSetKey) => artifactSheets(key).defIcon}\n    label={t(\"artifact:autocompleteLabels.sets\")}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\ntype ArtifactMainStatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<MainStatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  mainStatKeys: MainStatKey[]\n  setMainStatKeys: (keys: MainStatKey[]) => void\n}\nexport function ArtifactMainStatMultiAutocomplete({ mainStatKeys, setMainStatKeys, ...props }: ArtifactMainStatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<MainStatKey, undefined>\n    allArtifactKeysWithGrouper={allMainStatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={mainStatKeys}\n    setArtifactKeys={setMainStatKeys}\n    getName={(key: MainStatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: MainStatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.mainStats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSubstatMultiAutocompleteProps = Omit<AutocompleteProps<ArtifactMultiAutocompleteOption<SubstatKey, undefined>, true, false, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  substatKeys: SubstatKey[]\n  setSubstatKeys: (keys: SubstatKey[]) => void\n}\nexport function ArtifactSubstatMultiAutocomplete({ substatKeys, setSubstatKeys, ...props }: ArtifactSubstatMultiAutocompleteProps) {\n  const { t } = useTranslation(\"artifact\")\n  return <ArtifactMultiAutocomplete<SubstatKey, undefined>\n    allArtifactKeysWithGrouper={allSubstatKeys.map(key => ({ key }))}\n    selectedArtifactKeys={substatKeys}\n    setArtifactKeys={setSubstatKeys}\n    getName={(key: SubstatKey) => KeyMap.getArtStr(key)}\n    getImage={(key: SubstatKey) => StatIcon[key]}\n    label={t(\"autocompleteLabels.substats\")}\n    {...props}\n  />\n}\n\ntype ArtifactSingleAutocompleteKey = ArtifactSetKey | MainStatKey | SubstatKey | \"\"\ntype ArtifactSingleAutocompleteOption<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = {\n  key: T\n  label: string\n  grouper?: G\n}\ntype ArtifactSingleAutocompleteProps<T extends ArtifactSingleAutocompleteKey, G extends Grouper> = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<T, G>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  allArtifactKeysWithGrouper: readonly { key: T, grouper?: G }[]\n  selectedArtifactKey: T\n  setArtifactKey: (key: T | \"\") => void\n  getName: (key: T) => string\n  getImage: (key: T) => JSX.Element\n  label: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nfunction ArtifactSingleAutocomplete<T extends ArtifactSingleAutocompleteKey, G extends Grouper>({ allArtifactKeysWithGrouper, selectedArtifactKey, setArtifactKey, getName, getImage, label, disable = () => false, showDefault = false, defaultText = \"\", defaultIcon = \"\", ...props }:\n  ArtifactSingleAutocompleteProps<T, G>) {\n  const theme = useTheme();\n\n  const options = useMemo(() =>\n    (showDefault\n      ? [{ key: \"\" as T, label: defaultText }]\n      : []\n    ).concat(allArtifactKeysWithGrouper.map(({ key, grouper }) => (\n      { key, label: getName(key), grouper }\n    ))), [allArtifactKeysWithGrouper, getName, defaultText, showDefault])\n\n  return <Autocomplete\n    autoHighlight\n    options={options}\n    clearIcon={selectedArtifactKey ? undefined : \"\"} // Hide the clear icon if the value is already default\n    value={{ key: selectedArtifactKey, label: getName(selectedArtifactKey) }}\n    onChange={(event, newValue, reason) => (event.type !== \"change\" || reason !== \"clear\") && setArtifactKey(newValue ? newValue.key : \"\")}\n    getOptionLabel={(option) => option.label ? option.label : defaultText}\n    isOptionEqualToValue={(option, value) => option.key === value.key}\n    getOptionDisabled={option => disable(option.key)}\n    renderInput={(props) => <SolidColoredTextField\n      {...props}\n      label={label}\n      startAdornment={getImage(selectedArtifactKey)}\n      hasValue={selectedArtifactKey ? true : false}\n    />}\n    renderOption={(props, option) => (\n      <MenuItemWithImage\n        key={option.key}\n        value={option.key}\n        image={getImage(option.key)}\n        text={option.label}\n        theme={theme}\n        isSelected={selectedArtifactKey === option.key}\n        props={props}\n      />\n    )}\n    {...props}\n  />\n}\n\ntype ArtifactSetSingleAutocompleteProps = Omit<AutocompleteProps<ArtifactSingleAutocompleteOption<ArtifactSetKey | \"\", ArtifactRarity>, false, true, false>, \"title\" | \"children\" | \"onChange\" | \"options\" | \"renderInput\" | \"value\"> & {\n  artSetKey: ArtifactSetKey | \"\"\n  setArtSetKey: (key: ArtifactSetKey | \"\") => void\n  label?: string\n  disable?: (v: any) => boolean\n  showDefault?: boolean\n  defaultText?: string\n  defaultIcon?: Displayable\n}\nexport function ArtifactSetSingleAutocomplete({ artSetKey, setArtSetKey, label = \"\", ...props }: ArtifactSetSingleAutocompleteProps) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const { t } = useTranslation([\"artifact\", \"artifactNames_gen\"])\n  label = label ? label : t(\"artifact:autocompleteLabels.set\")\n  if (!artifactSheets) return null\n\n  const allArtifactSetsAndRarities = Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n    .flatMap(([rarity, sets]) => sets.map(set => ({ key: set, grouper: +rarity as ArtifactRarity })))\n    .sort(sortByRarityAndName)\n\n  return <ArtifactSingleAutocomplete<ArtifactSetKey | \"\", ArtifactRarity>\n    allArtifactKeysWithGrouper={allArtifactSetsAndRarities}\n    selectedArtifactKey={artSetKey}\n    setArtifactKey={setArtSetKey}\n    getName={(key: ArtifactSetKey | \"\") => key && t(`artifactNames_gen:${key}`)}\n    getImage={(key: ArtifactSetKey | \"\") => key ? artifactSheets(key).defIcon : <></>}\n    label={label}\n    groupBy={(option) => option.grouper?.toString() ?? \"\"}\n    renderGroup={(params: AutocompleteRenderGroupParams) => params.group && <List key={params.group} component={Box}>\n      <ListSubheader key={`${params.group}Header`} sx={{ top: \"-1em\" }}>\n        {params.group} <StarsDisplay stars={+params.group as ArtifactRarity} />\n      </ListSubheader>\n      {params.children}\n    </List>}\n    {...props}\n  />\n}\n\nfunction sortByRarityAndName(a: { key: ArtifactSetKey, grouper: ArtifactRarity }, b: { key: ArtifactSetKey, grouper: ArtifactRarity }) {\n  if (a.grouper > b.grouper) {\n    return -1\n  }\n  if (a.grouper < b.grouper) {\n    return 1\n  }\n\n  const aName = i18n.t(`artifactNames_gen:${a.key}`)\n  const bName = i18n.t(`artifactNames_gen:${b.key}`)\n  if (aName < bName) {\n    return -1\n  }\n  if (aName > bName) {\n    return 1\n  }\n\n  return 0\n}\n","import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: showLevelText ? \"right\" : \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography, Box } from \"@mui/material\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport { allRefinement, Refinement } from \"../Types/consts\"\nimport DropdownButton from \"./DropdownMenu/DropdownButton\"\n\nexport default function RefinementDropdown({ refinement, setRefinement }: { refinement: Refinement, setRefinement: (r: Refinement) => void }) {\n  const { t } = useTranslation(\"ui\")\n  return <DropdownButton title={t(\"refinement\", { value: refinement })}>\n    {allRefinement.map(r =>\n      <MenuItem key={r} onClick={() => setRefinement(r)} selected={refinement === r} disabled={refinement === r}>\n        {t(\"refinement\", { value: r })}\n      </MenuItem>)}\n  </DropdownButton>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Button } from '@mui/material';\nimport React, { Suspense, useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nconst CharacterSelectionModal = React.lazy(() => import('../CharacterSelectionModal'))\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <Suspense fallback={false}>\n      <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    </Suspense>\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { createContext } from \"react\"\nimport { NumNode } from \"../Formula/type\"\nimport { Build } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\nexport type GraphContextObj = {\n  chartData?: ChartData\n  setChartData: (data: ChartData | undefined) => void\n  graphBuilds: string[][] | undefined\n  setGraphBuilds: (builds: string[][] | undefined) => void\n}\nexport const GraphContext = createContext({} as GraphContextObj)\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey, database), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{node.info.name}</ColorText> <strong>{nodeVStr(node)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i} component=\"div\">{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore, Replay } from \"@mui/icons-material\";\nimport { Box, Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport { nodeVStr } from \"../Formula/uiData\";\nimport KeyMap from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport StatIcon from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { t } = useTranslation(\"ui\")\n  const { characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  const onReset = useCallback(() => characterDispatch({ enemyOverride: {} }), [characterDispatch])\n\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\", gap: 1, alignItems: \"center\", flexWrap: \"wrap\" }}>\n      <Chip size=\"small\" color=\"success\" label={<span>{eLvlNode.info.name} <strong>{eLvlNode.value}</strong></span>} />\n      {allElementsWithPhy.map(element => <Typography key={element} ><EnemyResText element={element} /></Typography>)}\n      <Typography>DEF Red. {nodeVStr(eDefRed)}</Typography>\n      <Typography>DEF Ignore {nodeVStr(eDefIgn)}</Typography>\n      <Box flexGrow={1} display=\"flex\" justifyContent=\"flex-end\" gap={1}>\n        <Button size=\"small\" color=\"error\" onClick={onReset} startIcon={<Replay />}>{t`reset`}</Button>\n        <ExpandButton\n          expand={expanded}\n          onClick={toggle}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n          size=\"small\"\n          sx={{ marginLeft: 0 }}\n        >\n          <ExpandMore />\n        </ExpandButton>\n      </Box>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{StatIcon[element]} &#8734;</span> :\n    <span >{StatIcon[element]} <strong>{nodeVStr(node)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val !== undefined ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"∞ \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography, Box } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport { nodeVStr } from \"../../Formula/uiData\";\nimport { allEleDmgKeys, allEleResKeys } from \"../../KeyMap\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  const { t } = useTranslation(\"page_character\")\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title={t`addStats.title`} action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element, key?: string) => <Grid item key={key} xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={JSON.stringify(rn.info)} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = characterSheet.elementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.filter(k => {\n      if (k.includes(charEle)) return false\n      if (isMelee && k.includes(\"physical\")) return true\n      return true\n    }).map(k => input.total[k])\n\n    return nodes.filter(n => !!data.get(n).value)\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.icon} {specialNode.info.name}</ColorText></span>\n              <span >{nodeVStr(specialNode)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { threshold, constant, prod, sum } from './utils';\nimport { OptNode } from \"./optimization\";\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: OptNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: OptNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return threshold(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands])\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands])\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: OptNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: OptNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'const' && bval.operation === 'const') {\n          return branch.value >= bval.value ? ge : lt\n        }\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, threshold(br2, bv2, left, right))\n            return threshold(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(threshold(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, threshold } from \"./utils\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { OptNode } from \"./optimization\"\nimport { ArtSetExclusion } from \"../Database/DataManagers/BuildSettingData\"\n\nexport function foldSum(nodes: readonly OptNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) {\n    if (nodes.length === 1) return nodes[0]\n    return sum(...nodes)\n  }\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly OptNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: OptNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => Math.abs(lower[statKey] - upper[statKey]) < 1e-6)\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: OptNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return threshold(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { OptNode } from \"./optimization\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, OptNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: OptNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, OptNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: OptNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n)\n  })\n\n  function toSOP(n: OptNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","function pivotInplace(A: number[][], { i, j }: { i: number, j: number }) {\n  const Aij = A[i][j]\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    for (let k = 0; k < A[0].length; k++) {\n      if (k === j) continue\n      A[h][k] -= A[i][k] * A[h][j] / Aij\n    }\n  }\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    A[h][j] = -A[h][j] / Aij\n  }\n  for (let k = 0; k < A[0].length; k++) {\n    if (k === j) continue\n    A[i][k] = A[i][k] / Aij\n  }\n  A[i][j] = 1 / Aij\n}\n\nfunction findPiv1(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let j = 0; j < c - 1; j++) {\n    if (A[r - 1][j] >= 0) continue\n    for (let i = 0; i < r - 1; i++) {\n      if (A[i][j] > 1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('UNBOUNDED FEASIBLE')\n  }\n\n  if (minloc.i < 0) throw Error('NO PIVOTS (done)')\n  return { i: minloc.i, j: minloc.j }\n}\n\nfunction findPiv2(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let i = 0; i < r - 1; i++) {\n    if (A[i][c - 1] >= 0) continue\n    for (let j = 0; j < c - 1; j++) {\n      if (A[i][j] < -1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('INFEASIBLE')\n    return { i: minloc.i, j: minloc.j }\n  }\n  throw Error('NO PIVOTS (done)')\n}\n\nfunction backtrack(tableau: number[][], ijTrack: { i: number, j: number }[], targ: number) {\n  let side = 1;  // 0 left, 1 right\n  ijTrack.forEach(({ i, j }) => {\n    if (side === 1 && j === targ) {\n      targ = i\n      side = 0\n    }\n    else if (side === 0 && i === targ) {\n      targ = j\n      side = 1\n    }\n  })\n\n  const ncol = tableau[0].length\n  return side === 0 ? tableau[targ][ncol - 1] : 0\n}\n\n/**\n * Solve a Linear Program defined by:\n *              min  c^T x\n *               x\n *   Subject to:     Ax <= b\n *                    x >= 0\n *\n * Implemented according to:\n *   https://www.math.ucla.edu/~tom/LP.pdf\n *\n * Does not implement any cycle detection, though that *shouldnt* a problem for GO's use\n *   case. This algorithm is fairly numerically unstable though, use with care & always\n *   try to verify the solution. It's also a fair bit slower than it needs to be.\n *\n * @param c        Objective vector\n * @param Ab       Constraints matrix with thresholds. Inputted in block form [A, b]\n * @returns        the optimal solution x\n */\nexport function solveLP(c: number[], Ab: number[][]) {\n  let rows = Ab.length + 1\n  let cols = Ab[0].length\n\n  let tableau = Array(rows).fill(0).map(_ => Array(cols).fill(0))\n  Ab.forEach((Ai, i) => Ai.forEach((Aij, j) => tableau[i][j] = Aij))\n  // b.forEach((bi, i) => tableau[i][cols - 1] = bi)\n  c.forEach((cj, j) => tableau[rows - 1][j] = cj)\n  // console.log('tab', tableau)\n\n  let ijTrack: { i: number, j: number }[] = []\n\n  while (tableau.some((t, i) => i < rows - 1 && t[cols - 1] < 0)) {\n    const ij = findPiv2(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  while (tableau[rows - 1].some((t, j) => j < cols - 1 && t < 0)) {\n    const ij = findPiv1(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  return c.map((_, i) => backtrack(tableau, ijTrack, i))\n}\n","import { ArtifactsBySlot, ArtifactsBySlotVec, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { constant, sum, prod, threshold } from \"./utils\"\nimport { ExpandedPolynomial, Monomial, sumM, prodM, constantM, readM, foldLikeTerms } from './expandPoly'\nimport { precompute, allOperations, OptNode } from \"./optimization\"\nimport { solveLP } from './solveLP_simplex'\nimport { cartesian } from '../Util/Util'\n\nexport type LinearForm = {\n  w: DynStat,\n  c: number,\n  err: number\n}\nexport type LinearFormVec = {\n  w: number[],\n  c: number,\n  err: number\n}\n\nfunction minMax(node: OptNode, lower: DynStat, upper: DynStat) {\n  const compute = precompute([node], {}, n => n.path[1], 1)\n  const minval = compute([{ id: '', values: lower }])[0]\n  const maxval = compute([{ id: '', values: upper }])[0]\n  return [minval, maxval]\n}\n\n/**\n * `res` is the ONE place where negative arguments & negative slopes are allowed.\n * @param node\n */\nfunction handleResArg(node: OptNode, lower: DynStat, upper: DynStat) {\n  function flipOps(n: OptNode): OptNode {\n    switch (n.operation) {\n      case 'add':\n        return sum(...n.operands.map(n => flipOps(n)))\n      case 'const':\n        return constant(-n.value)\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (ge.operation === 'const' && lt.operation === 'const') {\n          if (ge.value <= lt.value) {\n            return threshold(branch, bval, -ge.value, -lt.value)\n          }\n        }\n        console.log(n)\n        throw Error('(res neg slope): threshold. Something went wrong.')\n      default:\n        console.log(n)\n        throw Error('(res neg slope) Havent written logic to handle this')\n    }\n  }\n\n  const flippedResOp = flipOps(node.operands[0]!)\n\n  let [a, b] = minMax(flippedResOp, lower, upper)\n  let resf = allOperations['res']\n  let [c, d] = [resf([-a]), resf([-b])]\n\n  if (b > 0 && a > -1.75) {\n    // 1 + x / 2\n    return sum(1, prod(.5, flippedResOp))\n  }\n\n  const intercept = (b * c - a * d) / (b - a)\n  const slope = (c - d) / (b - a)\n  return sum(intercept, prod(slope, flippedResOp))\n}\n\n/**\n * First converts a product of variables (including max, min, sum_frac, threshold, etc.) to\n *   a pure product form consisting of only `read` and `const` nodes, guaranteeing the\n *   product form is an upper bound.\n *\n * Then on the product form, create a linear upper bound using `lub` and return it.\n *\n * @param node The formula to expand\n * @param lower Stat lower bounds\n * @param upper Stat upper bounds\n * @returns\n */\nexport function toLinearUpperBound({ nodes, terms }: ExpandedPolynomial, lower: DynStat, upper: DynStat): LinearForm {\n  let stat2tag = {} as Dict<string, string>\n  Object.entries(nodes).forEach(([tag, n]) => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = tag\n  })\n\n  let linerr = 0\n  function toPureRead(n: OptNode): Monomial[] {\n    switch (n.operation) {\n      case 'const':\n        return constantM(n.value)\n      case 'read':\n        return readM(stat2tag[n.path[1]]!)\n      case 'add':\n        return sumM(...n.operands.map(toPureRead))\n      case 'mul':\n        return prodM(...n.operands.map(toPureRead))\n\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read' && bval.operation === 'const'\n          && lt.operation === 'const' && ge.operation === 'const') {\n          if (ge.value < lt.value) {\n            console.log(n)\n            throw Error('Not Implemented (threshold must be increasing)')\n          }\n\n          let key = branch.path[1]\n          if (lower[key] >= bval.value) return constantM(ge.value)\n          if (upper[key] < bval.value) return constantM(lt.value)\n\n          const slope = (ge.value - lt.value) / (bval.value - lower[key])\n          const mon1 = prodM(constantM(slope), readM(stat2tag[branch.path[1]]!))\n\n          const intercept = lt.value - slope * lower[key]\n          if (intercept === 0) return mon1\n          return sumM(constantM(intercept), mon1)\n          // if (lt.value === 0) return mon1\n          // return sumM(constantM(lt.value), mon1)\n        }\n        console.log(n)\n        throw Error('Not Implemented (threshold must branch between constants)')\n      case 'res':\n        let op = handleResArg(n, lower, upper)\n        return toPureRead(op)\n\n      case 'min': case 'max':\n        let [rop, cop] = n.operands\n        if (cop.operation !== 'const')\n          [rop, cop] = [cop, rop]  // Assume min(const, read)\n        if (n.operation === 'min') return toPureRead(rop)\n\n        if (cop.operation === 'const') {\n          const thresh = cop.value\n          const [minVal, maxVal] = minMax(rop, lower, upper)\n          if (minVal > thresh) return toPureRead(rop)\n          if (thresh > maxVal) return constantM(thresh)\n\n          // rescale `rop` to be above thresh, since max(f, 0) is a convex function\n          const m = (maxVal - thresh) / (maxVal - minVal)\n          const b = thresh - m * minVal\n          return sumM(constantM(b), prodM(constantM(m), toPureRead(rop)))\n        }\n        console.log(n)\n        throw Error('Not Implemented (max between two non-constants)')\n\n      case 'sum_frac':\n        const [em, denom] = n.operands\n        if (denom.operation !== 'const') throw Error('Not Implemented (non-constant sum_frac denominator)')\n\n        const [minEM, maxEM] = minMax(em, lower, upper)\n        const k = denom.value\n        // The sum_frac form is concave, so any Taylor expansion of EM / (EM + k) gives an upper bound.\n        // We can solve for the best Taylor approximation location with the following formula.\n        let loc = Math.sqrt((minEM + k) * (maxEM + k)) - k\n        let below = (k + loc) * (k + loc)\n        let slope = k / below\n        let c = loc * loc / below\n\n        // TODO: update linerr\n        return sumM(constantM(c), prodM(constantM(slope), toPureRead(em)))\n\n      default:\n        console.log(n)\n        throw Error('Not Implemented')\n    }\n  }\n\n  // 1. Turn all nodes into linear upper bounds\n  const nodesToMap = Object.fromEntries(Object.entries(nodes).filter(([tag, n]) => n.operation !== 'read').map(([tag, n]) => [tag, toPureRead(n)]))\n\n  // 2. substitute into `terms` and construct a new SOPForm whose nodes are all pure read nodes\n  let t2 = terms.flatMap(({ coeff, terms }) => prodM(constantM(coeff), ...terms.map(t => nodesToMap[t] ?? readM(t))))\n  t2 = foldLikeTerms(t2)\n\n  // 2.5 Re-name all the tags to their read node version\n  t2 = t2.map(({ coeff, terms }) => {\n    terms = terms.map(t => {\n      const nt = nodes[t]\n      if (!nt || nt.operation !== 'read') throw Error('MUST be a read node.')\n      return nt.path[1]\n    })\n    return { coeff, terms }\n  })\n\n  // 3. call lub() on each term\n  const lins = t2.map(({ coeff, terms }) => {\n    if (terms.length === 0) return { w: {}, c: coeff, err: 0 }\n    if (terms.length === 1) return { w: { [terms[0]]: coeff }, c: 0, err: 0 }\n    const { w, c, err } = lub(terms.map(k => ({ lower: lower[k], upper: upper[k] })))\n    const retw = w.reduce((ret, wi, i) => {\n      ret[terms[i]] = wi * coeff + (ret[terms[i]] ?? 0)\n      return ret\n    }, {} as DynStat)\n    return { w: retw, c: coeff * c, err: coeff * err + linerr }\n  })\n\n  return lins.reduce((lin, l) => {\n    lin.c += l.c; lin.err += l.err\n    Object.entries(l.w).forEach(([k, v]) => lin.w[k] = v + (lin.w[k] ?? 0))\n    return lin\n  }, { w: {}, c: 0, err: 0 })\n}\n\n/**\n * Constructs an upper bounding linear form for a function x_1 * x_2 * ... * x_n\n * @param bounds upper and lower bounds for each x_i\n * @returns { w, c, err } with\n */\nfunction lub(bounds: { lower: number, upper: number }[]): { w: number[], c: number, err: number } {\n  if (bounds.length === 0) return { w: [], c: 0, err: 0 }\n  const nVar = bounds.length\n\n  // Re-scale bounds to [0, 1] for numerical stability.\n  const boundScale = bounds.map(({ upper }) => upper)\n  const scaleProd = boundScale.reduce((prod, v) => prod * v, 1)\n  bounds = bounds.map(({ lower, upper }) => ({ lower: lower / upper, upper: 1 }))\n\n  // Setting up the linear program in terms of constraints.\n  // cartesian(bounds) loops 2^n times\n  let cons = cartesian(...bounds.map(({ lower, upper }) => [lower, upper])).flatMap((coords) => {\n    const prod = coords.reduce((prod, v) => prod * v, 1)\n    return [\n      [...coords.map(v => -v), 1, 0, -prod],\n      [...coords, -1, -1, prod],\n    ]\n  })\n\n  // Force equality at upper & lower corners?\n  // cons.push([...bounds.map(lu => lu.lower), -1, 0, bounds.reduce((prod, { lower }) => prod * lower, 1)])\n  // cons.push([...bounds.map(lu => lu.upper), -1, 0, bounds.reduce((prod, { upper }) => prod * upper, 1)])\n\n  let soln: any\n  const objective = [...bounds.map(_ => 0), 0, 1]\n  try {\n    // TODO: verify solution\n    soln = solveLP(objective, cons)\n  }\n  catch (e) {\n    console.log('ERROR on bounds', bounds)\n    console.log('Possibly numerical instability issue.')\n    throw e\n  }\n  return {\n    w: soln.slice(0, nVar).map((wi, i) => wi * scaleProd / boundScale[i]),\n    c: -scaleProd * soln[nVar],\n    err: scaleProd * soln[nVar + 1]\n  }\n}\n\nexport function maxWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMax([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((maxTotVal, [slotKey, slotArts]) => maxTotVal + sparseMatmulMax([lin], slotArts.map(a => a.values))[0], 0)\n}\nexport function minWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMin([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((minTotVal, [slotKey, slotArts]) => minTotVal + sparseMatmulMin([lin], slotArts.map(a => a.values))[0], 0)\n}\n\nexport function maxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  return Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n}\nexport function minMaxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  const maxw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n\n  const minw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.min(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n  return { minw, maxw }\n}\n\n\n\n// Implement matrix multiply between row-major w's of LinearForm and col-major DynStats that represent artifacts.\n/**\n * Implements sparse matrix multiplication between A and x\n * @param A A list of row-major w's of some LinearForm\n * @param x A list of col-major DynStats that represent some artifacts\n * @returns A col-major 2d array number[][] with shape (A.length, x.length).\n *          ret[0] is [A1 @ x1, A2 @ x1, ..., An @ x1]\n */\nexport function sparseMatmul(A: LinearForm[], x: DynStat[]) {\n  return x.map(dyn => A.map(({ w }) => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0)))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a max() along the rows.\n */\nexport function sparseMatmulMax(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.max(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a min() along the rows.\n */\nexport function sparseMatmulMin(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.min(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildSettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold, OptNode } from \"../../../../Formula/optimization\";\nimport { ConstantNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min, threshold } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: OptNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function pruneExclusion(nodes: OptNode[], exclusion: ArtSetExclusion): OptNode[] {\n  const maxValues: Dict<keyof typeof exclusion, number> = {}\n  for (const [key, e] of Object.entries(exclusion)) {\n    if (!e.includes(4)) continue\n    maxValues[key] = e.includes(2) ? 1 : 3\n  }\n  return mapFormulas(nodes, f => f, f => {\n    if (f.operation !== \"threshold\") return f\n\n    const [v, t, pass, fail] = f.operands\n    if (v.operation === \"read\" && t.operation === \"const\") {\n      const key = v.path[v.path.length - 1], thres = t.value\n      if (key in maxValues) {\n        const max: number = maxValues[key]\n        if (max < thres) return fail\n        if (thres === 2 && exclusion[key]!.includes(2))\n          return threshold(v, 4, pass, fail)\n      }\n    }\n    return f\n  })\n}\n\nexport function reaffine(nodes: OptNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: OptNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<OptNode>(), topLevelAffine = new Set<OptNode>()\n\n  function visit(node: OptNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(op => affineNodes.has(op) && topLevelAffine.add(op))\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\": visit(f, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nfunction pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  /**\n   * Note:\n   * This function assumes that every base (reaffined) stats are monotonically increasing. That is, artifacts\n   * with higher stats are better. This remains true as long as the main and substats are in increasing. Set\n   * effects that decrease enemy resistance (which is monotonically decreasing) does not violate this assumption\n   * as set effects are not handled here.\n   */\n  const allowRainbow = !exclusion.rainbow?.length, keys = Object.keys(arts.base)\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const otherBetterEqual = keys.every(k => (other.values[k] ?? 0) >= (art.values[k] ?? 0))\n        const otherMaybeBetter = keys.some(k => (other.values[k] ?? 0) > (art.values[k] ?? 0))\n        const otherBetter = otherBetterEqual && (otherMaybeBetter || other.id > art.id)\n        const canSwitch = (allowRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set\n        if (otherBetter && canSwitch) count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: OptNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: OptNode[], arts: ArtifactsBySlot): OptNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    {\n      const { min, max } = nodeRange.get(f)!\n      if (min === max) return constant(min)\n    }\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return f.operands[3]\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nexport function computeFullArtRange(arts: ArtifactsBySlot): DynMinMax {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  return addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n}\nexport function computeNodeRange(nodes: OptNode[], reads: DynMinMax): Map<OptNode, MinMax> {\n  const range = new Map<OptNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = operands[3]\n        else current = computeMinMax([], [operands[2], operands[3]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArtsVec(arts: ArtifactsBySlotVec, filters: RequestFilter): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArts2(arts: ArtifactsBySlot, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function filterArtsVec2(arts: ArtifactsBySlotVec, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\n\nexport type ArtifactBuildDataVecDense = {\n  id: string\n  set?: ArtifactSetKey\n  values: number[]\n  buffer: number[]\n}\n// I dont *think* its worth it to implement sparse vectors n shit\n// export type ArtifactBuildDataVecSparse = {\n//   id: string\n//   set?: ArtifactSetKey\n//   values: number[][]\n// }\nexport type ArtifactsBySlotVec = { keys: string[], base: number[], values: StrictDict<SlotKey, ArtifactBuildDataVecDense[]>, baseBuffer: number[] }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n\nexport type DynMinMax = { [key in string]: MinMax }\nexport type MinMax = { min: number, max: number }\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/DataManagers/BuildSettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, (k, r, v) => r === \"update\" && setBuildSetting(v)),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artKeysByRarity = useMemo(() => artifactSheets\n    ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets))\n      .reverse().flatMap(([, sets]) => sets)\n      .filter(key => !key.includes(\"Prayers\"))\n    : [], [artifactSheets])\n  const { artKeys, artSlotCount } = useMemo(() => {\n    const artSlotCount = objectKeyMap(artKeysByRarity, _ => objectKeyMap(allSlotKeys, _ => 0))\n    database.arts.values.forEach(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    const artKeys = [...artKeysByRarity].sort((a, b) =>\n      +(getNumSlots(artSlotCount[a]) < 2) - +(getNumSlots(artSlotCount[b]) < 2))\n    return dbDirty && { artKeys, artSlotCount }\n  }, [dbDirty, database, artKeysByRarity])\n\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4 } = useMemo(() => ({\n    allow2: artKeysByRarity.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artKeysByRarity.filter(k => !artSetExclusion[k]?.includes(4)).length,\n  }), [artKeysByRarity, artSetExclusion])\n  const exclude2 = artKeysByRarity.length - allow2, exclude4 = artKeysByRarity.length - allow4\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => ({\n    ...dataContext,\n    data: new UIData({ ...dataContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artKeysByRarity.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artKeysByRarity, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artKeys.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets(setKey)} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character_optimize\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => getNumSlots(slotCount), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\", opacity: slots < 2 ? \"50%\" : undefined }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>\n        <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\n\nfunction getNumSlots(slotCount: Record<string, number>): number {\n  return Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0)\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"mainStat.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"mainStat.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"mainStat.assumptionLvl.lvl\", { lvl }) : t(\"mainStat.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback, useContext } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport { StatColoredWithUnit } from \"../StatDisplay\";\nimport StatIcon from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const { database } = useContext(DatabaseContext)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon charKey={location && database.chars.LocationToCharacterKey(location)} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography><StatColoredWithUnit statKey={mainStatKey} /></Typography>} disableInteractive>\n              <span>{StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && <StatColoredWithUnit statKey={stat.key} />}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ charKey }: { charKey: CharacterKey | \"\" }) {\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(charKey, gender), [charKey, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} size={2.5} sx={{ marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem, Box } from \"@mui/material\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { DatabaseContext } from \"../../Database/Database\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey, database), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { DatabaseContext } from \"../../Database/Database\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay, nodeVStr } from '../../Formula/uiData';\nimport useDBMeta from \"../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { LocationKey } from \"../../Types/consts\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.name) return null\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.name}</Typography>} disableInteractive>\n        <span>{node.info.icon}</span>\n      </BootstrapTooltip>\n      <span>{nodeVStr(node)}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: LocationKey }) {\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(location ? database.chars.LocationToCharacterKey(location) : \"\", gender), [location, gender])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} size={2.5} sx={{ marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { Box, Typography } from \"@mui/material\"\nimport { useMemo } from \"react\"\nimport ArtifactSetTooltip from \"../../../../../Components/Artifact/ArtifactSetTooltip\"\nimport { artifactSlotIcon } from \"../../../../../Components/Artifact/SlotNameWIthIcon\"\nimport SqBadge from \"../../../../../Components/SqBadge\"\nimport { ArtifactSheet } from \"../../../../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../../../../ReactHooks/usePromise\"\nimport { ICachedArtifact } from \"../../../../../Types/artifact\"\nimport { ArtifactSetKey, SlotKey } from \"../../../../../Types/consts\"\n\ntype ArtifactSetBadgesProps = {\n  artifacts: ICachedArtifact[],\n  currentlyEquipped?: boolean\n}\nexport function ArtifactSetBadges({ artifacts, currentlyEquipped = false }: ArtifactSetBadgesProps) {\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = useMemo(() => artifacts\n    .filter(arti => arti)\n    .reduce((acc, curr) => {\n      acc[curr.setKey] ? acc[curr.setKey].push(curr.slotKey) : acc[curr.setKey] = [curr.slotKey]\n      return acc\n    }, {}),\n    [artifacts]\n  )\n  return <>{Object.entries(setToSlots)\n    .sort(([_k1, slotarr1], [_k2, slotarr2]) => slotarr2.length - slotarr1.length)\n    .map(([key, slotarr]) =>\n      <ArtifactSetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n    )\n  }</>\n\n}\nfunction ArtifactSetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: SlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={numInSet} >\n      <SqBadge sx={{ height: \"100%\" }} color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </ArtifactSetTooltip>\n  </Box>\n}\n","import { Checkroom, ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Typography, Box } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport { ICachedArtifact } from '../../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\nimport { ArtifactSetBadges } from './ArtifactSetBadges';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  label?: Displayable,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtonsRight?: JSX.Element,\n  extraButtonsLeft?: JSX.Element,\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ label, compareBuild, extraButtonsRight, extraButtonsLeft, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    allSlotKeys.forEach(s => {\n      const aid = data.get(input.art[s].id).value\n      if (aid) database.arts.set(aid, { location: charKeyToLocCharKey(characterKey) })\n    })\n    database.weapons.set(data.get(input.weapon.id).value!, { location: charKeyToLocCharKey(characterKey) })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  const artifactIdsBySlot = useMemo(() => Object.fromEntries(allSlotKeys.map(slotKey => [\n    slotKey,\n    data.get(input.art[slotKey].id).value\n  ])), [data])\n  const artifacts = useMemo(() => artifactIdsBySlot && Object.values(artifactIdsBySlot)\n    .map((artiId: string) => database.arts.get(artiId))\n    .filter(arti => arti) as ICachedArtifact[],\n    [artifactIdsBySlot, database.arts]\n  )\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={artifactIdsBySlot[slotKey]} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = artifactIdsBySlot[slotKey]!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [setNewOld, equippedArtifacts, mainStatAssumptionLevel, artifactIdsBySlot])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => artifactIdsBySlot[slotKey] === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {label !== undefined && <SqBadge color=\"info\"><Typography><strong>{label}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <ArtifactSetBadges artifacts={artifacts} currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          {extraButtonsLeft}\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped} startIcon={<Checkroom />}>Equip Build</Button>\n          {extraButtonsRight}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: charKeyToLocCharKey(characterKey) })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip editorProps={{ disableSet: true, disableSlot: true }} /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { IBuildResult } from \"../../../../Database/DataManagers/BuildResult\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildResult(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildResult, setBuildResult] = useState(() => database.buildResult.get(characterKey))\n  useEffect(() => setBuildResult(database.buildResult.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildResult.follow(characterKey, (k, r, v) => r === \"update\" && setBuildResult(v)),\n    [characterKey, setBuildResult, database])\n  const buildResultDispatch = useCallback((action: Partial<IBuildResult>) => characterKey && database.buildResult.set(characterKey, action), [characterKey, database],)\n\n  return { buildResult, buildResultDispatch }\n}\n","import { DotProps } from \"recharts\"\nimport EnhancedPoint from \"./EnhancedPoint\"\n\ntype CustomShapeType = \"circle\" | \"diamond\" | \"square\"\ntype CustomDotProps = DotProps & {\n  selectedPoint: EnhancedPoint | undefined\n  payload?: EnhancedPoint\n  radiusSelected?: number\n  radiusUnselected?: number\n  colorSelected?: string\n  colorUnselected: string\n  shape?: CustomShapeType\n}\nexport default function CustomDot({ cx, cy, payload, selectedPoint, radiusSelected = 6, radiusUnselected = 3, colorSelected = \"red\", colorUnselected, shape = \"circle\" }: CustomDotProps) {\n  if (!cx || !cy || !payload) {\n    return null\n  }\n\n  const isSelected = selectedPoint && selectedPoint.x === payload.x && selectedPoint.y === payload.y\n\n  return (\n    <g\n      className=\"custom-dot\"\n      data-chart-x={cx}\n      data-chart-y={cy}\n      data-x-value={payload.x}\n      data-y-value={payload.y}\n      data-radius={isSelected ? radiusUnselected : radiusSelected}\n    >\n      {!isSelected\n        ? <CustomShape id=\"customShapeUnselected\" shape={shape} cx={cx} cy={cy} r={radiusUnselected} fill={colorUnselected} />\n        : <>\n          <CustomShape id=\"customShapeSelected\" shape={shape} cx={cx} cy={cy} r={radiusSelected / 2} fill={colorSelected} />\n          <CustomShape id=\"customShapeBorder\" shape={shape} cx={cx} cy={cy} r={radiusSelected} fill=\"none\" stroke={colorSelected} />\n        </>\n      }\n    </g>\n  )\n}\nfunction CustomShape({ shape, id, cx, cy, r, fill, stroke}: { shape: CustomShapeType, id?: string, cx: number, cy: number, r: number, fill?: string, stroke?: string }) {\n  switch(shape) {\n    case \"circle\":\n      return <circle id={id} cx={cx} cy={cy} r={r} fill={fill} stroke={stroke} />\n    case \"square\":\n      return <rect id={id} x={cx-r} y={cy-r} width={r*2} height={r*2} fill={fill} stroke={stroke} />\n    case \"diamond\":\n      return <polygon id={id} points={`${cx},${cy+r*2.5} ${cx+r*1.5},${cy} ${cx},${cy-r*2.5} ${cx-r*1.5},${cy}`} fill={fill} stroke={stroke} />\n  }\n}\n","import { Button, CardContent, ClickAwayListener, Grid, Skeleton, Stack, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { TooltipProps } from \"recharts\"\nimport ArtifactCardPico from \"../../../../../../Components/Artifact/ArtifactCardPico\"\nimport BootstrapTooltip from \"../../../../../../Components/BootstrapTooltip\"\nimport CardDark from \"../../../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../../../Components/CloseButton\"\nimport SqBadge from \"../../../../../../Components/SqBadge\"\nimport { CharacterContext } from \"../../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../../Context/DataContext\"\nimport { GraphContext } from \"../../../../../../Context/GraphContext\"\nimport { DatabaseContext } from \"../../../../../../Database/Database\"\nimport { input } from \"../../../../../../Formula\"\nimport { Unit, valueString } from \"../../../../../../KeyMap\"\nimport { ICachedArtifact } from \"../../../../../../Types/artifact\"\nimport { allSlotKeys } from \"../../../../../../Types/consts\"\nimport useBuildResult from \"../../useBuildResult\"\nimport { ArtifactSetBadges } from \"../ArtifactSetBadges\"\nimport EnhancedPoint from \"./EnhancedPoint\"\n\ntype CustomTooltipProps = TooltipProps<number, string> & {\n  xLabel: Displayable\n  xUnit: Unit | undefined\n  yLabel: Displayable\n  yUnit: Unit | undefined\n  selectedPoint: EnhancedPoint | undefined\n  setSelectedPoint: (pt: EnhancedPoint | undefined) => void\n  addBuildToList: (build: string[]) => void\n}\nexport default function CustomTooltip({ xLabel, xUnit, yLabel, yUnit, selectedPoint, setSelectedPoint, addBuildToList, ...tooltipProps }: CustomTooltipProps) {\n  const { database } = useContext(DatabaseContext)\n  const { data } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { graphBuilds } = useContext(GraphContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildResult: { builds } } = useBuildResult(characterKey)\n\n  const canAddBuild = useMemo(() => ![...builds, ...(graphBuilds ?? [])].some(artiIds =>\n    artiIds.every(id => selectedPoint?.artifactIds.includes(id))\n  ), [builds, graphBuilds, selectedPoint])\n\n  const artifactsBySlot: { [slot: string]: ICachedArtifact } = useMemo(() =>\n    selectedPoint && selectedPoint.artifactIds && Object.fromEntries(selectedPoint.artifactIds\n      .map(id => {\n        const artiObj = database.arts.get(id)\n        return [artiObj?.slotKey, artiObj]\n      })\n      .filter(arti => arti)\n    ),\n    [database.arts, selectedPoint]\n  )\n  const clickAwayHandler = useCallback((e) => {\n    if (!(e.target.id.includes(\"customShape\") || e.target.id.includes(\"chartContainer\"))) {\n      setSelectedPoint(undefined)\n    }\n  }, [setSelectedPoint])\n\n  const currentlyEquipped = artifactsBySlot && allSlotKeys.every(slotKey => artifactsBySlot[slotKey]?.id === data.get(input.art[slotKey].id).value)\n\n  if (tooltipProps.active && selectedPoint) {\n    return <ClickAwayListener onClickAway={clickAwayHandler}>\n      <CardDark sx={{ minWidth: \"400px\", maxWidth: \"400px\" }} onClick={(e) => e.stopPropagation()}>\n        <CardContent>\n          <Stack gap={1}>\n            <Stack direction=\"row\" alignItems=\"start\" gap={1}>\n              <Stack spacing={0.5} flexGrow={99}>\n                {currentlyEquipped && <SqBadge color=\"info\"><strong>{t(\"currentlyEquippedBuild\")}</strong></SqBadge>}\n                <Suspense fallback={<Skeleton width={300} height={50} />}>\n                  <ArtifactSetBadges artifacts={Object.values(artifactsBySlot)} currentlyEquipped={currentlyEquipped} />\n                </Suspense>\n              </Stack>\n              <Grid item flexGrow={1} />\n              <CloseButton onClick={() => setSelectedPoint(undefined)} />\n            </Stack>\n            <Grid container direction=\"row\" spacing={0.75} columns={5}>\n              {allSlotKeys.map(key =>\n                <Grid item key={key} xs={1}>\n                  <Suspense fallback={<Skeleton width={75} height={75} />}>\n                    <ArtifactCardPico artifactObj={artifactsBySlot[key]} slotKey={key} />\n                  </Suspense>\n                </Grid>\n              )}\n            </Grid>\n            <Typography><strong>{xLabel}</strong>: {valueString(xUnit === \"%\" ? selectedPoint.x / 100 : selectedPoint.x, xUnit)}</Typography>\n            <Typography><strong>{yLabel}</strong>: {valueString(yUnit === \"%\" ? selectedPoint.y / 100 : selectedPoint.y, yUnit)}</Typography>\n            <BootstrapTooltip title={canAddBuild ? \"\" : t(\"tcGraph.buildAlreadyInList\")} placement=\"top\">\n              <span>\n                <Button sx={{ width: \"100%\" }} disabled={!canAddBuild} color=\"info\" onClick={() => addBuildToList(selectedPoint.artifactIds)}>{t(\"addBuildToList\")}</Button>\n              </span>\n            </BootstrapTooltip>\n          </Stack>\n        </CardContent>\n      </CardDark>\n    </ClickAwayListener>\n  }\n\n  return null\n}\n","export default class EnhancedPoint {\n  public x: number\n  public trueY?: number\n  public artifactIds: string[]\n  public min?: number\n  public current?: number\n  public highlighted?: number\n\n  public constructor(x: number, y: number, artifactIds: string[]) {\n    this.x = x\n    this.trueY = y\n    this.artifactIds = artifactIds\n  }\n\n  public get y(): number {\n    return (this.trueY || this.current || this.highlighted) as number\n  }\n  public set y(y: number | undefined) {\n    this.trueY = y\n  }\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Replay } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, Slider, styled, Typography } from '@mui/material';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CartesianGrid, ComposedChart, Label, Legend, LegendType, Line, ResponsiveContainer, Scatter, Tooltip, XAxis, YAxis } from 'recharts';\nimport BootstrapTooltip from '../../../../../../Components/BootstrapTooltip';\nimport CardDark from '../../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../../Components/Card/CardLight';\nimport InfoTooltip from '../../../../../../Components/InfoTooltip';\nimport { CharacterContext } from '../../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../../Context/DataContext';\nimport { GraphContext } from '../../../../../../Context/GraphContext';\nimport { ArtCharDatabase, DatabaseContext } from '../../../../../../Database/Database';\nimport { input } from '../../../../../../Formula';\nimport { NumNode } from '../../../../../../Formula/type';\nimport { valueString } from '../../../../../../KeyMap';\nimport { allSlotKeys, SlotKey } from '../../../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue } from '../../../../../../Util/Util';\nimport useBuildResult from '../../useBuildResult';\nimport OptimizationTargetSelector from '../OptimizationTargetSelector';\nimport CustomDot from './CustomDot';\nimport CustomTooltip from './CustomTooltip';\nimport EnhancedPoint from './EnhancedPoint';\n\nexport type Point = {\n  x: number\n  y: number\n  artifactIds: string[]\n  min?: number\n}\ntype ChartCardProps = {\n  plotBase?: string[]\n  setPlotBase: (path: string[] | undefined) => void\n  disabled?: boolean\n  showTooltip?: boolean\n}\nexport default function ChartCard({ plotBase, setPlotBase, disabled = false, showTooltip = false }: ChartCardProps) {\n  const { t } = useTranslation([\"page_character_optimize\", \"ui\"])\n  const { data } = useContext(DataContext)\n  const { chartData } = useContext(GraphContext)\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { graphBuilds } = useContext(GraphContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildResult: { builds } } = useBuildResult(characterKey)\n\n  const [sliderLow, setSliderLow] = useState(-Infinity)\n  const [sliderHigh, setSliderHigh] = useState(Infinity)\n  const setSlider = useCallback(\n    (_e: unknown, value: number | number[]) => {\n      if (typeof value === \"number\") throw new TypeError()\n      const [l, h] = value\n      setSliderLow(l)\n      setSliderHigh(h)\n    },\n    [setSliderLow, setSliderHigh]\n  )\n  useEffect(() => { setSliderLow(-Infinity); setSliderHigh(Infinity) }, [chartData])\n\n  const { displayData, downloadData, sliderMin, sliderMax } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    let sliderMin = Infinity\n    let sliderMax = -Infinity\n    const currentBuild = objectKeyValueMap(allSlotKeys, slotKey => [slotKey, data?.get(input.art[slotKey].id).value ?? \"\"])\n    const highlightedBuildsSlotMap = [...builds, ...(graphBuilds ?? [])].map(artiIds => convertArtiIdsToArtiSlotMap(artiIds, database))\n    // Shape the data so we know the current and highlighted builds\n    const points = chartData.data.map(({ value: y, plot: x, artifactIds }) => {\n      if (x === undefined) return null\n      if (x < sliderMin) sliderMin = x\n      if (x > sliderMax) sliderMax = x\n      const enhancedDatum: EnhancedPoint = new EnhancedPoint(x, y, artifactIds)\n      const datumSlotMap = convertArtiIdsToArtiSlotMap(artifactIds, database)\n\n      const isCurrentBuild = allSlotKeys.every(slotKey => currentBuild[slotKey] === datumSlotMap[slotKey])\n      if (isCurrentBuild) {\n        enhancedDatum.current = y\n        // Remove the Y-value so there are not 2 dots displayed for these builds\n        enhancedDatum.y = undefined\n        return enhancedDatum\n      }\n\n      const isHighlightedBuild = highlightedBuildsSlotMap.some(highlightedSlotMap =>\n        allSlotKeys.every(slotKey => highlightedSlotMap[slotKey] === datumSlotMap[slotKey])\n      )\n      if (isHighlightedBuild) {\n        enhancedDatum.highlighted = y\n        // Remove the Y-value so there are not 2 dots displayed for these builds\n        enhancedDatum.y = undefined\n      }\n      return enhancedDatum\n    })\n    .sort((a, b) => a!.x - b!.x) as EnhancedPoint[]\n\n    const minimumData: EnhancedPoint[] = []\n    for (const point of points) {\n      let last: EnhancedPoint | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    // From my limited testing, using multiple data sources makes the graph behave strangely though.\n    if (minimumData[0]?.x !== points[0]?.x)\n      points[0].min = minimumData[0].y\n    minimumData.forEach(pt => { pt.min = pt.y })\n\n    const downloadData = {\n      minimum: minimumData.map(point => [point.x, point.y]),\n      allData: points.map(point => [point.x, point.y]),\n    }\n    return { displayData: points.filter(pt => pt && pt.x >= sliderLow && pt.x <= sliderHigh), downloadData, sliderMin, sliderMax }\n  }, [chartData, builds, data, database, graphBuilds, sliderLow, sliderHigh])\n\n  const plotBaseNode = plotBase && objPathValue(data?.getDisplay(), plotBase)\n  const invalidTarget = plotBase && (!plotBaseNode || plotBaseNode.isEmpty)\n\n  const buttonText = invalidTarget\n    ? t(\"page_character_optimize:targetSelector.invalidTarget\")\n    : t(\"page_character_optimize:targetSelector.selectGraphTarget\")\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography >{t`tcGraph.vs`}</Typography>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip placement=\"top\" title={showTooltip ? t(\"page_character_optimize:selectTargetFirst\") : \"\"}>\n            <span>\n              <OptimizationTargetSelector\n                optimizationTarget={plotBase}\n                setTarget={target => setPlotBase(target)}\n                defaultText={buttonText}\n                disabled={disabled}\n              />\n            </span>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title={!plotBase ? \"\" : t(\"ui:reset\")} placement=\"top\">\n            <span><Button color=\"error\" onClick={() => setPlotBase(undefined)} disabled={!plotBase}>\n              <Replay />\n            </Button></span>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <InfoTooltip placement=\"top\" title={t(\"page_character_optimize:tcGraph.desc\")} />\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button size='small' startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>{t`tcGraph.showStatThr`}</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button size='small' color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>{t`tcGraph.downloadData`}</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {displayData && displayData.length && <Divider />}\n    {chartData && displayData && displayData.length && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n      {displayData.length > 1 && <Slider\n        marks\n        value={[sliderLow, sliderHigh]}\n        onChange={setSlider}\n        onChangeCommitted={setSlider}\n        min={sliderMin}\n        max={sliderMax}\n        step={(sliderMax - sliderMin) / 20}\n        valueLabelDisplay=\"auto\"\n        valueLabelFormat={n => valueString(chartData.plotNode.info?.unit === \"%\" ? n / 100 : n, chartData.plotNode.info?.unit)}\n        sx={{ ml: \"6%\", width: \"93%\" }}\n      />}\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\n\nconst optTargetColor = \"#8884d8\"\nconst highlightedColor = \"cyan\"\nconst currentColor = \"#46a046\"\nconst lineColor = \"#ff7300\"\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: EnhancedPoint[]\n  plotNode: NumNode\n  valueNode: NumNode\n  showMin: boolean\n}) {\n  const { graphBuilds, setGraphBuilds } = useContext(GraphContext)\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [selectedPoint, setSelectedPoint] = useState<EnhancedPoint>()\n  const addBuildToList = useCallback((build: string[]) => setGraphBuilds([...(graphBuilds ?? []), build]), [setGraphBuilds, graphBuilds])\n  const chartOnClick = useCallback(props => {\n    if (props && props.chartX && props.chartY) setSelectedPoint(getNearestPoint(props.chartX, props.chartY, 20, displayData))\n  }, [setSelectedPoint, displayData])\n\n  // Below works because character translation should already be loaded\n  const xLabelValue = getLabelFromNode(plotNode, t)\n  const yLabelValue = getLabelFromNode(valueNode, t)\n\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart id=\"chartContainer\" data={displayData} onClick={chartOnClick} style={{ cursor: \"pointer\" }}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis\n        dataKey=\"x\"\n        scale=\"linear\"\n        unit={plotNode.info?.unit}\n        domain={[\"auto\", \"auto\"]}\n        tick={{ fill: 'white' }}\n        type=\"number\"\n        tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)}\n        label={<Label fill=\"white\" dy={10}>{xLabelValue}</Label>}\n        height={50}\n      />\n      <YAxis\n        name=\"DMG\"\n        domain={[\"auto\", \"auto\"]}\n        unit={valueNode.info?.unit}\n        allowDecimals={false}\n        tick={{ fill: 'white' }}\n        type=\"number\"\n        label={<Label fill=\"white\" angle={-90} dx={-40}>{yLabelValue}</Label>}\n        width={100}\n      />\n      <Tooltip\n        content={<CustomTooltip\n          xLabel={xLabelValue}\n          xUnit={plotNode.info?.unit}\n          yLabel={yLabelValue}\n          yUnit={valueNode.info?.unit}\n          selectedPoint={selectedPoint}\n          setSelectedPoint={setSelectedPoint}\n          addBuildToList={addBuildToList}\n        />}\n        trigger=\"click\"\n        wrapperStyle={{ pointerEvents: \"auto\", cursor: \"auto\" }}\n        cursor={false}\n      />\n      <Legend payload={[\n        ...(showMin ? [{ id: \"min\", value: t`tcGraph.statReqThr`, type: \"line\" as LegendType, color: lineColor }] : []),\n        { id: \"trueY\", value: t`tcGraph.generatedBuilds`, type: \"circle\", color: optTargetColor },\n        { id: \"highlighted\", value: t`tcGraph.highlightedBuilds`, type: \"square\", color: highlightedColor },\n        { id: \"current\", value: t`tcGraph.currentBuild`, type: \"diamond\", color: currentColor },\n      ]}/>\n      {showMin && <Line\n        dataKey=\"min\"\n        stroke={lineColor}\n        type=\"stepBefore\"\n        connectNulls\n        strokeWidth={2}\n        isAnimationActive={false}\n        dot={false}\n        activeDot={false}\n      />}\n      <Scatter\n        dataKey=\"trueY\"\n        isAnimationActive={false}\n        shape={<CustomDot selectedPoint={selectedPoint} colorUnselected={optTargetColor} />}\n      />\n      <Scatter\n        dataKey=\"highlighted\"\n        isAnimationActive={false}\n        shape={<CustomDot shape=\"square\" selectedPoint={selectedPoint} colorUnselected={highlightedColor} />}\n      />\n      <Scatter\n        dataKey=\"current\"\n        isAnimationActive={false}\n        shape={<CustomDot shape=\"diamond\" selectedPoint={selectedPoint} colorUnselected={currentColor} />}\n      />\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n\nfunction convertArtiIdsToArtiSlotMap(artifactIds: string[], database: ArtCharDatabase) {\n  // Create partial mapping of slotkey -> build artifact\n  const partialArtiSlotMap: Dict<SlotKey, string> = Object.fromEntries(artifactIds.map(artiId => {\n    const arti = database.arts.get(artiId)\n    return arti ? [arti.slotKey, arti.id] : []\n  }))\n  // Fill in the blanks so we have a StrictDict<SlotKey, string>\n  return objectKeyValueMap(allSlotKeys, slotKey => [slotKey, partialArtiSlotMap[slotKey] ?? \"\"])\n}\n\nfunction getNearestPoint(clickedX: number, clickedY: number, threshold: number, data: EnhancedPoint[]) {\n  const nearestDomPtData = Array.from(document.querySelectorAll(\".custom-dot\"))\n    .reduce((domPtA, domPtB) => {\n      const { chartX: aChartX, chartY: aChartY } = (domPtA as any).dataset\n      const aDistance = Math.sqrt((clickedX - aChartX) ** 2 + (clickedY - aChartY) ** 2)\n      const { chartX: bChartX, chartY: bChartY } = (domPtB as any).dataset\n      const bDistance = Math.sqrt((clickedX - bChartX) ** 2 + (clickedY - bChartY) ** 2)\n      return aDistance <= bDistance\n        ? domPtA\n        : domPtB\n    })[\"dataset\"]\n\n  // Don't select a point too far away\n  const distance = Math.sqrt((clickedX - nearestDomPtData.chartX) ** 2 + (clickedY - nearestDomPtData.chartY) ** 2)\n  return distance < threshold\n    ? data.find(d => d.x === +nearestDomPtData.xValue && d.y === +nearestDomPtData.yValue)\n    : undefined\n}\n\nfunction getLabelFromNode(node: NumNode, t: any) {\n  return typeof node.info?.name === \"string\"\n    ? node.info.name\n    : `${t(`${node.info?.name?.props.ns}:${node.info?.name?.props.key18}`)}${node.info?.textSuffix ? ` ${node.info?.textSuffix}` : \"\"}`\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography, Box } from '@mui/material';\nimport { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StatColoredWithUnit } from '../../../../../Components/StatDisplay';\nimport StatIcon from '../../../../../Components/StatIcon';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong><StatColoredWithUnit statKey={mainStatKey} /></strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { CheckBox, CheckBoxOutlineBlank, DeleteForever } from \"@mui/icons-material\"\nimport { Button, ButtonGroup } from \"@mui/material\"\nimport { useCallback, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { StatFilters, StatFilterSetting } from \"../../../../../Database/DataManagers/BuildSettingData\"\nimport { NodeDisplay } from \"../../../../../Formula/uiData\"\nimport { objPathValue } from \"../../../../../Util/Util\"\nimport OptimizationTargetSelector from \"./OptimizationTargetSelector\"\n\ntype OptimizationTargetEditorListProps = {\n  statFilters: StatFilters\n  setStatFilters: (statFilters: StatFilters) => void\n  disabled: boolean\n}\n\nexport default function OptimizationTargetEditorList({ statFilters, setStatFilters, disabled = false }: OptimizationTargetEditorListProps) {\n  const setTarget = useCallback((path: string[], oldPath?: string[], oldIndex?: number) => {\n    const statFilters_ = { ...statFilters }\n    const oldPathStr = JSON.stringify(oldPath)\n    const oldFilterArr = oldPath ? [...statFilters[oldPathStr]!] : undefined\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...(statFilters[pathStr] ?? [])]\n    // Copy/create new setting\n    if (oldIndex !== undefined && oldFilterArr) filterArr.push(oldFilterArr[oldIndex])\n    else filterArr.push({ value: 0, disabled: false })\n    statFilters_[pathStr] = filterArr\n    // Remove old setting\n    if (oldIndex !== undefined && oldFilterArr) {\n      oldFilterArr.splice(oldIndex, 1)\n      if (!!oldFilterArr.length) statFilters_[oldPathStr] = oldFilterArr\n      else delete statFilters_[oldPathStr]\n    }\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const delTarget = useCallback((path: string[], index: number) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr.splice(index, 1)\n    if (!!filterArr.length) statFilters_[pathStr] = filterArr\n    else delete statFilters_[pathStr]\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const setTargetValue = useCallback((path: string[], index: number, value: number) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr[index] = { ...filterArr[index], value } as StatFilterSetting\n    statFilters_[pathStr] = filterArr\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  const setTargetDisabled = useCallback((path: string[], index: number, disabled: boolean) => {\n    const statFilters_ = { ...statFilters }\n    const pathStr = JSON.stringify(path)\n    const filterArr = [...statFilters[pathStr]!]\n    filterArr[index] = { ...filterArr[index], disabled } as StatFilterSetting\n    statFilters_[pathStr] = filterArr\n    setStatFilters({ ...statFilters_ })\n  }, [setStatFilters, statFilters])\n\n  return <>\n    {Object.entries(statFilters).flatMap(([pathStr, settings]) =>\n      settings?.map((setting, index) =>\n        <OptimizationTargetEditorItem path={JSON.parse(pathStr)} setting={setting} index={index} setTarget={setTarget} delTarget={delTarget} setValue={setTargetValue} setDisabled={setTargetDisabled} disabled={disabled} key={pathStr + index} />\n      )\n    )}\n    <OptimizationTargetEditorItem setTarget={setTarget} delTarget={delTarget} setValue={setTargetValue} setDisabled={setTargetDisabled} disabled={disabled} />\n  </>\n}\n\ntype OptimizationTargetEditorItemProps = {\n  path?: string[]\n  setting?: StatFilterSetting\n  index?: number\n  setTarget: (path: string[], oldPath?: string[], oldIndex?: number) => void\n  delTarget: (path: string[], index: number) => void\n  setValue: (path: string[], index: number, value: number) => void\n  setDisabled: (path: string[], index: number, disabled: boolean) => void\n  disabled: boolean\n}\nfunction OptimizationTargetEditorItem({ path, setting, index, setTarget, delTarget, setValue, setDisabled, disabled }: OptimizationTargetEditorItemProps) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { data } = useContext(DataContext)\n  const onChange = useCallback((val: number | undefined) => path && (index !== undefined) && setValue(path, index, val ?? 0), [setValue, path, index])\n  const buttonStyle = { p: 1, flexBasis: 30, flexGrow: 0, flexShrink: 0 }\n\n  const buildConstraintNode: NodeDisplay = objPathValue(data.getDisplay(), path ?? [])\n  const isPercent = buildConstraintNode?.info?.unit === \"%\"\n\n  return <ButtonGroup sx={{ \"& .MuiButtonGroup-grouped\": { minWidth: 24 }, width: \"100%\" }}>\n    {!!setting && !!path && (index !== undefined) && <Button sx={buttonStyle} color={setting.disabled ? \"secondary\" : \"success\"} onClick={() => setDisabled(path, index, !setting.disabled)} disabled={disabled}>\n      {setting.disabled ? <CheckBoxOutlineBlank /> : <CheckBox />}\n    </Button>}\n    <OptimizationTargetSelector showEmptyTargets optimizationTarget={path} setTarget={(target) => setTarget(target, path, index)} defaultText={t(\"targetSelector.selectBuildTarget\")} />\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: 150, flexGrow: 1 }}>\n      <CustomNumberInput\n        float\n        disabled={!path || disabled}\n        value={setting?.value}\n        placeholder=\"Stat Value\"\n        onChange={onChange}\n        sx={{ px: 1, }}\n        inputProps={{ sx: { textAlign: \"right\" } }}\n        endAdornment={isPercent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    {!!path && (index !== undefined) && <Button sx={buttonStyle} color=\"error\" onClick={() => delTarget(path, index)} disabled={disabled}>\n      <DeleteForever fontSize=\"small\" />\n    </Button>}\n  </ButtonGroup>\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { StatFilters } from \"../../../../../Database/DataManagers/BuildSettingData\"\nimport useBuildSetting from \"../useBuildSetting\"\nimport OptimizationTargetEditorList from \"./OptimizationTargetEditorList\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: StatFilters) => buildSettingDispatch({ statFilters }), [buildSettingDispatch])\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <OptimizationTargetEditorList statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../useBuildSetting\";\nconst CharacterSelectionModal = React.lazy(() => import('../../../../CharacterSelectionModal'))\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setTO] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setTO(to)), [database, setTO])\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => database.displayOptimize.set({ equipmentPriority }), [database])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{t`useEquipped.modal.title`}</Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <Suspense fallback={false}>\n      <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    </Suspense>\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Alert from \"@mui/material/Alert\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function WorkerErr() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  return <Alert severity=\"error\" variant=\"filled\" onClick={() => window.location.reload()} sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1,\n      cursor: \"pointer\"\n    }\n  }}>{t`workerLoadFailed`}</Alert>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { ArtSetExclusion } from \"../../../../Database/DataManagers/BuildSettingData\"\nimport { reducePolynomial } from \"../../../../Formula/addedUtils\"\nimport { ExpandedPolynomial, expandPoly, toNumNode } from \"../../../../Formula/expandPoly\"\nimport { LinearForm, minMaxWeightVec, toLinearUpperBound } from \"../../../../Formula/linearUpperBound\"\nimport { OptNode, precompute } from \"../../../../Formula/optimization\"\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\"\nimport { objectKeyMap, objectKeyValueMap, range } from \"../../../../Util/Util\"\nimport { ArtifactBuildDataVecDense, ArtifactsBySlot, ArtifactsBySlotVec, DynStat, filterArtsVec2, RequestFilter } from \"./common\"\n\nexport type UnionFilter = {\n  uType: true\n  filters: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>[]\n} | (RequestFilter & { uType: false })\n\nexport type RequestFilter2 = {\n  // filter: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>,\n  filterVec: StrictDict<SlotKey, number[]>,  // dict of list of indices (for some particular ArtifactsBySetVec)\n  lower: number[],  // length `k` list of lower bound stats\n  upper: number[],  // length `k` list of upper bound stats\n  minw: number[],   // length `l` list of minimum upper bound estimates\n  maxw: number[],   // length `l` list of maximum upper bound weights\n}\nexport type UnionFilter2 = RequestFilter2[]\nexport type ArtSetExclusionFull = Dict<Exclude<ArtifactSetKey, \"PrayersForDestiny\" | \"PrayersForIllumination\" | \"PrayersForWisdom\" | \"PrayersToSpringtime\"> | \"uniqueKey\", number[]>\n// export type SubProblem = SubProblemNC | SubProblemWC\nexport type SubProblem = SubProblemWC\nexport type SubProblemNC = {\n  cache: false,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  depth: number,\n}\nexport type SubProblemWC = {\n  cache: true,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  lin: LinearForm[],\n  // cachedCompute: CachedCompute,\n  depth: number,\n}\nexport type CachedCompute = {\n  maxEst: number[],\n  lin: LinearForm[],\n  lower: DynStat,\n  upper: DynStat\n}\n\nexport function countBuildsU(f: UnionFilter2): number {\n  return f.reduce((tot, { filterVec }) => tot + allSlotKeys.reduce((_count, slot) => _count * filterVec[slot].length, 1), 0)\n}\n\nexport function unionFilterUpperLower(f: UnionFilter2) {\n  const lower = [...f[0].lower]\n  const upper = [...f[0].upper]\n  const minw = [...f[0].minw]\n  const maxw = [...f[0].maxw]\n\n  for (let i = 1; i < f.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], f[i].lower[j])\n      upper[j] = Math.max(upper[j], f[i].upper[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], f[i].minw[j])\n      maxw[j] = Math.max(maxw[j], f[i].maxw[j])\n    }\n  }\n\n  return { lower, upper, minw, maxw }\n}\n\nexport function applyLinearForm(arts: ArtifactsBySlotVec, lin: LinearForm[]) {\n  const wixs: number[][] = []\n  const ws: number[][] = []\n  const baseC: number[] = []\n  lin.forEach(li => {\n    const ixs0: number[] = []\n    const w0: number[] = []\n    Object.entries(li.w).forEach(([k, w]) => {\n      ixs0.push(arts.keys.indexOf(k))\n      w0.push(w)\n    })\n    wixs.push(ixs0)\n    ws.push(w0)\n\n    baseC.push(ixs0.reduce((accum, ix, i) => accum + arts.base[ix] * w0[i], li.c))\n  })\n\n  arts.baseBuffer = baseC\n  allSlotKeys.forEach(slotKey => arts.values[slotKey].forEach(art =>\n    art.buffer = wixs.map((ixsi, i) => ixsi.reduce((accum, ix, j) => accum + art.values[ix] * ws[i][j], 0))\n  ))\n}\n\nexport function reduceSubProblem(arts: ArtifactsBySlotVec, threshold: number, subp: SubProblem): SubProblemWC | undefined {\n  const { optimizationTarget, constraints, artSetExclusion, depth } = subp\n  let { filters } = subp\n  let nodes = [...constraints.map(({ value }) => value), optimizationTarget]\n  const mins = constraints.map(({ min }) => min)\n\n  // 0. Check for never-feasible constraints\n  filters = filters.filter(({ maxw }) => {\n    if (mins.some((min, j) => maxw[j] < min)) return false\n    if (maxw[mins.length] < threshold) return false\n    return true\n  })\n  if (filters.length === 0) return undefined\n\n  // 0b. Calculate stat bounding box\n  const { lower, upper } = unionFilterUpperLower(filters)\n  const statsMin: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, lower[i]])))\n  const statsMax: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, upper[i]])))\n\n  nodes = reducePolynomial(nodes, statsMin, statsMax)\n\n  // 1. Check for always-feasible constraints.\n  const compute = precompute(constraints.map(({ value }) => toNumNode(value)), {}, n => n.path[1], 1)\n  const result = compute([{ id: '', values: statsMin }])\n\n  const active = mins.map((m, i) => m > result[i])\n\n  const newOptTarget = nodes.pop()!\n  const newConstraints = nodes.map((value, i) => ({ value, min: mins[i] })).filter((_, i) => active[i])\n  const newMins = newConstraints.map(({ min }) => min)\n\n  // 2. Check for never-active and always-active ArtSetExcl constraints.\n  const newArtExcl = {} as ArtSetExclusionFull\n  for (const [setKey, exclude] of Object.entries(artSetExclusion)) {\n    if (setKey === 'uniqueKey') {\n      // TODO: Check and exclude rainbow bullshit.\n      newArtExcl[setKey] = exclude\n      const feasibleKeys = allArtifactSets.filter(setKey => statsMax[setKey] > 0)\n      let feasible4sets = 0\n      let feasible2sets = 0\n      feasibleKeys.forEach(k => {\n        let allowedCnts = range(statsMin[k], statsMax[k])\n        if (artSetExclusion[k])\n          allowedCnts = allowedCnts.filter(cnt => !artSetExclusion[k].includes(cnt))\n\n        if (allowedCnts.includes(4) || allowedCnts.includes(5)) feasible4sets++\n        if (allowedCnts.includes(2) || allowedCnts.includes(3)) feasible2sets++\n      })\n\n      if (exclude.includes(5) && feasible4sets === 0) {\n        if (feasible2sets === 0) return; // No feasible 4sets or 2sets along with rainbow5 excluded is never satisfiable\n        if (exclude.includes(3) && feasible2sets < 2) return; // No 4sets, rainbow5 excluded, rainbow3 excluded means we need at least 2 2sets\n      }\n      continue\n    }\n    const reducedExcl = exclude.filter(n => statsMin[setKey] <= n && n <= statsMax[setKey])        // Cut away never-active\n    if (reducedExcl.includes(statsMin[setKey]) && reducedExcl.includes(statsMax[setKey])) return;  // Always active.\n    if (reducedExcl.length > 0) newArtExcl[setKey] = reducedExcl\n  }\n\n  // 3. Estimate Upper Bounds and re-check for never-feasible constraints\n  let f = [...newConstraints.map(({ value }) => value), newOptTarget]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  applyLinearForm(arts, lin)\n  const newFilters = filters\n    .map(filter => {\n      const { filterVec, lower, upper } = filter\n      const a = filterArtsVec2(arts, filter.filterVec)  // CANDIDATE for making this more efficient\n      const minww = [...a.baseBuffer]\n      const maxww = [...a.baseBuffer]\n      allSlotKeys.forEach(slotKey => {\n        const { minw, maxw } = slotUpperLowerVecW(a.values[slotKey])\n        for (let j = 0; j < minww.length; j++) {\n          minww[j] += minw[j]\n          maxww[j] += maxw[j]\n        }\n      })\n      return {\n        filterVec, lower, upper,\n        minw: minww, maxw: maxww,\n      }\n    })\n    .filter(({ maxw }) => {\n      if (newMins.some((min, j) => maxw[j] < min)) return false\n      if (maxw[mins.length] < threshold) return false\n      return true\n    })\n\n  return {\n    cache: true,\n    optimizationTarget: newOptTarget,\n    constraints: newConstraints,\n    artSetExclusion: newArtExcl,\n\n    depth, lin, filters: newFilters\n  }\n}\n\nexport function toArtifactBySlotVec(arts: ArtifactsBySlot): ArtifactsBySlotVec {\n  const allKeys = new Set(Object.keys(arts.base))\n  Object.values(arts.values).forEach(slotArts => {\n    slotArts.forEach(art => {\n      if (art.set) allKeys.add(art.set)\n      Object.keys(art.values).forEach(k => allKeys.add(k))\n    })\n  })\n\n  const allKeysList = [...allKeys]\n  const keys = [...allKeysList.filter(k => !(allArtifactSets as readonly string[]).includes(k)), ...allKeysList.filter(k => (allArtifactSets as readonly string[]).includes(k))]\n\n  return {\n    keys, baseBuffer: [],\n    base: keys.map(k => arts.base[k] ?? 0),\n    values: {\n      flower: arts.values.flower.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      plume: arts.values.plume.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      sands: arts.values.sands.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      goblet: arts.values.goblet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      circlet: arts.values.circlet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n    }\n  }\n}\n\ntype ProblemSetup = {\n  optimizationTargetNode: OptNode,\n  nodes: OptNode[],\n  minimum: number[],\n  artSetExclusion: ArtSetExclusion\n}\nexport function problemSetup(arts: ArtifactsBySlotVec, { optimizationTargetNode, nodes, minimum, artSetExclusion }: ProblemSetup): SubProblemWC {\n  const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n    if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n    return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n  })\n\n  const constraintsEP = nodes\n    .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n    .filter(x => x.min > -Infinity)\n  const opttargetEP = expandPoly(optimizationTargetNode)\n\n  const { lower, upper } = statsUpperLowerVec(arts)\n  const statsMin = Object.fromEntries(arts.keys.map((k, i) => [k, lower[i]]))\n  const statsMax = Object.fromEntries(arts.keys.map((k, i) => [k, upper[i]]))\n  let f = [...constraintsEP.map(({ value }) => value), opttargetEP]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  const minMaxEst = lin.map(li => minMaxWeightVec(arts, li))\n\n  console.log('-----------------------------------------------------------------------')\n  console.log('lin', lin)\n  console.log('-----------------------------------------------------------------------')\n\n  const filterVec = objectKeyMap(allSlotKeys, slotKey => {\n    return arts.values[slotKey].map((v, i) => i)\n  })\n\n  const initialProblem: SubProblemWC = {\n    cache: true,\n    optimizationTarget: opttargetEP,\n    constraints: constraintsEP,\n    artSetExclusion: artSetExclFull,\n\n    filters: [{\n      filterVec, lower, upper,\n      maxw: minMaxEst.map(({ maxw }) => maxw),\n      minw: minMaxEst.map(({ minw }) => minw),\n    }],\n    depth: 0,\n    lin,\n  }\n  const initialReducedProblem = reduceSubProblem(arts, -Infinity, initialProblem)\n  console.log(initialReducedProblem)\n\n  const statsBase = Object.fromEntries(arts.keys.map((k, i) => [k, arts.base[i]]))\n  evaluateExpandedPolynomial(opttargetEP, statsBase)\n\n  if (initialReducedProblem === undefined)\n    return initialProblem\n  return initialReducedProblem\n}\n\nexport function slotUpperLowerVec(arts: ArtifactBuildDataVecDense[]) {\n  const lower = [...arts[0].values]\n  const upper = [...arts[0].values]\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], arts[i].values[j])\n      upper[j] = Math.max(upper[j], arts[i].values[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { lower, upper, minw, maxw }\n}\nexport function slotUpperLowerVecW(arts: ArtifactBuildDataVecDense[]) {\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { minw, maxw }\n}\nexport function statsUpperLowerVec(a: ArtifactsBySlotVec) {\n  const lower = [...a.base]\n  const upper = [...a.base]\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVec(slotArts)\n    for (let i = 0; i < lower.length; i++) {\n      lower[i] += slotUL.lower[i]\n      upper[i] += slotUL.upper[i]\n    }\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { lower, upper, minw, maxw }\n}\nexport function statsUpperLowerVecW(a: ArtifactsBySlotVec) {\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVecW(slotArts)\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { minw, maxw }\n}\nexport function evaluateExpandedPolynomial(poly: ExpandedPolynomial, x: DynStat) {\n  // 1. evaluate each component node\n  const nodeVals = Object.fromEntries(Object.entries(poly.nodes).map(([fk, f]) => {\n    const compute = precompute([f], {}, n => n.path[1], 1);\n    return [fk, compute([{ id: '', values: x }])[0]]\n  }))\n\n  const termVals = poly.terms.map(({ coeff, terms }) => coeff * terms.reduce((v, t) => v * nodeVals[t], 1))\n  console.log('Value of {poly(x)}: ', termVals.reduce((a, b) => a + b))\n}\n","import { CheckBox, CheckBoxOutlineBlank, Close, DeleteForever, Science, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography, Pagination } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { GraphContext } from '../../../../Context/GraphContext';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { defThreads } from '../../../../Database/DataEntries/DisplayOptimizeEntry';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useMediaQueryUp from '../../../../ReactHooks/useMediaQueryUp';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { CharacterKey, charKeyToLocCharKey, LocationCharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { Build, mergeBuilds, mergePlot, pruneAll, pruneExclusion } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport WorkerErr from './Components/WorkerErr';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport { countBuildsU, problemSetup, SubProblem, toArtifactBySlotVec } from './subproblemUtil';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport useBuildResult from './useBuildResult';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const { setChartData, graphBuilds, setGraphBuilds } = useContext(GraphContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setDisplayOptimize] = useState(database.displayOptimize.get())\n  useEffect(() => database.displayOptimize.follow((r, to) => setDisplayOptimize(to)), [database, setDisplayOptimize])\n\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => database.displayOptimize.set({ threads }), [database],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  // Clear state when changing characters\n  useEffect(() => {\n    setBuildStatus({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 })\n  }, [characterKey])\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const { buildResult: { builds, buildDate }, buildResultDispatch } = useBuildResult(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const optimizationTargetNode = optimizationTarget && objPathValue(data?.getDisplay(), optimizationTarget)\n  const isSM = [\"xs\", \"sm\"].includes(useMediaQueryUp())\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const [workerErr, setWorkerErr] = useState(false)\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: Set<LocationCharacterKey> = new Set()\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) equipmentPriority.forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n      else equipmentPriority.slice(0, index).forEach(ek => cantTakeList.add(charKeyToLocCharKey(ek)))\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === charKeyToLocCharKey(characterKey)) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.has(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let unoptimizedOptimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!unoptimizedOptimizationTargetNode) return\n    const targetNode = unoptimizedOptimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters)\n      .flatMap(([pathStr, settings]) =>\n        settings\n          .filter(setting => !setting.disabled)\n          .map(setting => {\n            const filterNode: NumNode = objPathValue(workerData.display ?? {}, JSON.parse(pathStr))\n            const minimum = filterNode.info?.unit === \"%\" ? setting.value / 100 : setting.value // TODO: Conversion\n            return { value: filterNode, minimum: minimum }\n          })\n      )\n      .filter(x => x.value && x.minimum > -Infinity)\n\n    setChartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let unoptimizedNodes = [...valueFilter.map(x => x.value), unoptimizedOptimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    const plotBaseNumNode: NumNode = plotBase && objPathValue(workerData.display ?? {}, plotBase)\n    if (plotBaseNumNode) {\n      unoptimizedNodes.push(plotBaseNumNode)\n      minimum.push(-Infinity)\n    }\n\n    // BEGIN: problem pre-processing steps\n    const prepruneArts = arts\n    let nodes = optimize(unoptimizedNodes, workerData, ({ path: [p] }) => p !== \"dyn\")\n    nodes = pruneExclusion(nodes, artSetExclusion);\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // BNB vector pre-processing\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBaseNumNode ? nodes.pop() : undefined\n    let optimizationTargetNode = nodes.pop()!\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const constraints = nodes\n      .map((value, i) => ({ node: value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const artsVec = toArtifactBySlotVec(arts)\n    const initialProblem = problemSetup(artsVec, { optimizationTargetNode, nodes, minimum, artSetExclusion })\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 5\n    const minFilterCount = 2_000 // Don't split for single worker\n    // const maxRequestFilterInFlight = maxWorkers * 4\n    const maxRequestFilterInFlight = 1\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    // const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => ({ src: \"\", val: -Infinity })) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1].val }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuildsU(subproblem.filters)\n      // let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1].val, subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1].val, minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker(new URL('./BackgroundWorker.ts', import.meta.url))\n      workers.push(worker)\n      worker.addEventListener(\"error\", _ => {\n        console.error(\"Failed to load worker\")\n        setWorkerErr(true)\n        cancelToken.current()\n      });\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts, artsVec,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        constraints: constraints\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        setWorkerErr(false)\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              // wrap.buildValues = wrap.buildValues.filter(({ src }) => src !== data.source)\n              wrap.buildValues.push(...data.buildValues.map(val => ({ src: data.source, val })))\n              wrap.buildValues.sort((a, b) => b.val - a.val).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBaseNumNode) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        let data = Object.values(plotData)\n        if (targetNode.info?.unit === \"%\")\n          data = data.map(({ value, plot, artifactIds }) => ({ value: value * 100, plot, artifactIds })) as Build[]\n        if (plotBaseNumNode.info?.unit === \"%\")\n          data = data.map(({ value, plot, artifactIds }) => ({ value, plot: (plot ?? 0) * 100, artifactIds })) as Build[]\n        setChartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNumNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildResultDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildResultDispatch, maxWorkers, buildSetting, equipmentPriority, setChartData])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setChartData(undefined)\n  }, [buildSettingDispatch, setChartData])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  const targetSelector = <OptimizationTargetSelector\n    optimizationTarget={optimizationTarget}\n    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n    disabled={!!generatingBuilds}\n  />\n\n  const getLabel0 = useCallback((index) => <Trans t={t} i18nKey=\"graphBuildLabel\" count={index + 1}>Graph #{{ count: index + 1 }}</Trans>, [t])\n  const getLabel1 = useCallback((index) => `#${index + 1}`, [])\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"><Trans t={t} i18nKey=\"noArtis\">Oops! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifacts\">Artifacts</Link> page and add some!</Trans></Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>{t`mainStat.title`}</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Box>\n                <Typography variant=\"h6\">{t`mainStat.levelAssTooltip.title`}</Typography>\n                <Typography>{t`mainStat.levelAssTooltip.desc`}</Typography>\n              </Box>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button\n            fullWidth\n            startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={allowPartial ? \"success\" : \"secondary\"}\n            onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}\n            disabled={generatingBuilds}\n          >\n            {t`allowPartial`}\n          </Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>{t`levelFilter`}</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      {isSM && targetSelector}\n      <ButtonGroup>\n        {!isSM && targetSelector}\n        <DropdownButton disabled={generatingBuilds || !characterKey}\n          title={<Trans t={t} i18nKey=\"build\" count={maxBuildsToShow}>\n            {{ count: maxBuildsToShow }} Builds\n          </Trans>}>\n          <MenuItem>\n            <Typography variant=\"caption\" color=\"info.main\">\n              {t(\"buildDropdownDesc\")}\n            </Typography>\n          </MenuItem>\n          <Divider />\n          {maxBuildsToShowList.map(v => <MenuItem key={v}\n            onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>\n            <Trans t={t} i18nKey=\"build\" count={v}>\n              {{ count: v }} Builds\n            </Trans>\n          </MenuItem>)}\n        </DropdownButton>\n        <DropdownButton disabled={generatingBuilds || !characterKey}\n          sx={{ borderRadius: \"4px 0px 0px 4px\" }}\n          title={<Trans t={t} i18nKey=\"thread\" count={maxWorkers}>\n            {{ count: maxWorkers }} Threads\n          </Trans>}>\n          <MenuItem>\n            <Typography variant=\"caption\" color=\"info.main\">\n              {t(\"threadDropdownDesc\")}\n            </Typography>\n          </MenuItem>\n          <Divider />\n          {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n            onClick={() => setMaxWorkers(v)}>\n            <Trans t={t} i18nKey=\"thread\" count={v}>\n              {{ count: v }} Threads\n            </Trans>\n          </MenuItem>)}\n        </DropdownButton>\n        <BootstrapTooltip placement=\"top\" title={!optimizationTarget ? t(\"selectTargetFirst\") : \"\"}>\n          <span>\n            <Button\n              disabled={!characterKey || !optimizationTarget || !optimizationTargetNode || optimizationTargetNode.isEmpty}\n              color={generatingBuilds ? \"error\" : \"success\"}\n              onClick={generatingBuilds ? () => cancelToken.current() : generateBuilds}\n              startIcon={generatingBuilds ? <Close /> : <TrendingUp />}\n              sx={{ borderRadius: \"0px 4px 4px 0px\" }}\n            >{generatingBuilds ? t(\"generateButton.cancel\") : t(\"generateButton.generateBuilds\")}</Button>\n          </span>\n        </BootstrapTooltip>\n      </ButtonGroup>\n      {workerErr && <WorkerErr />}\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      <Box >\n        <ChartCard disabled={generatingBuilds || !optimizationTarget} plotBase={plotBase} setPlotBase={setPlotBase} showTooltip={!optimizationTarget} />\n      </Box>\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length + (graphBuilds ? graphBuilds.length : 0)}</strong> build generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => { setGraphBuilds(undefined); buildResultDispatch({ builds: [], buildDate: 0 }) }} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(_e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>Show new builds</ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        {graphBuilds && <BuildList builds={graphBuilds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} getLabel={getLabel0} setBuilds={setGraphBuilds} />}\n        <BuildList builds={builds} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} getLabel={getLabel1} />\n      </OptimizationTargetContext.Provider>\n    </DataContext.Provider>}\n  </Box>\n}\nconst maxArtsToShowPerPage = 5\nfunction BuildList({ builds, setBuilds, characterKey, data, compareData, disabled, getLabel }: {\n  builds: string[][]\n  setBuilds?: (builds: string[][] | undefined) => void\n  characterKey?: \"\" | CharacterKey\n  data?: UIData\n  compareData: boolean\n  disabled: boolean\n  getLabel: (index: number) => Displayable\n}) {\n  const deleteBuild = useCallback((index: number) => {\n    if (setBuilds) {\n      const builds_ = [...builds]\n      builds_.splice(index, 1)\n      setBuilds(builds_)\n    }\n  },\n  [builds, setBuilds])\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {builds?.map((build, index) => characterKey && data && <DataContextWrapper\n      key={index + build.join()}\n      characterKey={characterKey}\n      build={build}\n      oldData={data}\n    >\n      <BuildItemWrapper index={index} label={getLabel(index)} build={build} compareData={compareData} disabled={disabled} deleteBuild={setBuilds ? deleteBuild : undefined} />\n    </DataContextWrapper>\n    )}\n  </Suspense>, [builds, characterKey, data, compareData, disabled, getLabel, deleteBuild, setBuilds])\n  return list\n}\nfunction BuildItemWrapper({ index, label, build, compareData, disabled, deleteBuild }: {\n  index: number\n  label: Displayable\n  build: string[]\n  compareData: boolean\n  disabled: boolean\n  deleteBuild?: (index: number) => void\n}) {\n  const { t } = useTranslation(\"page_character_optimize\")\n  const location = useLocation()\n  const navigate = useNavigate()\n  const toTC = useCallback(() => {\n    const paths = location.pathname.split(\"/\")\n    paths.pop()\n    navigate(`${paths.join(\"/\")}/theorycraft`, { state: { build } })\n  }, [navigate, build, location.pathname])\n\n  return <BuildDisplayItem label={label} compareBuild={compareData} disabled={disabled}\n    extraButtonsLeft={<>\n      <Button color=\"info\" size=\"small\" startIcon={<Science />} onClick={toTC}>{t(\"theorycraftButton\")}</Button>\n      {deleteBuild && <Button color=\"error\" size=\"small\" startIcon={<DeleteForever />} onClick={() => deleteBuild(index)}>{t(\"removeBuildButton\")}</Button>}\n    </>}\n  />\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: string[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { database } = useContext(DatabaseContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  // Update the build when the build artifacts are changed.\n  const [dirty, setDirty] = useForceUpdate()\n  useEffect(() => database.arts.followAny((id) => build.includes(id) && setDirty()), [database, build, setDirty])\n  const buildsArts = useMemo(() => dirty && build.map(i => database.arts.get(i)!), [dirty, build, database])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, buildsArts)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n\nfunction PageBrowser({ numPages, pageIdx, setPageIdex }: {\n  numPages: number,\n  pageIdx: number,\n  setPageIdex: (e: any, n: number) => void\n}) {\n  return <CardDark ><CardContent>\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Pagination count={numPages} page={pageIdx + 1} onChange={setPageIdex} />\n      </Grid>\n      <Grid item>\n        page {pageIdx + 1} / {numPages}\n        {/* <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} /> */}\n      </Grid>\n    </Grid>\n  </CardContent></CardDark>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <CompareContent artId={artId} weaponId={weaponId} onHide={onHide} />\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\nfunction CompareContent({ artId, weaponId, onHide }: { artId?: string, weaponId?: string, onHide: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap).filter(a => a)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n      <BuildDisplayItem compareBuild={true} extraButtonsLeft={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /></>} extraButtonsRight={<><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n    </DataContext.Provider>}\n  </Suspense>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs, weaponSortMap } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (weaponSheets && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, weaponFilterConfigs(weaponSheets)))\n    .sort(sortFunction(weaponSortMap[\"level\"] ?? [], false, weaponSortConfigs(weaponSheets)))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, weaponSheets, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery, useTheme } from '@mui/material';\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useCharMeta from '../../../../ReactHooks/useCharMeta';\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, charKeyToLocCharKey, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const { rvFilter } = useCharMeta(characterKey)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editorProps={{}} canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: charKeyToLocCharKey(characterKey) })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: charKeyToLocCharKey(characterKey) })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const { rvFilter } = useCharMeta(characterKey)\n  const setRVFilter = useCallback(rvFilter => database.charMeta.set(characterKey, { rvFilter }), [database, characterKey],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useCharMeta from \"../../../../ReactHooks/useCharMeta\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { database } = useContext(DatabaseContext)\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const { favorite } = useCharMeta(characterKey)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {StatIcon[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => database.charMeta.set(characterKey, { favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <Box>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </Box>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery, useTheme } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from 'react';\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\",) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\") && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).filter(([_, node]) => !node.isEmpty).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { AutocompleteProps, CardContent, CardHeader, Divider, Grid, Skeleton, Typography, Box } from \"@mui/material\";\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport ThumbSide from \"../../../Components/Character/ThumbSide\";\nimport ColorText from \"../../../Components/ColoredText\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport GeneralAutocomplete, { GeneralAutocompleteOption } from \"../../../Components/GeneralAutocomplete\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../../Data/Characters/CharacterSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { DatabaseContext } from \"../../../Database/Database\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport useDBMeta from \"../../../ReactHooks/useDBMeta\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { CharacterKey, charKeyToCharName } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n]) => n && <Grid item xs={12} key={JSON.stringify(n.info)} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { t } = useTranslation(\"page_character\")\n  const { data } = useContext(DataContext)\n  const { character: { team } } = useContext(CharacterContext)\n  const teamCount = team.reduce((a, t) => a + (t ? 1 : 0), 1)\n  return <>\n    <CardLight>\n      <CardHeader title={<span>{t<string>(\"tabTeambuff.team_reso\")} <strong><ColorText color={teamCount >= 4 ? \"success\" : \"warning\"}>({teamCount}/4)</ColorText></strong> <InfoTooltip title={<Typography>{t`tabTeambuff.resonance_tip`}</Typography>} /></span>}\n        titleTypographyProps={{ variant: \"subtitle2\" }} />\n    </CardLight>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const team = useMemo(() => [activeCharacterKey, ...active.team].filter((t, i) => (i - 1) !== index), [active.team, activeCharacterKey, index])\n  const onClickHandler = useCharSelectionCallback()\n  const setTeammate = useCallback((charKey: CharacterKey | \"\") => characterDispatch({ type: \"team\", index, charKey }), [index, characterDispatch])\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <TeammateAutocomplete characterKey={teamMateKey} team={team}\n      setChar={setTeammate}\n      label={t(\"teammate\", { count: index + 1 })}\n    />\n    {teamMateKey && teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets(setKey)!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const sections = Object.values(characterSheet.talent).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n\nfunction TeammateAutocomplete({ characterKey, team, label, setChar, autoCompleteProps = {} }:\n  { characterKey, team: Array<CharacterKey | \"\">, label: string, setChar: (k: CharacterKey | \"\") => void, autoCompleteProps?: Omit<AutocompleteProps<GeneralAutocompleteOption<CharacterKey | \"\">, false, true, false>, \"renderInput\" | \"onChange\" | \"options\"> }) {\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\", \"sheet_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const { gender } = useDBMeta()\n  const characterSheets = usePromise(() => CharacterSheet.getAll, [])\n  const toText = useCallback((key: CharacterKey): string => key.startsWith(\"Traveler\") ? `${t(`charNames_gen:${charKeyToCharName(key, gender)}`)} (${t(`sheet_gen:element.${characterSheets?.(key, gender)?.elementKey}`)})` : t(`charNames_gen:${key}`), [characterSheets, t, gender])\n  const toImg = useCallback((key: CharacterKey | \"\") => key === \"\" ? <PersonAdd /> : characterSheets ? <ThumbSide src={characterSheets(key, gender)?.thumbImgSide} sx={{ pr: 1 }} /> : <></>, [characterSheets, gender])//\n  const isFavorite = useCallback((key: CharacterKey) => database.charMeta.get(key).favorite, [database])\n  const onDisable = useCallback(({ key }: { key: CharacterKey | \"\" }) => team.filter(t => t && t !== characterKey).includes(key) || (key.startsWith(\"Traveler\") && team.some((t, i) => t.startsWith(\"Traveler\"))), [team, characterKey])\n  const values: GeneralAutocompleteOption<CharacterKey | \"\">[] = useMemo(() => [{\n    key: \"\",\n    label: t`page_character:none`,\n  },\n  ...database.chars.keys\n    .map(v => ({ key: v, label: toText(v), favorite: isFavorite(v) }))\n    .sort((a, b) => {\n      if (a.favorite && !b.favorite) return -1\n      if (!a.favorite && b.favorite) return 1\n      return a.label.localeCompare(b.label)\n    })\n  ], [t, toText, isFavorite, database])\n  return <Suspense fallback={<Skeleton variant=\"text\" width={100} />}><GeneralAutocomplete size=\"small\" label={label} options={values} valueKey={characterKey} clearKey=\"\" onChange={setChar} getOptionDisabled={onDisable} toImg={toImg} {...autoCompleteProps} /></Suspense>\n}\n","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { CopyAll, DeleteForever, Info, Refresh } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardHeader, Divider, Grid, ListItem, MenuItem, Skeleton, Slider, Stack, ToggleButton, Typography } from \"@mui/material\";\nimport React, { Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocation } from \"react-router-dom\";\nimport { ArtifactSetSingleAutocomplete } from \"../../../../Components/Artifact/ArtifactAutocomplete\";\nimport ArtifactSetTooltip from \"../../../../Components/Artifact/ArtifactSetTooltip\";\nimport SetEffectDisplay from \"../../../../Components/Artifact/SetEffectDisplay\";\nimport { slotIconSVG } from \"../../../../Components/Artifact/SlotNameWIthIcon\";\nimport BootstrapTooltip from \"../../../../Components/BootstrapTooltip\";\nimport CardDark from \"../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ColorText from \"../../../../Components/ColoredText\";\nimport CustomNumberInput from \"../../../../Components/CustomNumberInput\";\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../../Components/DropdownMenu/DropdownButton\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../../../Components/FieldDisplay\";\nimport FontAwesomeSvgIcon from \"../../../../Components/FontAwesomeSvgIcon\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport LevelSelect from \"../../../../Components/LevelSelect\";\nimport RefinementDropdown from \"../../../../Components/RefinementDropdown\";\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\";\nimport { StatColoredWithUnit, StatWithUnit } from \"../../../../Components/StatDisplay\";\nimport StatIcon from \"../../../../Components/StatIcon\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../../Context/DataContext\";\nimport Artifact, { maxArtifactLevel } from \"../../../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../../../Data/Artifacts/ArtifactSheet\";\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\";\nimport { initCharTC } from \"../../../../Database/DataManagers/CharacterTCData\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../../../Formula/api\";\nimport { constant, percent } from \"../../../../Formula/utils\";\nimport KeyMap, { cacheValueString } from \"../../../../KeyMap\";\nimport useBoolState from \"../../../../ReactHooks/useBoolState\";\nimport usePromise from \"../../../../ReactHooks/usePromise\";\nimport useTeamData from \"../../../../ReactHooks/useTeamData\";\nimport { ICachedArtifact, MainStatKey, SubstatKey } from \"../../../../Types/artifact\";\nimport { ICharTC, ICharTCArtifactSlot } from \"../../../../Types/character\";\nimport { allSlotKeys, ArtifactRarity, ArtifactSetKey, SetNum, SlotKey, SubstatType, substatType, WeaponTypeKey } from \"../../../../Types/consts\";\nimport { ICachedWeapon } from \"../../../../Types/weapon\";\nimport { deepClone, objectMap } from \"../../../../Util/Util\";\nimport { defaultInitialWeaponKey } from \"../../../../Util/WeaponUtil\";\nimport useCharTC from \"./useCharTC\";\nconst WeaponSelectionModal = React.lazy(() => import('../../../../Components/Weapon/WeaponSelectionModal'))\n\ntype ISet = Partial<Record<ArtifactSetKey, 1 | 2 | 4>>\nexport default function TabTheorycraft() {\n  const { database } = useContext(DatabaseContext)\n  const { data: oldData } = useContext(DataContext)\n  const { character, character: { key: characterKey, compareData }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const data = useCharTC(characterKey, defaultInitialWeaponKey(characterSheet.weaponTypeKey))\n  const setData = useCallback((data: ICharTC) => database.charTCs.set(characterKey, data), [characterKey, database])\n  const resetData = useCallback(() => {\n    setData(initCharTC(defaultInitialWeaponKey(characterSheet.weaponTypeKey)))\n  }, [setData, characterSheet])\n  const setWeapon = useCallback(\n    (action: Partial<ICharTC[\"weapon\"]>) => {\n      setData({ ...data, weapon: { ...data.weapon, ...action } })\n    },\n    [setData, data],\n  )\n\n  const copyFrom = useCallback(\n    (eWeapon: ICachedWeapon, build: ICachedArtifact[]) => {\n      const newData = initCharTC(eWeapon.key)\n      newData.artifact.substats.type = data.artifact.substats.type\n\n      newData.weapon.level = eWeapon.level\n      newData.weapon.ascension = eWeapon.ascension\n      newData.weapon.refinement = eWeapon.refinement\n\n      const sets = {}\n      build.forEach(art => {\n        if (!art) return\n        const { slotKey, setKey, substats, mainStatKey, level, rarity } = art\n        newData.artifact.slots[slotKey].level = level\n        newData.artifact.slots[slotKey].statKey = mainStatKey\n        newData.artifact.slots[slotKey].rarity = rarity\n        sets[setKey] = (sets[setKey] ?? 0) + 1\n        substats.forEach(substat => {\n          if (substat.key) newData.artifact.substats.stats[substat.key] = (newData.artifact.substats.stats[substat.key] ?? 0) + substat.accurateValue\n        })\n      })\n      newData.artifact.sets = Object.fromEntries(Object.entries(sets).map(([key, value]) => [key,\n        value === 3 ? 2 :\n          value === 5 ? 4 :\n            value === 1 && !(key as string).startsWith(\"PrayersFor\") ? 0 : value\n      ]).filter(([key, value]) => value))\n      setData(newData)\n    },\n    [data, setData],\n  )\n  const location = useLocation()\n  const { build: locBuild } = (location.state as { build: string[] } | undefined) ?? { build: undefined }\n  useEffect(() => {\n    if (!locBuild) return\n    const eWeapon = database.weapons.get(character.equippedWeapon)!\n    copyFrom(eWeapon, locBuild.map(i => database.arts.get(i)!))\n    // WARNING: if copyFrom is included, it will cause a render loop due to its setData <---> data\n    // eslint-disable-next-line\n  }, [locBuild, database])\n\n  const copyFromEquipped = useCallback(\n    () => {\n      const eWeapon = database.weapons.get(character.equippedWeapon)!\n      copyFrom(eWeapon, Object.values(character.equippedArtifacts).map(a => database.arts.get(a)!).filter(a => a))\n    },\n    [database, character.equippedArtifacts, character.equippedWeapon, copyFrom],\n  )\n\n  const weapon: ICachedWeapon = useMemo(() => {\n    return {\n      ...data.weapon,\n      location: \"\",\n      lock: false,\n      id: \"\"\n    }\n  }, [data])\n  const setArtifact = useCallback((artifact: ICharTC[\"artifact\"]) => {\n    const data_ = deepClone(data)\n    data_.artifact = artifact\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstatsType = useCallback((t: SubstatType) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.type = t\n    setData(data_)\n  }, [data, setData])\n\n  const setSubstats = useCallback((setSubstats: Record<SubstatKey, number>) => {\n    const data_ = deepClone(data)\n    data_.artifact.substats.stats = setSubstats\n    setData(data_)\n  }, [data, setData])\n\n  const deferredData = useDeferredValue(data)\n  const overriderArtData = useMemo(() => {\n    const stats = { ...deferredData.artifact.substats.stats }\n    Object.values(deferredData.artifact.slots).forEach(({ statKey, rarity, level }) =>\n      stats[statKey] = (stats[statKey] ?? 0) + Artifact.mainStatValue(statKey, rarity, level))\n    return {\n      art: objectMap(stats, (v, k) => k.endsWith(\"_\") ? percent(v / 100) : constant(v)),\n      artSet: objectMap(deferredData.artifact.sets, v => constant(v)),\n    }\n  }, [deferredData])\n\n  const overrideWeapon: ICachedWeapon = useMemo(() => ({\n    id: \"\",\n    location: \"\",\n    key: data.weapon.key,\n    level: data.weapon.level,\n    ascension: data.weapon.ascension,\n    refinement: data.weapon.refinement,\n    lock: false\n  }), [data])\n  const teamData = useTeamData(characterKey, 0, overriderArtData, overrideWeapon)\n\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n    }\n  }, [charUIData, teamData])\n  const dataContextValueWithOld: dataContextObj | undefined = useMemo(() => {\n    if (!dataContextValue) return undefined\n    return {\n      ...dataContextValue,\n      oldData: compareData ? oldData : undefined,\n    }\n  }, [dataContextValue, compareData, oldData])\n  return <Stack spacing={1}>\n    <CardLight>\n      <Box sx={{ display: \"flex\", gap: 1, p: 1 }}>\n        <Box sx={{ flexGrow: 1, display: \"flex\", gap: 1 }}>\n          <Button color=\"info\" onClick={copyFromEquipped} startIcon={<CopyAll />}>Copy from equipped</Button>\n          <Button color=\"error\" onClick={resetData} startIcon={<Refresh />}>Reset</Button>\n        </Box>\n        <SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n          <ToggleButton value={false} disabled={!compareData}>Show TC stats</ToggleButton>\n          <ToggleButton value={true} disabled={compareData}>Compare vs. equipped</ToggleButton>\n        </SolidToggleButtonGroup>\n      </Box>\n    </CardLight>\n    {dataContextValue ? <DataContext.Provider value={dataContextValue}>\n      <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n        <Grid item sx={{ flexGrow: -1 }}  >\n          <WeaponEditorCard weapon={weapon} setWeapon={setWeapon} weaponTypeKey={characterSheet.weaponTypeKey} />\n          <ArtifactMainLevelCard artifactData={data.artifact} setArtifactData={setArtifact} />\n        </Grid>\n        <Grid item sx={{ flexGrow: 1 }}  >\n          <ArtifactSubCard substats={data.artifact.substats.stats} setSubstats={setSubstats} substatsType={data.artifact.substats.type} setSubstatsType={setSubstatsType} mainStatKeys={Object.values(data.artifact.slots).map(s => s.statKey)} />\n        </Grid>\n      </Grid >\n    </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    <CardLight sx={{ flexGrow: 1, p: 1 }}>\n      {dataContextValueWithOld ? <DataContext.Provider value={dataContextValueWithOld}>\n        <StatDisplayComponent />\n      </DataContext.Provider> : <Skeleton variant='rectangular' width='100%' height={500} />}\n    </CardLight>\n\n  </Stack>\n}\n\nfunction WeaponEditorCard({ weapon, setWeapon, weaponTypeKey }: { weapon: ICachedWeapon, weaponTypeKey: WeaponTypeKey, setWeapon: (action: Partial<ICharTC[\"weapon\"]>) => void }) {\n  const { key, level = 0, refinement = 1, ascension = 0 } = weapon\n  const weaponSheet = usePromise(() => WeaponSheet.get(key), [key])\n  const [show, onShow, onHide] = useBoolState()\n  const { data } = useContext(DataContext)\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <CardLight sx={{ p: 1, mb: 1 }} >\n    <WeaponSelectionModal ascension={ascension} show={show} onHide={onHide} onSelect={k => setWeapon({ key: k })} weaponTypeFilter={weaponTypeKey} />\n    <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n      <Box display=\"flex\" gap={1}>\n        {weaponSheet && <Box\n          className={`grad-${weaponSheet.rarity}star`}\n          component=\"img\"\n          src={weaponSheet.getImg(weapon.ascension)}\n          sx={{ flexshrink: 1, flexBasis: 0, maxWidth: \"30%\", borderRadius: 1 }}\n        />}\n        <Stack spacing={1} flexGrow={1}>\n          <Button fullWidth color=\"info\" sx={{ flexGrow: 1 }} onClick={onShow}><Box sx={{ maxWidth: \"10em\" }}>{weaponSheet?.name}</Box></Button>\n          {weaponSheet?.hasRefinement && <RefinementDropdown refinement={refinement} setRefinement={r => setWeapon({ refinement: r })} />}\n        </Stack>\n      </Box>\n      {weaponSheet && <LevelSelect level={level} ascension={ascension} setBoth={setWeapon} useLow={!weaponSheet.hasRefinement} />}\n      <CardDark >\n        <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        <Divider />\n        {weaponUIData && <FieldDisplayList>\n          {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n            const n = weaponUIData.get(node)\n            if (n.isEmpty || !n.value) return null\n            return <NodeFieldDisplay key={JSON.stringify(n.info)} node={n} component={ListItem} />\n          })}\n        </FieldDisplayList>}\n      </CardDark>\n      {data && weaponSheet?.document && <DocumentDisplay sections={weaponSheet.document} />}\n    </Box>\n  </CardLight >\n}\n\nfunction ArtifactMainLevelCard({ artifactData, setArtifactData }:\n  { artifactData: ICharTC[\"artifact\"], setArtifactData: (a: ICharTC[\"artifact\"]) => void }) {\n  const setSlot = useCallback((slotKey: SlotKey) => (slot: ICharTCArtifactSlot) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.slots[slotKey] = slot\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  const setArtSet = useCallback((artSet: ISet) => {\n    const artifactData_ = deepClone(artifactData)\n    artifactData_.sets = artSet\n    setArtifactData(artifactData_)\n  }, [artifactData, setArtifactData])\n\n  return <Stack spacing={1} >\n    <CardLight sx={{ p: 1 }}>\n      <Stack spacing={1}>\n        {allSlotKeys.map(s => <ArtifactMainLevelSlot key={s} slotKey={s} slot={artifactData.slots[s]} setSlot={setSlot(s)} />)}\n      </Stack>\n    </CardLight>\n    <Suspense fallback={<Skeleton variant='rectangular' width='100%' height={200} />}>\n      <ArtifactSetsEditor artSet={artifactData.sets} setArtSet={setArtSet} />\n    </Suspense>\n  </Stack>\n}\nfunction ArtifactMainLevelSlot({ slotKey, slot, setSlot: setSlotProp }: { slotKey: SlotKey, slot: ICharTCArtifactSlot, setSlot: (s: ICharTCArtifactSlot) => void }) {\n  const { level, statKey, rarity } = slot\n  const keys = Artifact.slotMainStats(slotKey)\n  const setSlot = useCallback((action: Partial<ICharTCArtifactSlot>) => {\n    setSlotProp({ ...slot, ...action })\n  }, [slot, setSlotProp])\n  const setRarity = useCallback(\n    (r: ArtifactRarity) => {\n      const mLvl = maxArtifactLevel[r] ?? 0\n      if (level > mLvl) setSlot({ rarity: r, level: mLvl })\n      else setSlot({ rarity: r })\n    }, [level, setSlot])\n\n  return <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n    <FontAwesomeSvgIcon icon={slotIconSVG[slotKey]} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"5em\", flexGrow: 1, display: \"flex\" }}>\n      {keys.length === 1 ?\n        <Box p={1} justifyContent=\"center\" alignItems=\"center\" width=\"100%\" display=\"flex\" gap={1}>{StatIcon[keys[0]]}{KeyMap.getStr(keys[0])}</Box> :\n        <DropdownButton sx={{ px: 0 }} fullWidth title={<StatWithUnit statKey={statKey} />} color={KeyMap.getVariant(statKey) ?? \"success\"}>\n          {keys.map(msk =>\n            <MenuItem key={msk} disabled={statKey === msk} onClick={() => setSlot({ statKey: msk })}>\n              <StatColoredWithUnit statKey={msk} />\n            </MenuItem>)}\n        </DropdownButton>}\n    </CardDark>\n    <DropdownButton sx={{ px: 0 }} title={<span>{rarity} <FontAwesomeIcon icon={faStar} /></span>} >\n      {[5, 4, 3].map(r =>\n        <MenuItem key={r} disabled={rarity === r} onClick={() => setRarity(r as ArtifactRarity)}>\n          <span>{r} <FontAwesomeIcon icon={faStar} /></span>\n        </MenuItem>)}\n    </DropdownButton>\n    <CustomNumberInput startAdornment=\"+\" value={level} color={Artifact.levelVariant(level)} onChange={l => l !== undefined && setSlot({ level: l })} sx={{ borderRadius: 1, pl: 1, my: 0, height: \"100%\" }} inputProps={{ sx: { pl: 0.5, width: \"2em\" }, max: 20, min: 0 }} />\n    <CardDark sx={{ height: \"100%\", minWidth: \"4em\" }}>\n      <Box p={1} textAlign=\"center\">{`${cacheValueString(Artifact.mainStatValue(statKey, rarity, level), KeyMap.unit(statKey))}${KeyMap.unit(statKey)}`}</Box>\n    </CardDark>\n  </Box>\n}\n\nfunction ArtifactSetsEditor({ artSet, setArtSet }: { artSet: ISet, setArtSet(artSet: ISet) }) {\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const setSet = useCallback((setKey: ArtifactSetKey | \"\") => {\n    if (!setKey || !artifactSheets) return\n    setArtSet({ ...artSet, [setKey]: parseInt(Object.keys(artifactSheets(setKey).setEffects)[0]) })\n  }, [artSet, setArtSet, artifactSheets])\n\n  const setValue = useCallback((setKey: ArtifactSetKey) => (value: 1 | 2 | 4) => setArtSet({ ...artSet, [setKey]: value }), [artSet, setArtSet])\n  const deleteValue = useCallback((setKey: ArtifactSetKey) => () => {\n    const { [setKey]: _, ...rest } = artSet\n    setArtSet({ ...rest })\n  }, [artSet, setArtSet])\n\n  const remaining = 5 - Object.values(artSet).reduce((a, b) => a + b, 0)\n\n  return <Stack spacing={1} sx={{ flexGrow: 1 }}>\n    {Object.entries(artSet).map(([setKey, value]) => <ArtifactSetEditor key={setKey} setKey={setKey} value={value} setValue={setValue(setKey)} deleteValue={deleteValue(setKey)} remaining={remaining} />)}\n    <CardLight sx={{ flexGrow: 1 }}>\n      <ArtifactSetSingleAutocomplete\n        showDefault\n        disableClearable\n        size=\"small\"\n        artSetKey={\"\"}\n        setArtSetKey={setSet}\n        sx={(theme) => ({\n          flexGrow: 1,\n          \".MuiFilledInput-root\": {\n            borderBottomRightRadius: theme.shape.borderRadius,\n            borderBottomLeftRadius: theme.shape.borderRadius\n          }\n        })}\n        defaultText={\"New Artifact Set\"}\n        disable={(setKey) => Object.keys(artSet).includes(setKey) || !artifactSheets?.(setKey) || Object.keys(artifactSheets(setKey).setEffects).every(n => parseInt(n) > remaining)}\n      />\n    </CardLight>\n\n  </Stack>\n}\nfunction ArtifactSetEditor({ setKey, value, setValue, deleteValue, remaining }: { setKey: ArtifactSetKey, value: 1 | 2 | 4, setValue: (v: 1 | 2 | 4) => void, deleteValue: () => void, remaining: number }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (value < 4 || !artifactSheet) return []\n    return Object.keys(artifactSheet.setEffects).filter(setNumKey => artifactSheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [artifactSheet, value])\n\n  if (!artifactSheet) return null\n  return <CardLight>\n    <Box display=\"flex\">\n      <ArtifactSetTooltip artifactSheet={artifactSheet} numInSet={value}>\n        <Box flexGrow={1} p={1} display=\"flex\" gap={1} alignItems=\"center\">\n          <ImgIcon size={2} sx={{ m: -1 }} src={artifactSheet.defIconSrc} />\n          <Box >{artifactSheet.setName}</Box>\n          <Info />\n        </Box>\n      </ArtifactSetTooltip>\n      <ButtonGroup>\n        <DropdownButton size=\"small\" title={<Box whiteSpace=\"nowrap\">{value}-set</Box>}>\n          {Object.keys(artifactSheet.setEffects).map(setKey => parseInt(setKey)).map(setKey =>\n            <MenuItem key={setKey} disabled={value === setKey || setKey > (remaining + value)} onClick={() => setValue(setKey as 1 | 2 | 4)}>{setKey}-set</MenuItem>\n          )}\n        </DropdownButton>\n        <Button color=\"error\" size=\"small\" onClick={deleteValue}>\n          <DeleteForever />\n        </Button>\n      </ButtonGroup>\n    </Box>\n    {!!set4CondNums.length && <Stack spacing={1} sx={{ p: 1 }}>\n      {set4CondNums.map(setNumKey =>\n        <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n      )}\n    </Stack>}\n  </CardLight>\n}\nfunction ArtifactSubCard({ substats, setSubstats, substatsType, setSubstatsType, mainStatKeys }: { substats: Record<SubstatKey, number>, setSubstats: (substats: Record<SubstatKey, number>) => void, substatsType: SubstatType, setSubstatsType: (t: SubstatType) => void, mainStatKeys: MainStatKey[] }) {\n  const setValue = useCallback((key: SubstatKey) => (v: number) => setSubstats({ ...substats, [key]: v }), [substats, setSubstats])\n  const { t } = useTranslation(\"page_character\")\n  const rv = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k)), 0) * 100\n  const rolls = Object.entries(substats).reduce((t, [k, v]) => t + (v / Artifact.substatValue(k, undefined, substatsType)), 0)\n  return <CardLight sx={{ p: 1, height: \"100%\" }}>\n    <Box sx={{ mb: 1, display: \"flex\", gap: 1 }}>\n      <DropdownButton fullWidth title={t(`tabTheorycraft.substatType.${substatsType}`)}>\n        {substatType.map(st => <MenuItem key={st} disabled={substatsType === st} onClick={() => setSubstatsType(st)}>{t(`tabTheorycraft.substatType.${st}`)}</MenuItem>)}\n      </DropdownButton>\n      <BootstrapTooltip title={<Typography>{t`tabTheorycraft.maxTotalRolls`}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", py: 0.5, px: 1, minWidth: \"15em\", whiteSpace: \"nowrap\", display: \"flex\", gap: 2, justifyContent: \"flex-end\", alignItems: \"center\" }}>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >Rolls: <strong>{rolls.toFixed(0)}</strong></ColorText>\n          <ColorText color={rolls > 45 ? \"warning\" : undefined} >RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Stack spacing={1}>\n      {Object.entries(substats).map(([k, v]) => <ArtifactSubstatEditor key={k} statKey={k} value={v} setValue={setValue(k)} substatsType={substatsType} mainStatKeys={mainStatKeys} />)}\n    </Stack>\n  </CardLight>\n}\nfunction ArtifactSubstatEditor({ statKey, value, setValue, substatsType, mainStatKeys }: { statKey: SubstatKey, value: number, setValue: (v: number) => void, substatsType: SubstatType, mainStatKeys: MainStatKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const substatValue = Artifact.substatValue(statKey, 5, substatsType)\n  const [rolls, setRolls] = useState(() => value / substatValue)\n  useEffect(() => setRolls(value / substatValue), [value, substatValue])\n\n  const unit = KeyMap.unit(statKey)\n  const displayValue = rolls * substatValue\n\n  const rv = (rolls * substatValue) / Artifact.substatValue(statKey) * 100\n  const numMains = mainStatKeys.reduce((t, ms) => t + (ms === statKey ? 1 : 0), 0)\n  const maxRolls = (5 - numMains) * 6\n  // 0.0001 to nudge float comparasion\n  const invalid = (rolls - 0.0001) > maxRolls\n  const setRValue = useCallback((r: number) => setValue(r * substatValue), [setValue, substatValue])\n\n  return <Stack spacing={0.5}>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CardDark sx={{ p: 0.5, minWidth: \"11em\", flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        {StatIcon[statKey]}{KeyMap.getStr(statKey)}{KeyMap.unit(statKey)}\n      </CardDark>\n      <BootstrapTooltip title={<Typography>{t(numMains ? `tabTheorycraft.maxRollsMain` : `tabTheorycraft.maxRolls`, { value: maxRolls })}</Typography>} placement=\"top\">\n        <CardDark sx={{ textAlign: \"center\", p: 0.5, minWidth: \"8em\" }}>\n          <ColorText color={invalid ? \"warning\" : undefined}>RV: <strong>{rv.toFixed(1)}%</strong></ColorText>\n        </CardDark>\n      </BootstrapTooltip>\n    </Box>\n    <Box display=\"flex\" gap={1} justifyContent=\"space-between\" alignItems=\"center\">\n      <CustomNumberInput\n        color={displayValue ? \"success\" : \"primary\"}\n        float={KeyMap.unit(statKey) === \"%\"}\n        endAdornment={KeyMap.unit(statKey) || <Box width=\"1em\" component=\"span\" />}\n        value={parseFloat(displayValue.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v)}\n        sx={{ borderRadius: 1, px: 1, height: \"100%\", width: \"6em\" }}\n        inputProps={{ sx: { textAlign: \"right\" }, min: 0 }} />\n      <CardDark sx={{ px: 2, flexGrow: 1, display: \"flex\", gap: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n        <Slider\n          size=\"small\"\n          value={rolls}\n          max={maxRolls}\n          min={0}\n          step={1}\n          marks\n          onChange={(e, v) => setRolls(v as number)}\n          onChangeCommitted={(e, v) => setRValue(v as number)}\n        />\n      </CardDark>\n      <CustomNumberInput\n        color={value ? (invalid ? \"warning\" : \"success\") : \"primary\"}\n        float\n        startAdornment={<Box sx={{ whiteSpace: \"nowrap\", width: \"7em\", display: \"flex\", justifyContent: \"space-between\" }}><span>{cacheValueString(substatValue, unit)}{unit}</span><span>x</span></Box>}\n        value={parseFloat(rolls.toFixed(2))}\n        onChange={v => v !== undefined && setValue(v * substatValue)}\n        sx={{ borderRadius: 1, px: 1, my: 0, height: \"100%\", width: \"7em\" }}\n        inputProps={{ sx: { textAlign: \"right\", pr: 0.5, }, min: 0, step: 1 }} />\n    </Box>\n  </Stack>\n}\n","import { useContext, useEffect, useState } from \"react\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { CharacterKey, WeaponKey } from \"../../../../Types/consts\"\n\nexport default function useCharTC(characterKey: CharacterKey, defWeapon: WeaponKey) {\n  const { database } = useContext(DatabaseContext)\n  const [charTC, setCharTC] = useState(() => database.charTCs.getWithInit(characterKey, defWeapon))\n  useEffect(() => setCharTC(database.charTCs.getWithInit(characterKey, defWeapon)), [database, characterKey, defWeapon])\n  useEffect(() =>\n    characterKey ? database.charTCs.follow(characterKey, (k, r, v) => r === \"update\" && setCharTC(v)) : undefined,\n    [characterKey, setCharTC, database])\n  return charTC\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, threshold, frac, max, min } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute, OptNode } from \"./optimization\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: OptNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: OptNode, binding: (readNode: ReadNode<number>) => string, diff: string): OptNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return frac(numerator, sum(prod(-1, numerator), denom))\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return threshold(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return threshold(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break;\n        default:\n          if (operation === \"min\") return ddx(min(f.operands[0], min(...f.operands.slice(1))), binding, diff)\n          if (operation === \"max\") return ddx(min(f.operands[0], min(...f.operands.slice(1))), binding, diff)\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n      break;\n    case \"threshold\":\n      const [value, thr, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(thr, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return threshold(value, thr, ddx(pass, binding, diff), ddx(fail, binding, diff))\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15}, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1 as OptNode\n\n  const compute = precompute([formula2], {}, f => f.path[1], 1)\n\n  var result = compute([{ id: '', values: stats }])[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  var res2 = compute([{ id: '', values: stat2 }])[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  const c_dhp_ = precompute([dhp_], {}, f => f.path[1], 1)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  const c_dhp = precompute([dhp], {}, f => f.path[1], 1)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  const c_datk_ = precompute([datk_], {}, f => f.path[1], 1)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_([{ id: '', values: stats }])[0])\n\n  stat2 = { ...stats }\n  stat2['atk'] = eps + (stat2['atk'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var datk = ddx(formula2, f => f.path[1], 'atk')\n  const c_datk = precompute([datk], {}, f => f.path[1], 1)\n  console.log('diff atk (numeric/symbolic)', (res2 - result) / eps, c_datk([{ id: '', values: stats }])[0])\n\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  res2 = compute([{ id: '', values: stat2 }])[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  const c_deleMas = precompute([deleMas], {}, f => f.path[1], 1)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas([{ id: '', values: stats }])[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, 5) / 1000 : Artifact.substatValue(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize, OptNode } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, art.rarity) / 1000 : Artifact.substatValue(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: OptNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: OptNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n\n  const evalFn = precompute(evalOpt, {}, f => f.path[1], 1)\n  let stats = toStats(curBuild)\n  const dmg0 = evalFn([{ id: '', values: stats }])[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    const out = evalFn([{ id: '', values: stats }])\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database.arts.get(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../TabOptimize/Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objectKeyMap, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { DynStat } from '../TabOptimize/common';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useFilters, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys, levelLow, levelHigh, artSetExclusion } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters)\n      .flatMap(([pathStr, settings]) =>\n        settings\n          .filter(setting => !setting.disabled)\n          .map(setting => {\n            const filterNode: NumNode = objPathValue(workerData.display ?? {}, JSON.parse(pathStr))\n            const minimum = filterNode.info?.unit === \"%\" ? setting.value / 100 : setting.value\n            return { value: filterNode, minimum }\n          })\n      )\n    // const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n    //   if (key.endsWith(\"_\")) value = value / 100\n    //   return { value: input.total[key], minimum: value }\n    // }).filter(x => x.value && x.minimum > -Infinity)\n\n    const equippedArts = database.chars.get(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    const curEquip: QueryBuild = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art ? toQueryArtifact(art) : undefined\n    })\n    const curEquipSetKeys = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art?.setKey ?? ''\n    })\n    function respectSexExclusion(art: ICachedArtifact) {\n      const newSK = { ...curEquipSetKeys }\n      newSK[art.slotKey] = art.setKey\n      const skc: DynStat = {}\n      allSlotKeys.forEach(slotKey => skc[newSK[slotKey]] = (skc[newSK[slotKey]] ?? 0) + 1)\n      let pass = Object.entries(skc).every(([setKey, num]) => {\n        if (!artSetExclusion[setKey]) return true\n        switch (num) {\n          case 0: case 1:\n            return true\n          case 2: case 3:\n            return !artSetExclusion[setKey].includes(2)\n          case 4: case 5:\n            return !artSetExclusion[setKey].includes(4)\n          default:\n            throw Error('error in respectSex: num > 5')\n        }\n      })\n      if (!pass) return false\n\n      if (!artSetExclusion['rainbow']) return true\n      const nRainbow = Object.values(skc).reduce((a, b) => a + (b % 2), 0)\n      switch (nRainbow) {\n        case 0: case 1:\n          return true\n        case 2: case 3:\n          return !artSetExclusion['rainbow'].includes(2)\n        case 4: case 5:\n          return !artSetExclusion['rainbow'].includes(4)\n        default:\n          throw Error('error in respectSex: nRainbow > 5')\n      }\n    }\n\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .filter(respectSexExclusion)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useFilters || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      .filter(art => !useFilters || (levelLow <= art.level && art.level <= levelHigh))\n      .map(art => toQueryArtifact(art, 20))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const nodesPreOpt = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    let nodes = optimize(nodesPreOpt, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useFilters, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useFilters && <CardLight>\n                <CardContent sx={{ py: 1 }}>\n                  Artifact Level Filter\n                </CardContent>\n                <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n                  setLow={levelLow => buildSettingDispatch({ levelLow })}\n                  setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n                  setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n                  disabled={false}\n                />\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              }\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useFilters ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useFilters ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useFilters)}>enable filters</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editorProps={{}} />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { stg } from '../../Data/SheetUtil';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\nimport { allElements, travelerElements, TravelerKey, TravelerToElement } from '../../Types/consts';\n\nexport default function TravelerElementSelect() {\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const setCharacter = useCharSelectionCallback()\n  if (!(key.startsWith(\"Traveler\"))) return null\n\n  const elementKey = allElements.find(e => key.toLowerCase().includes(e))!\n\n  return <DropdownButton color={elementKey} title={<strong>{stg(`element.${elementKey}`)}</strong>}>\n    {travelerElements.map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => setCharacter(TravelerToElement(key as TravelerKey, eleKey))}>\n        <strong><ColorText color={eleKey}>{stg(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { Female, Male } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { useCallback, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DatabaseContext } from '../../Database/Database';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\n\nexport default function TravelerGenderSelect() {\n  const { t } = useTranslation(\"ui\")\n  const { database } = useContext(DatabaseContext)\n  const { character } = useContext(CharacterContext)\n  const { key } = character\n  const { gender } = useDBMeta()\n  const toggleGender = useCallback(() => database.dbMeta.set({ gender: gender === \"F\" ? \"M\" : \"F\" }), [gender, database])\n  if (!(key.startsWith(\"Traveler\"))) return null\n  return <Button onClick={toggleGender} startIcon={gender === \"F\" ? <Female /> : <Male />}><strong>{t(`gender.${gender}`)}</strong>  </Button>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, Science, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport LevelSelect from '../../Components/LevelSelect';\nimport SqBadge from '../../Components/SqBadge';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport { ChartData, GraphContext, GraphContextObj } from '../../Context/GraphContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport { DatabaseContext } from '../../Database/Database';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport useDBMeta from '../../ReactHooks/useDBMeta';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { CharacterKey, charKeyToCharName } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabTheorycraft from './Tabs/TabTheorycraft';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\nimport TravelerElementSelect from './TravelerElementSelect';\nimport TravelerGenderSelect from './TravelerGenderSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const { database } = useContext(DatabaseContext)\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !database.chars.keys.includes(characterKey as CharacterKey)\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const { gender } = useDBMeta()\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey, gender), [characterKey, gender])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation([\"charNames_gen\", \"page_character\"])\n\n  useTitle(useMemo(() => `${t(`charNames_gen:${charKeyToCharName(characterKey, gender)}`)} - ${t(`page_character:tabs.${tab}`)}`, [t, characterKey, gender, tab]))\n\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n\n  const [chartData, setChartData] = useState(undefined as ChartData | undefined)\n  const [graphBuilds, setGraphBuilds] = useState<string[][]>()\n  const graphContextValue: GraphContextObj | undefined = useMemo(() => {\n    return {\n      chartData,\n      setChartData,\n      graphBuilds,\n      setGraphBuilds\n    }\n  }, [chartData, graphBuilds])\n\n  // Clear state when switching characters\n  useEffect(() => {\n    setChartData(undefined)\n    setGraphBuilds(undefined)\n  }, [characterKey])\n\n  return <CardDark >\n    {dataContextValue && characterContextValue && graphContextValue\n      ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}><GraphContext.Provider value={graphContextValue}>\n        <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Box display=\"flex\" >\n            <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n              <CharSelectDropdown />\n              <TravelerElementSelect />\n              <TravelerGenderSelect />\n              <DetailStatButton />\n              <CustomMultiTargetButton />\n              <FormulasButton />\n            </Box>\n            {!!onClose && <CloseButton onClick={onClose} />}\n          </Box>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n            {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n            <HitModeToggle size=\"small\" />\n            <InfusionAuraDropdown />\n            <ReactionToggle size=\"small\" />\n          </Box>\n          <CardLight>\n            <TabNav tab={tab} />\n          </CardLight>\n          <CharacterPanel />\n          <CardLight>\n            <TabNav tab={tab} />\n          </CardLight>\n        </CardContent></FormulaDataWrapper>\n      </GraphContext.Provider></DataContext.Provider></CharacterContext.Provider>\n      : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n      <Route path=\"/theorycraft\" element={<TabTheorycraft />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"theorycraft\" label={t(\"tabs.theorycraft\")} icon={<Science />} component={RouterLink} to=\"theorycraft\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const { t } = useTranslation(\"page_character\")\n  const [open, onOpen, onClose] = useBoolState()\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const bStatsNum = Object.keys(bonusStats).length\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>\n      {t`addStats.title`}{!!bStatsNum && <SqBadge sx={{ ml: 1 }} color=\"success\" >{bStatsNum}</SqBadge>}\n    </Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport { LocationAutocomplete } from \"../Components/Character/LocationAutocomplete\"\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport { nodeVStr } from \"../Formula/uiData\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { LocationKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback((cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType, [weaponSheet])\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n  const setLocation = useCallback((k: LocationKey) => weaponId && database.weapons.set(weaponId, { location: k }), [database, weaponId])\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.name) return null\n            return <Box key={JSON.stringify(node.info)} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{node.info.icon} {node.info.name}</Typography>\n              <Typography>{nodeVStr(node)}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Box sx={{ flexGrow: 1 }}>\n          {canEquip\n            ? <LocationAutocomplete location={location} setLocation={setLocation} filter={filter} autoCompleteProps={{ getOptionDisabled: t => !t.key, disableClearable: true }} />\n            : <LocationName location={location} />}\n        </Box>\n        <ButtonGroup sx={{ height: \"100%\" }}>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["MenuItemWithImage","value","image","text","theme","isSelected","addlElement","props","MenuItem","ListItemIcon","ListItemText","primaryTypographyProps","style","fontWeight","typography","fontWeightMedium","fontWeightRegular","ArtifactMultiAutocomplete","allArtifactKeysWithGrouper","selectedArtifactKeys","setArtifactKeys","getName","getImage","label","useTheme","options","useMemo","map","key","grouper","Autocomplete","autoHighlight","multiple","disableCloseOnSelect","onChange","_","v","getOptionLabel","option","isOptionEqualToValue","renderInput","params","TextField","variant","InputLabelProps","color","palette","primary","length","type","renderOption","KeyMap","includes","renderTags","selected","getTagProps","index","element","allElementsWithPhy","ele","undefined","Chip","icon","ArtifactSetMultiAutocomplete","artSetKeys","setArtSetKeys","artifactSheets","usePromise","ArtifactSheet","t","useTranslation","allArtifactSetsAndRarities","Object","entries","flatMap","rarity","set","sort","sortByRarityAndName","defIcon","groupBy","toString","renderGroup","group","List","component","Box","ListSubheader","sx","top","stars","children","ArtifactMainStatMultiAutocomplete","mainStatKeys","setMainStatKeys","allMainStatKeys","StatIcon","ArtifactSubstatMultiAutocomplete","substatKeys","setSubstatKeys","allSubstatKeys","ArtifactSingleAutocomplete","selectedArtifactKey","setArtifactKey","disable","showDefault","defaultText","defaultIcon","concat","clearIcon","event","newValue","reason","getOptionDisabled","startAdornment","hasValue","ArtifactSetSingleAutocomplete","artSetKey","setArtSetKey","a","b","aName","i18n","bName","ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","TypeError","l","h","useEffect","width","display","alignItems","bgcolor","val","clamp","px","pl","inputProps","textAlign","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","ConditionalSelector","conditional","keys","states","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","Divider","st","ButtonGroup","orientation","disableElevation","isElement","disp","stateName","badgeColor","badgeText","ml","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","RefinementDropdown","refinement","setRefinement","allRefinement","r","DisabledButton","styled","backgroundColor","secondary","TextButton","CharacterSelectionModal","React","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","Suspense","fallback","show","onHide","onSelect","src","thumbImgSide","GraphContext","createContext","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","database","DatabaseContext","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","nodeVStr","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","enemyOverride","flexWrap","EnemyResText","justifyContent","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","bsProps","xs","md","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","container","spacing","item","href","target","rel","contentLight","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","JSON","stringify","specialNode","charEle","elementKey","isMelee","otherStatReadNodes","n","miscStatReadNodes","StatDisplayCard","py","makeid","disallowed","characters","charactersLength","result","charAt","Math","floor","random","Error","readKey","operation","operands","accu","isShallow","f","deleteKey","base","flower","forEach","art","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","threshold","foldProd","constant","source","console","log","sum","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","some","toFold","orig","reduce","todistrib","mapped","pop","prod","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","push","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","NaN","reduceFormula","allStats","slotArts","rows","mat","dyn","record","Array","fill","selectedPivots","c","pivot","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","slotKey","allArtifactSets","con","sumM","monomials","flat","prodM","cartesian","monos","ret","nxt","terms","constantM","readM","tag","foldLikeTerms","mono","mon","termsA","termsB","ai","splice","expandPoly","inheritTags","varMap","tagMap","varTags","lookup","hsh","hashNode","z","cmpNode","next","newTag","stat2tag","sop","toSOP","slotsLeft","sCount","fromEntries","slotUsage","filterProductPossible","pivotInplace","A","Aij","findPiv1","minloc","cmp","findPiv2","minMax","compute","precompute","id","toLinearUpperBound","toPureRead","slope","mon1","intercept","op","flippedResOp","flipOps","resf","d","handleResArg","rop","cop","thresh","minVal","maxVal","em","denom","minEM","maxEM","loc","sqrt","below","nodesToMap","t2","nt","lins","err","bounds","nVar","boundScale","scaleProd","soln","cons","coords","objective","Ab","tableau","Ai","cj","ijTrack","ij","targ","side","ncol","backtrack","solveLP","slice","wi","lub","lin","constVal","pv","thresholdExclusions","excl","exc","OptimizationTargetContext","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","pruneExclusion","maxValues","pass","fail","thres","forceRename","affineNodes","topLevelAffine","visit","isAffine","dynKeys","nonConst","assertUnreachable","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","objectMap","objectKeyMap","allSlotKeys","slot","offsets","baseValue","progress","allowRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","otherBetterEqual","otherMaybeBetter","otherBetter","canSwitch","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","newOperands","op1","op2","ranges","range","reads","computeMinMax","minMaxes","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","build","kind","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","document","setEffectDocument","useBuildSetting","characterKey","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","useForceUpdate","dbDirty","forceUpdate","followAny","artKeysByRarity","reverse","artSlotCount","artKeys","getNumSlots","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","set4CondNums","setEffects","doc","opacity","defIconSrc","paddingTop","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","charKey","chars","LocationToCharacterKey","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","unit","alignContent","gender","useDBMeta","CharacterSheet","marginTop","BusinessCenter","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","ArtifactSetBadges","artifacts","currentlyEquipped","setToSlots","arti","acc","curr","slotarr1","slotarr","ArtifactSetBadge","artifactSheet","numInSet","setActive","ArtifactSetTooltip","BuildDisplayItem","compareBuild","extraButtonsRight","extraButtonsLeft","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","aid","charKeyToLocCharKey","weapons","statProviderContext","dataContext_","artifactIdsBySlot","artiId","artNanos","oldId","newId","CompareArtifactModal","Checkroom","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","editorProps","disableSet","disableSlot","ChevronRight","fontSize","useBuildResult","buildResult","setBuildResult","buildResultDispatch","CustomDot","cx","cy","payload","selectedPoint","radiusSelected","radiusUnselected","colorSelected","colorUnselected","shape","y","CustomShape","stroke","points","CustomTooltip","xLabel","xUnit","yLabel","yUnit","setSelectedPoint","addBuildToList","tooltipProps","graphBuilds","canAddBuild","artiIds","artifactIds","artifactsBySlot","artiObj","clickAwayHandler","active","ClickAwayListener","onClickAway","stopPropagation","direction","ArtifactCardPico","artifactObj","valueString","EnhancedPoint","trueY","highlighted","this","ChartCard","plotBase","setPlotBase","showTooltip","chartData","showDownload","setshowDownload","showMin","setshowMin","setSliderLow","setSliderHigh","_e","displayData","downloadData","sliderMin","sliderMax","currentBuild","objectKeyValueMap","highlightedBuildsSlotMap","convertArtiIdsToArtiSlotMap","enhancedDatum","datumSlotMap","highlightedSlotMap","minimumData","point","last","allData","plotBaseNode","objPathValue","getDisplay","buttonText","OptimizationTargetSelector","setTarget","Download","DataDisplay","Chart","plotNode","valueNode","Slider","valueLabelFormat","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","optTargetColor","highlightedColor","currentColor","lineColor","setGraphBuilds","chartOnClick","chartX","chartY","clickedX","clickedY","nearestDomPtData","from","querySelectorAll","domPtA","domPtB","dataset","aChartX","aChartY","aDistance","bChartX","bChartY","find","xValue","yValue","getNearestPoint","xLabelValue","getLabelFromNode","yLabelValue","ResponsiveContainer","ComposedChart","cursor","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","Label","dy","YAxis","allowDecimals","angle","dx","Tooltip","wrapperStyle","Legend","Line","connectNulls","strokeWidth","isAnimationActive","dot","activeDot","Scatter","partialArtiSlotMap","textSuffix","artifactsSlotsToSelectMainStats","MainStatSelectionCard","numSel","mt","OptimizationTargetEditorList","oldPath","oldIndex","statFilters_","oldPathStr","oldFilterArr","pathStr","filterArr","delTarget","setTargetValue","setTargetDisabled","settings","setting","OptimizationTargetEditorItem","parse","setValue","setDisabled","buttonStyle","buildConstraintNode","isPercent","showEmptyTargets","DeleteForever","StatFilterCard","UseEquipped","useEquippedArts","useBoolState","displayOptimize","tempEquipmentPriority","equipmentPriority","setTO","to","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","WorkerErr","reload","dynamic","setReadNodeKeys","dynamicData","compactArtifacts","allowPartial","mainStatVal","endsWith","substat","accurateValue","reduceSubProblem","subp","constraints","depth","filters","mins","maxw","minw","unionFilterUpperLower","tagNodePairs","reducedNodes","tagsToKill","newTerms","reducePolynomial","toNumNode","newOptTarget","newConstraints","newMins","newArtExcl","feasibleKeys","feasible4sets","feasible2sets","allowedCnts","cnt","reducedExcl","fi","wixs","ws","baseC","li","ixs0","w0","accum","ix","baseBuffer","buffer","ixsi","applyLinearForm","newFilters","filterVec","filterIxs","slotVals","filterArtsVec2","minww","maxww","slotUpperLowerVecW","cache","toArtifactBySlotVec","allKeysList","problemSetup","optimizationTargetNode","artSetExclFull","constraintsEP","opttargetEP","slotUL","slotUpperLowerVec","statsUpperLowerVec","minMaxEst","ixs","ww","baseVal","wtot","minMaxWeightVec","initialProblem","initialReducedProblem","poly","nodeVals","fk","termVals","evaluateExpandedPolynomial","TabBuild","compareData","setChartData","buildStatus","setBuildStatus","setArtsDirty","threads","defThreads","setDisplayOptimize","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","maxBuildsToShow","buildDate","teamData","useTeamData","isSM","useMediaQueryUp","cancelToken","workerErr","setWorkerErr","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","numBuild","_count","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","cantTakeList","ek","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","unoptimizedOptimizationTargetNode","targetNode","valueFilter","filterNode","cancelled","Promise","unoptimizedNodes","plotBaseNumNode","optimize","artsVec","masterInfo","ready","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","Worker","URL","addEventListener","error","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","Date","targetSelector","getLabel0","getLabel1","Link","RouterLink","CharacterCard","maxBuildsToShowList","TrendingUp","SolidToggleButtonGroup","exclusive","ToggleButton","Provider","BuildList","getLabel","setBuilds","deleteBuild","builds_","DataContextWrapper","BuildItemWrapper","join","useLocation","navigate","useNavigate","toTC","paths","pathname","Science","dirty","setDirty","buildsArts","providerValue","CompareBuildButton","artId","onShow","CompareContent","arrow","Difference","newArt","artmap","dataProviderValue","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","extraButtons","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","weaponFilterConfigs","sortFunction","weaponSortMap","weaponSortConfigs","star","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","rvFilter","useCharMeta","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","setRVFilter","charMeta","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","constellation","tlvl","auto","skill","burst","tBoost","favorite","colored","Favorite","FavoriteBorder","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","teamCount","titleTypographyProps","resonanceSheets","res","desc","activeCharacterKey","teamMateKey","onClickHandler","setTeammate","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","TeammateAutocomplete","setChar","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","sts","autoCompleteProps","characterSheets","toText","startsWith","charKeyToCharName","toImg","PersonAdd","ThumbSide","pr","isFavorite","onDisable","localeCompare","GeneralAutocomplete","valueKey","clearKey","WeaponSelectionModal","TabTheorycraft","defWeapon","charTCs","getWithInit","charTC","setCharTC","useCharTC","defaultInitialWeaponKey","setData","resetData","initCharTC","setWeapon","copyFrom","eWeapon","newData","artifact","locBuild","copyFromEquipped","lock","setArtifact","data_","setSubstatsType","setSubstats","deferredData","overriderArtData","overrideWeapon","charUIData","dataContextValue","dataContextValueWithOld","CopyAll","Refresh","WeaponEditorCard","ArtifactMainLevelCard","artifactData","setArtifactData","ArtifactSubCard","substatsType","weaponUIData","weaponTypeFilter","flexshrink","setSlot","artifactData_","setArtSet","ArtifactMainLevelSlot","ArtifactSetsEditor","setSlotProp","mLvl","maxArtifactLevel","FontAwesomeSvgIcon","slotIconSVG","msk","faStar","my","setSet","deleteValue","rest","remaining","ArtifactSetEditor","disableClearable","setName","Info","rv","substatType","ArtifactSubstatEditor","substatValue","setRolls","displayValue","numMains","ms","maxRolls","invalid","setRValue","parseFloat","zero_deriv","funct","binding","diff","ddx","ops","da","db","numerator","frac","arg1","arg2","thr","quadrinomials","quadrinomial","nextRow","prev","gaussPDF","mu","sig2","exp","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","slow","calc4th","newBuild","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","toEval","fo","evalOpt","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","gaussConstrained","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","aspect","margin","offset","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","legendType","tooltipType","ReferenceLine","ReferenceDot","radius","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useFilters","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","pageIdex","setpageIdex","invScrollRef","artifactsToShow","numPages","toShow","minObj0","maxObj0","ceil","currentPageIndex","setPage","zz","respectSexExclusion","newSK","curEquipSetKeys","skc","equippedArts","curEquip","nodesPreOpt","artUpOpt","upOpt","faCalculator","page","ShowingArt","numShowing","TravelerElementSelect","allElements","toLowerCase","stg","travelerElements","TravelerToElement","TravelerGenderSelect","toggleGender","dbMeta","Female","Male","CharacterDisplay","useParams","CharacterDisplayCard","useMatch","tab","useTitle","characterContextValue","graphContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Calculate","bStatsNum","BarChart","onModalOpen","onDelete","cs","falseWrapperFunc","setLocation","falseWrapper","noWrap","faEdit","faTrashAlt","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","replace","module","ex","ExitStatus","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","runCaller"],"sourceRoot":""}