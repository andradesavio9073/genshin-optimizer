{"version":3,"file":"static/js/884.a2f8a367.chunk.js","mappings":"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","sources":["Components/Artifact/ArtifactLevelSlider.tsx","Components/Card/CardHeaderCustom.tsx","Components/Conditional/ConditionalSelector.tsx","Components/Conditional/ConditionalDisplay.tsx","Components/DocumentDisplay.tsx","Components/LevelSelect.tsx","Components/TextButton.tsx","PageCharacter/CharacterDisplay/CharSelectDropdown.tsx","PageCharacter/CharacterDisplay/FormulaModal.tsx","Components/ExpandButton.tsx","Components/StatInput.tsx","Components/EnemyEditor.tsx","PageCharacter/CharacterDisplay/StatModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/BackgroundWorker.ts","Formula/optimize2.ts","Formula/addedUtils.ts","Formula/expandPoly.ts","Formula/solveLP_simplex.ts","Formula/linearUpperBound.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/common.ts","Components/Artifact/SetEffectDisplay.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/useBuildSetting.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ArtifactSetConfig.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/AssumeFullLevelToggle.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BonusStatsCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildAlert.tsx","Components/Artifact/ArtifactCardNano.tsx","Context/OptimizationTargetContext.tsx","Components/Character/StatDisplayComponent.tsx","Components/Weapon/WeaponCardNano.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/BuildDisplayItem.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/ChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/MainStatSelectionCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/StatFilterCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/DBState.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseEquipped.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/Components/UseExcluded.tsx","PageCharacter/CharacterDisplay/Tabs/TabOptimize/foreground.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/subproblemUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabOptimize/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/CompareBuildButton.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/ArtifactSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/WeaponSwapModal.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/EquipmentSection.tsx","PageCharacter/CharacterDisplay/Tabs/TabOverview/index.tsx","PageCharacter/CharacterDisplay/Tabs/TabTalent.tsx","PageCharacter/CharacterDisplay/Tabs/TabTeambuffs.tsx","Formula/differentiate.ts","Util/MathUtil.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactUpgradeCrawl.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/mvncdf.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/artifactQuery.ts","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/UpgradeOptChartCard.tsx","PageCharacter/CharacterDisplay/Tabs/TabUpgradeOpt/index.tsx","PageCharacter/CharacterDisplay/TravelerElementSelect.tsx","PageCharacter/CharacterDisplay/index.tsx","PageWeapon/WeaponCard.tsx","Util/TimeUtil.ts","Util/WeaponSort.ts","../wasmpack/assembly.js"],"sourcesContent":["import { Card, Slider } from \"@mui/material\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { clamp } from \"../../Util/Util\"\nimport CustomNumberInput from \"../CustomNumberInput\"\n\nexport default function ArtifactLevelSlider({ levelLow, levelHigh, setLow, setHigh, setBoth, dark = false, disabled = false, showLevelText = false }: {\n  levelLow: number,\n  levelHigh: number,\n  setLow: (low: number) => void,\n  setHigh: (high: number) => void,\n  setBoth: (low: number, high: number) => void,\n  dark?: boolean,\n  disabled?: boolean,\n  showLevelText?: boolean,\n}) {\n  const [sliderLow, setsliderLow] = useState(levelLow)\n  const [sliderHigh, setsliderHigh] = useState(levelHigh)\n  const setSlider = useCallback(\n    (e: unknown, value: number | number[]) => {\n      if (typeof value == \"number\") throw new TypeError()\n      const [l, h] = value\n      setsliderLow(l)\n      setsliderHigh(h)\n    },\n    [setsliderLow, setsliderHigh])\n  useEffect(() => setsliderLow(levelLow), [setsliderLow, levelLow])\n\n  useEffect(() => setsliderHigh(levelHigh), [setsliderHigh, levelHigh])\n  return <Card sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\", bgcolor: dark ? \"contentDark.main\" : \"contentLight.main\" }}>\n    <CustomNumberInput\n      value={sliderLow}\n      onChange={val => setLow(clamp(val, 0, levelHigh))}\n      sx={{ px: 1, pl: showLevelText ? 2 : undefined, width: showLevelText ? 100 : 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      startAdornment={showLevelText ? \"Level: \" : undefined}\n      disabled={disabled}\n    />\n    <Slider sx={{ width: 100, flexGrow: 1, mx: 2 }}\n      getAriaLabel={() => 'Arifact Level Range'}\n      value={[sliderLow, sliderHigh]}\n      onChange={setSlider}\n      onChangeCommitted={(e, value) => setBoth(value[0], value[1])}\n      valueLabelDisplay=\"auto\"\n      min={0} max={20} step={1} marks\n      disabled={disabled}\n    />\n    <CustomNumberInput\n      value={sliderHigh}\n      onChange={val => setHigh(clamp(val, levelLow, 20))}\n      sx={{ px: 1, width: 50, }}\n      inputProps={{ sx: { textAlign: \"center\" } }}\n      disabled={disabled}\n    />\n  </Card>\n}\n","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\n\nexport default function CardHeaderCustom({ avatar, title, action }: { avatar?: Displayable, title: Displayable, action?: Displayable }) {\n  return <Box display=\"flex\" gap={1} p={2} alignItems=\"center\" >\n    {avatar}\n    <Typography variant=\"subtitle1\" sx={{ flexGrow: 1 }}>{title}</Typography>\n    {action && <Typography variant=\"caption\">{action}</Typography>}\n  </Box>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport { Button, ButtonGroup, ButtonProps, Divider, MenuItem } from '@mui/material';\nimport React, { useCallback, useContext } from 'react';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { DataContext } from '../../Context/DataContext';\nimport { DocumentConditional, IDocumentConditionalExclusive, IDocumentConditionalMultiple } from '../../Types/sheet';\nimport { deepClone, deletePropPath, layeredAssignment } from '../../Util/Util';\nimport DropdownButton from '../DropdownMenu/DropdownButton';\nimport SqBadge from '../SqBadge';\nimport { Translate } from '../Translate';\n\ninterface ConditionalSelectorProps {\n  conditional: DocumentConditional,\n  disabled?: boolean,\n}\nexport default function ConditionalSelector({ conditional, disabled = false, }: ConditionalSelectorProps) {\n  if (Object.keys(conditional.states).length === 1 && \"path\" in conditional) {\n    return <SimpleConditionalSelector conditional={conditional} disabled={disabled} />\n  } else if (\"path\" in conditional) {\n    return <ExclusiveConditionalSelector conditional={conditional} disabled={disabled} />\n  } else /*if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    return <MultipleConditionalSelector conditional={conditional} disabled={disabled} />\n  }\n}\n\ninterface SimpleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction SimpleConditionalSelector({ conditional, disabled }: SimpleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const [stateKey, st] = Object.entries(conditional.states)[0]\n  const badge = getStateBadge(st.name)\n  const condName = getCondName(conditional.name)\n\n  return <Button fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} onClick={() => setConditional(conditionalValue ? undefined : stateKey)} disabled={disabled} startIcon={conditionalValue ? <CheckBox /> : <CheckBoxOutlineBlank />}>\n    {condName} {badge}\n  </Button>\n}\n\ninterface ExclusiveConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalExclusive\n}\nfunction ExclusiveConditionalSelector({ conditional, disabled }: ExclusiveConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, conditional.path, v)\n    } else {\n      deletePropPath(conditionalValues, conditional.path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [conditional, character, characterDispatch])\n\n  const conditionalValue = data.get(conditional.value).value\n  const state = conditionalValue ? conditional.states[conditionalValue] : undefined\n  const badge = state ? getStateBadge(state.name) : <SqBadge color=\"secondary\">Not Active</SqBadge>\n  const condName = getCondName(conditional.name)\n\n  return <DropdownButton fullWidth size=\"small\" sx={{ borderRadius: 0 }} color={conditionalValue ? \"success\" : \"primary\"} title={<span>{condName} {badge}</span>} disabled={disabled}>\n    <MenuItem onClick={() => setConditional()} selected={!state} disabled={!state}>\n      <span>Not Active</span>\n    </MenuItem>\n    <Divider />\n    {Object.entries(conditional.states).map(([stateKey, st]) =>\n      <MenuItem key={stateKey} onClick={() => setConditional(stateKey)} selected={conditionalValue === stateKey} disabled={conditionalValue === stateKey} >{st.name}</MenuItem>)}\n  </DropdownButton>\n}\n\ninterface MultipleConditionalSelectorProps extends ConditionalSelectorProps {\n  conditional: IDocumentConditionalMultiple\n}\nfunction MultipleConditionalSelector({ conditional, disabled }: MultipleConditionalSelectorProps) {\n  const { character, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const setConditional = useCallback((path: readonly string[], v?: string) => {\n    const conditionalValues = deepClone(character.conditional)\n    if (v) {\n      layeredAssignment(conditionalValues, path, v)\n    } else {\n      deletePropPath(conditionalValues, path)\n    }\n    characterDispatch({ conditional: conditionalValues })\n  }, [character, characterDispatch])\n\n  return <ButtonGroup fullWidth orientation=\"vertical\" disableElevation color=\"secondary\" >\n    {Object.entries(conditional.states).map(([stateKey, st]) => {\n      const conditionalValue = data.get(st.value).value\n      const isSelected = conditionalValue === stateKey\n      return <Button\n        color={isSelected ? \"success\" : \"primary\"}\n        disabled={disabled}\n        fullWidth\n        key={stateKey}\n        onClick={() => setConditional(st.path, conditionalValue ? undefined : stateKey)}\n        size=\"small\"\n        startIcon={isSelected ? <CheckBox /> : <CheckBoxOutlineBlank />}\n        sx={{ borderRadius: 0 }}\n      >\n        {getCondName(st.name)}\n      </Button>\n    })}\n  </ButtonGroup>\n}\n\nfunction isElement(disp: Displayable): disp is JSX.Element {\n  return (typeof disp !== \"string\")\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getStateBadge(stateName: Displayable | undefined): Displayable {\n  if (!stateName) return \"\"\n\n  let badgeColor: ButtonProps['color'] = \"primary\"\n  let badgeText = stateName\n  if (stateName && isElement(stateName)) {\n    if (stateName.props.color) {\n      badgeColor = stateName.props.color\n      badgeText = <span>{stateName.props.children}</span>\n    }\n  }\n  return <SqBadge sx={{ ml: 0.5 }} color={badgeColor}>{badgeText}</SqBadge>\n}\n\n// Use colored badges instead of colored text inside these buttons\nfunction getCondName(condName: Displayable): Displayable {\n  if (isElement(condName)) {\n    const key = condName.props.key18\n    const ns = condName.props.ns\n    const values = condName.props.values\n    return <Translate ns={ns} key18={key} values={values} useBadge />\n  }\n  return condName\n}\n","import { CardContent } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { DocumentConditional, DocumentSection } from \"../../Types/sheet\"\nimport { evalIfFunc } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport { HeaderDisplay } from \"../DocumentDisplay\"\nimport FieldsDisplay from \"../FieldDisplay\"\nimport ConditionalSelector from \"./ConditionalSelector\"\n\ntype ConditionalDisplayProps = {\n  conditional: DocumentConditional,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n  hideDesc?: boolean,\n}\n\nexport default function ConditionalDisplay({ conditional, hideHeader = false, hideDesc = false }: ConditionalDisplayProps) {\n  const { data } = useContext(DataContext)\n  let fields\n  if (\"path\" in conditional) {\n    const condVal = data.get(conditional.value).value\n    fields = condVal && conditional.states[condVal]?.fields\n  } else /* if (\"path\" in Object.entries(conditional.states)[0]) */ {\n    fields = Object.values(conditional.states).flatMap(state => {\n      const stateVal = data.get(state.value).value\n      return stateVal ? state.fields : []\n    })\n  }\n  return <CardDark>\n    {!evalIfFunc(hideHeader, conditional) && <HeaderDisplay header={conditional.header} hideDesc={hideDesc} />}\n    <CardContent sx={{ p: 0, \"&:last-child\": { pb: 0 } }}>\n      <ConditionalSelector conditional={conditional} />\n    </CardContent>\n    {fields && <FieldsDisplay fields={fields} />}\n  </CardDark>\n}\n","import { Box, Divider, Typography } from \"@mui/material\"\nimport { useContext } from \"react\"\nimport { DataContext } from \"../Context/DataContext\"\nimport { DocumentSection, IDocumentFields, IDocumentHeader, IDocumentText } from \"../Types/sheet\"\nimport { evalIfFunc } from \"../Util/Util\"\nimport CardDark from \"./Card/CardDark\"\nimport CardHeaderCustom from \"./Card/CardHeaderCustom\"\nimport ConditionalDisplay from \"./Conditional/ConditionalDisplay\"\nimport FieldsDisplay from \"./FieldDisplay\"\nimport InfoTooltip from \"./InfoTooltip\"\n\ntype DocumentDisplayProps = {\n  sections: DocumentSection[],\n  teamBuffOnly?: boolean,\n  hideDesc?: boolean,\n  hideHeader?: boolean | ((section: DocumentSection) => boolean),\n}\n\nexport default function DocumentDisplay({ sections, teamBuffOnly, hideDesc = false, hideHeader = false }: DocumentDisplayProps) {\n  const { data } = useContext(DataContext)\n  if (!sections.length) return null\n  const sectionDisplays = sections.map((s, i) => {\n    // If we can't show this section, return null\n    if (s.canShow && !data.get(s.canShow).value) return null\n    // If we are showing only teambuffs, and this section is not a teambuff, return null\n    if (teamBuffOnly && !s.teamBuff) return null\n    return <SectionDisplay section={s} key={i} hideDesc={hideDesc} hideHeader={hideHeader} />\n  }).filter(s => s)\n  if (!sectionDisplays.length) return null\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>{sectionDisplays}</Box>\n}\n\nfunction SectionDisplay({ section, hideDesc = false, hideHeader = false }: { section: DocumentSection, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  if (\"fields\" in section) {\n    return <FieldsSectionDisplay section={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else if (\"states\" in section) {\n    return <ConditionalDisplay conditional={section} hideDesc={hideDesc} hideHeader={hideHeader} />\n  } else /* if (\"text\" in section) */ {\n    return <TextSectionDisplay section={section} />\n  }\n}\n\nfunction FieldsSectionDisplay({ section, hideDesc, hideHeader }: { section: IDocumentFields, hideDesc?: boolean, hideHeader?: boolean | ((section: DocumentSection) => boolean) }) {\n  return <CardDark>\n    {!evalIfFunc(hideHeader, section) && section.header &&\n      <HeaderDisplay header={section.header} hideDesc={hideDesc} hideDivider={section.fields.length === 0} />\n    }\n    <FieldsDisplay fields={section.fields} />\n  </CardDark>\n}\n\nfunction TextSectionDisplay({ section }: { section: IDocumentText }) {\n  const { data } = useContext(DataContext)\n  return <div>\n    {evalIfFunc(section.text, data)}\n  </div>\n}\n\nexport function HeaderDisplay({ header, hideDesc, hideDivider }: { header: IDocumentHeader, hideDesc?: boolean, hideDivider?: boolean | ((section: DocumentSection) => boolean) }) {\n  const { data } = useContext(DataContext)\n  let { icon, title, action } = header\n  icon = evalIfFunc(icon, data)\n  const description = !hideDesc && evalIfFunc(header.description, data)\n  const displayTitle = hideDesc ? title : <span>{title} <InfoTooltip title={<Typography>{description}</Typography>} /></span>\n  return <>\n    <CardHeaderCustom avatar={icon} title={displayTitle} action={action} />\n    {!hideDivider && <Divider />}\n  </>\n}\n","import { Button, ButtonGroup, MenuItem } from '@mui/material';\nimport { useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ambiguousLevel, ambiguousLevelLow, ascensionMaxLevel, ascensionMaxLevelLow, maxLevel, maxLevelLow, milestoneLevels, milestoneLevelsLow } from '../Data/LevelData';\nimport { Ascension } from '../Types/consts';\nimport { clamp } from '../Util/Util';\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from './CustomNumberInput';\nimport DropdownButton from './DropdownMenu/DropdownButton';\n\nexport default function LevelSelect({ level, ascension, setBoth, useLow = false }: { level: number, ascension: Ascension, setBoth: (action: { level?: number, ascension?: Ascension }) => void, useLow?: boolean }) {\n  const { t } = useTranslation(\"ui\")\n  const ascensionMaxLevels = useLow ? ascensionMaxLevelLow : ascensionMaxLevel\n  const setLevel = useCallback((level: number = 1) => {\n    level = clamp(level, 1, useLow ? maxLevelLow : maxLevel)\n    const ascension = ascensionMaxLevels.findIndex(ascenML => level <= ascenML) as Ascension\n    setBoth({ level, ascension })\n  }, [setBoth, ascensionMaxLevels, useLow])\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevels.findIndex(ascenML => level !== 90 && level === ascenML) as Ascension\n    if (ascension === lowerAscension) setBoth({ ascension: (ascension + 1) as Ascension })\n    else setBoth({ ascension: lowerAscension })\n  }, [setBoth, ascensionMaxLevels, ascension, level])\n  return <ButtonGroup sx={{ bgcolor: t => t.palette.contentDark.main }} >\n    <CustomNumberInputButtonGroupWrapper >\n      <CustomNumberInput onChange={setLevel} value={level}\n        startAdornment=\"Lv. \"\n        inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\", width: \"3em\" } }}\n        sx={{ height: \"100%\", pl: 2 }} />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ pl: 1, whiteSpace: 'nowrap' }} disabled={!(useLow ? ambiguousLevelLow : ambiguousLevel)(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>\n    <DropdownButton title={t(\"selectlevel\")} sx={{ flexGrow: 1 }}>\n      {[...(useLow ? milestoneLevelsLow : milestoneLevels)].map(([lv, as]) => {\n        const selected = lv === level && as === ascension\n        return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => setBoth({ level: lv, ascension: as })}>\n          {lv === ascensionMaxLevels[as] ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevels[as]}`}\n        </MenuItem>\n      })}\n    </DropdownButton>\n  </ButtonGroup>\n}\n","import { Button, ButtonProps, styled } from \"@mui/material\";\n\nconst DisabledButton = styled(Button)(({ theme }) => ({\n  \"&.Mui-disabled\": {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.text.secondary,\n  }\n}))\n\nexport default function TextButton({ children, disabled, ...props }: ButtonProps) {\n  return <DisabledButton {...props} disabled  >\n    {children}\n  </DisabledButton>\n}\n","import { Button } from '@mui/material';\nimport { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterSelectionModal } from '../../Components/Character/CharacterSelectionModal';\nimport ThumbSide from '../../Components/Character/ThumbSide';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport useCharSelectionCallback from '../../ReactHooks/useCharSelectionCallback';\n\nexport default function CharSelectDropdown() {\n  const { t } = useTranslation(\"page_character\")\n  const { characterSheet } = useContext(CharacterContext)\n  const [showModal, setshowModal] = useState(false)\n  const setCharacter = useCharSelectionCallback()\n  return <>\n    <CharacterSelectionModal show={showModal} onHide={() => setshowModal(false)} onSelect={setCharacter} />\n    <Button color=\"info\" onClick={() => setshowModal(true)} startIcon={<ThumbSide src={characterSheet?.thumbImgSide} />} >{characterSheet?.name ?? t(\"selectCharacter\")}</Button>\n  </>\n}\n","import { ExpandMore } from '@mui/icons-material';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, CardContent, CardHeader, Divider, Skeleton, Typography } from '@mui/material';\nimport { MutableRefObject, Suspense, useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport AmpReactionModeText from '../../Components/AmpReactionModeText';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardHeaderCustom from '../../Components/Card/CardHeaderCustom';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport ColorText from '../../Components/ColoredText';\nimport ImgIcon from '../../Components/Image/ImgIcon';\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport SqBadge from '../../Components/SqBadge';\nimport { DataContext } from '../../Context/DataContext';\nimport { FormulaDataContext } from '../../Context/FormulaDataContext';\nimport { getDisplayHeader, getDisplaySections } from '../../Formula/DisplayUtil';\nimport { DisplaySub, Variant } from '../../Formula/type';\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from '../../KeyMap';\nimport usePromise from '../../ReactHooks/usePromise';\nimport { allAmpReactions, AmpReactionKey } from '../../Types/consts';\n\nexport default function FormulaModal() {\n  const { modalOpen } = useContext(FormulaDataContext)\n  const { setFormulaData } = useContext(FormulaDataContext)\n  const onCloseHandler = useCallback(() => setFormulaData?.(undefined, undefined), [setFormulaData])\n  return <ModalWrapper open={!!modalOpen} onClose={onCloseHandler}>\n    <CardDark>\n      <CardHeader title=\"Formulas & Calculations\" action={<CloseButton onClick={onCloseHandler} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <CalculationDisplay />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n\nfunction CalculationDisplay() {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const sections = getDisplaySections(contextData ?? data)\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />} >\n    <Box sx={{ mr: -1, mb: -1 }}>\n      {sections.map(([key, Nodes]) =>\n        <FormulaCalc key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Box>\n  </Suspense>\n}\nfunction FormulaCalc({ sectionKey, displayNs }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const { data } = useContext(DataContext)\n  const { data: contextData } = useContext(FormulaDataContext)\n  const header = usePromise(() => getDisplayHeader(contextData ?? data, sectionKey), [contextData, data, sectionKey])\n  if (!header) return null\n  if (Object.entries(displayNs).every(([_, node]) => node.isEmpty)) return null\n  const { title, icon, action } = header\n  return <CardLight sx={{ mb: 1 }}>\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <CardContent>\n      {Object.entries(displayNs).map(([key, node]) => !node.isEmpty && <FormulaAccordian key={key} node={node} />)}\n    </CardContent>\n  </CardLight>\n}\nfunction FormulaAccordian({ node }: { node: NodeDisplay }) {\n  const { node: contextNode } = useContext(FormulaDataContext)\n  const [expanded, setExpanded] = useState(false);\n  const handleChange = useCallback((e: React.SyntheticEvent, isExpanded: boolean) => setExpanded(isExpanded), [])\n  const scrollRef = useRef<HTMLDivElement>() as MutableRefObject<HTMLDivElement | null>\n\n  useEffect(() => {\n    if (node === contextNode) setTimeout(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), 300)\n  }, [scrollRef, node, contextNode])\n\n  return <Accordion sx={{ bgcolor: \"contentDark.main\" }} expanded={node === contextNode || expanded} onChange={handleChange} ref={scrollRef} >\n    <AccordionSummary expandIcon={<ExpandMore />} >\n      <Typography><ColorText color={node.info.variant}>{KeyMap.get(node.info.key ?? \"\")}</ColorText> <strong>{valueString(node.value, node.unit)}</strong></Typography>\n      {allAmpReactions.includes(node.info.variant as any) && <Box sx={{ display: \"inline-block\", ml: \"auto\", mr: 2 }}>\n        <AmpReactionModeText reaction={node.info.variant as AmpReactionKey} trigger={node.info.subVariant as Variant} />\n      </Box>}\n    </AccordionSummary>\n    <AccordionDetails >\n      {node.formulas.map((subform, i) => <Typography key={i}>{subform}</Typography>)}\n    </AccordionDetails>\n  </Accordion>\n}\n","import { IconButton, IconButtonProps, styled } from \"@mui/material\";\n\ninterface ExpandMoreProps extends IconButtonProps {\n  expand: boolean;\n}\nconst ExpandButton = styled((props: ExpandMoreProps) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n  marginLeft: 'auto',\n  transition: (theme as any).transitions.create('transform', {\n    duration: (theme as any).transitions.duration.shortest,\n  }),\n}));\n\nexport default ExpandButton","import { Replay } from \"@mui/icons-material\"\nimport { Button, ButtonGroup, ButtonGroupProps, styled } from \"@mui/material\"\nimport { ReactNode } from \"react\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"./CustomNumberInput\"\nimport TextButton from \"./TextButton\"\n\ntype StatInputInput = ButtonGroupProps & {\n  name: Displayable,\n  children?: ReactNode,\n  value: number,\n  placeholder?: string,\n  defaultValue?: number,\n  onValueChange: (newValue: number | undefined) => void,\n  percent?: boolean,\n  disabled?: boolean,\n  onReset?: () => void\n}\nconst FlexButtonGroup = styled(ButtonGroup)({\n  display: \"flex\"\n})\n\nexport default function StatInput({ name, children, value, placeholder, defaultValue = 0, onValueChange, percent = false, disabled = false, onReset, ...restProps }: StatInputInput) {\n\n  return <FlexButtonGroup {...restProps} >\n    {children}\n    <TextButton sx={{ px: 1 }}>\n      {name}\n    </TextButton>\n    <CustomNumberInputButtonGroupWrapper sx={{ flexBasis: \"10em\", flexGrow: 1 }} >\n      <CustomNumberInput\n        sx={{ px: 1 }}\n        inputProps={{\n          sx: { textAlign: \"right\" }\n        }}\n        float={percent}\n        placeholder={placeholder}\n        value={value}\n        onChange={onValueChange}\n        disabled={disabled}\n        endAdornment={percent ? \"%\" : undefined}\n      />\n    </CustomNumberInputButtonGroupWrapper>\n    <Button sx={{ flexShrink: 2 }} size=\"small\" color=\"error\" onClick={() => onReset ? onReset() : onValueChange(defaultValue)} disabled={disabled || value === defaultValue} >\n      <Replay />\n    </Button>\n  </FlexButtonGroup>\n}\n","import { CheckBox, CheckBoxOutlineBlank, ExpandMore } from \"@mui/icons-material\";\nimport { Button, CardContent, Chip, Collapse, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useState } from 'react';\nimport { CharacterContext } from \"../Context/CharacterContext\";\nimport { DataContext } from \"../Context/DataContext\";\nimport { uiInput as input } from \"../Formula\";\nimport KeyMap, { valueString } from '../KeyMap';\nimport { allElementsWithPhy, ElementKeyWithPhy } from \"../Types/consts\";\nimport CardLight from \"./Card/CardLight\";\nimport ColorText from \"./ColoredText\";\nimport ExpandButton from \"./ExpandButton\";\nimport { uncoloredEleIcons } from \"./StatIcon\";\nimport StatInput from \"./StatInput\";\n\nexport function EnemyExpandCard() {\n  const { data } = useContext(DataContext)\n  const [expanded, setexpanded] = useState(false)\n  const toggle = useCallback(() => setexpanded(!expanded), [setexpanded, expanded])\n  const eLvlNode = data.get(input.enemy.level)\n  const eDefRed = data.get(input.enemy.defRed)\n  const eDefIgn = data.get(input.enemy.defIgn)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container spacing={1} flexGrow={1} alignItems=\"center\">\n        <Grid item>\n          <Chip size=\"small\" color=\"success\" label={<span>{KeyMap.get(eLvlNode.info.key)} <strong>{eLvlNode.value}</strong></span>} />\n        </Grid>\n        {allElementsWithPhy.map(element => <Grid item key={element}>\n          <Typography key={element} ><EnemyResText element={element} /></Typography>\n        </Grid>)}\n        <Grid item>\n          <Typography>DEF Reduction {valueString(eDefRed.value, eDefRed.unit)}</Typography>\n        </Grid>\n        <Grid item>\n          <Typography>DEF Ignore {valueString(eDefIgn.value, eDefIgn.unit)}</Typography>\n        </Grid>\n      </Grid>\n      <ExpandButton\n        expand={expanded}\n        onClick={toggle}\n        aria-expanded={expanded}\n        aria-label=\"show more\"\n        size=\"small\"\n        sx={{ p: 0 }}\n      >\n        <ExpandMore />\n      </ExpandButton>\n    </CardContent>\n    <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n      <CardContent sx={{ pt: 0 }}>\n        <EnemyEditor />\n      </CardContent>\n    </Collapse>\n  </CardLight>\n}\n\nexport function EnemyResText({ element }: { element: ElementKeyWithPhy }) {\n  const { data } = useContext(DataContext)\n  const node = data.get(input.enemy[`${element}_res_`])\n  const immune = !isFinite(node.value)\n  const content = immune ? <span >{uncoloredEleIcons[element]} IMMUNE</span> :\n    <span >{uncoloredEleIcons[element]}RES <strong>{valueString(node.value, node.unit)}</strong></span>\n  return <ColorText color={element}>{content}</ColorText>\n}\n\nexport function EnemyEditor({ bsProps = { xs: 12, md: 6 } }: { bsProps?: object }) {\n  const { character: { enemyOverride }, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const defaultVal = 10\n\n  const eLvl = enemyOverride.enemyLevel ?? data.get(input.lvl).value\n  const eDefRed = enemyOverride.enemyDefIgn_ ?? 0\n  const eDefIgn = enemyOverride.enemyDefRed_ ?? 0\n  return <Grid container spacing={1}>\n    <Grid item {...bsProps}>\n      <Button fullWidth sx={{ height: \"100%\" }} size=\"small\" component=\"a\" color=\"warning\" href=\"https://genshin-impact.fandom.com/wiki/Resistance#Base_Enemy_Resistances\" target=\"_blank\" rel=\"noreferrer\">\n        To get the specific resistance values of enemies, please visit the wiki.\n      </Button>\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyLevel\")}</b>}\n        value={eLvl}\n        placeholder={KeyMap.getStr(\"enemyLevel\")}\n        defaultValue={data.get(input.lvl).value}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value })}\n        onReset={() => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyLevel\", value: undefined })}\n      />\n    </Grid>\n    {allElementsWithPhy.map(eleKey => {\n      const statKey = `${eleKey}_enemyRes_`\n      const val = enemyOverride[statKey]\n      const elementImmunity = val === Number.MAX_VALUE\n      return <Grid item key={eleKey} {...bsProps}>\n        <StatInput\n          sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n          name={<ColorText color={eleKey}><b>{KeyMap.get(statKey)}</b></ColorText>}\n          value={val ? (elementImmunity ? Infinity : val) : 10}\n          placeholder={elementImmunity ? \"Immune \" : KeyMap.getStr(statKey)}\n          defaultValue={defaultVal}\n          onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey, value })}\n          disabled={elementImmunity}\n          percent\n        >\n          <Button color={eleKey} onClick={() => characterDispatch({ type: \"enemyOverride\", statKey, value: elementImmunity ? defaultVal : Number.MAX_VALUE })} startIcon={elementImmunity ? <CheckBox /> : <CheckBoxOutlineBlank />} >\n            Immunity\n          </Button>\n        </StatInput>\n      </Grid>\n    })}\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefIgn_\")}</b>}\n        value={eDefRed}\n        placeholder={KeyMap.getStr(\"enemyDefIgn_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefIgn_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item {...bsProps}>\n      <StatInput\n        sx={{ bgcolor: t => t.palette.contentLight.main, width: \"100%\" }}\n        name={<b>{KeyMap.get(\"enemyDefRed_\")}</b>}\n        value={eDefIgn}\n        placeholder={KeyMap.getStr(\"enemyDefRed_\")}\n        defaultValue={0}\n        onValueChange={value => characterDispatch({ type: \"enemyOverride\", statKey: \"enemyDefRed_\", value })}\n        percent\n      />\n    </Grid>\n    <Grid item xs={12}>\n      <small>Note: Genshin Impact halves resistance shred values below 0%. For the sake of calculations enter the RAW value and GO will do the rest. (e.g. 10% - 20% = -10%)</small>\n    </Grid>\n  </Grid>\n}\n","import { CardContent, CardHeader, Grid, ListItem, Stack, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport CardDark from \"../../Components/Card/CardDark\";\nimport CardLight from \"../../Components/Card/CardLight\";\nimport CloseButton from \"../../Components/CloseButton\";\nimport ColorText from \"../../Components/ColoredText\";\nimport { EnemyExpandCard } from \"../../Components/EnemyEditor\";\nimport { FieldDisplayList, NodeFieldDisplay } from \"../../Components/FieldDisplay\";\nimport ModalWrapper from \"../../Components/ModalWrapper\";\nimport StatEditorList from \"../../Components/StatEditorList\";\nimport StatIcon from \"../../Components/StatIcon\";\nimport { CharacterContext } from \"../../Context/CharacterContext\";\nimport { DataContext } from \"../../Context/DataContext\";\nimport { allInputPremodKeys, uiInput as input } from \"../../Formula\";\nimport { ReadNode } from \"../../Formula/type\";\nimport KeyMap, { allEleDmgKeys, allEleResKeys, valueString } from \"../../KeyMap\";\nimport { allElements, ElementKey, ElementKeyWithPhy } from \"../../Types/consts\";\n\nconst cols = {\n  xs: 1, md: 2, lg: 3\n}\n\nexport default function StatModal({ open, onClose }) {\n  return <ModalWrapper open={open} onClose={onClose}>\n    <CardDark>\n      <CardHeader title=\"Detailed Stats\" action={<CloseButton onClick={onClose} />} />\n      <CardContent sx={{ pt: 0 }}>\n        <Stack spacing={1}>\n          <BonusStatsEditor />\n          <EnemyExpandCard />\n          <MainStatsCards />\n        </Stack>\n      </CardContent></CardDark>\n  </ModalWrapper>\n}\nconst keys = [...allInputPremodKeys]\nconst wrapperFunc = (e: JSX.Element) => <Grid item xs={1}>{e}</Grid>\nfunction BonusStatsEditor() {\n  const { character: { bonusStats }, characterDispatch } = useContext(CharacterContext)\n  const setFilter = useCallback((bonusStats) => characterDispatch({ bonusStats }), [characterDispatch],)\n  return <CardLight>\n    <CardContent sx={{ display: \"flex\" }}>\n      <Grid container columns={cols} sx={{ pt: 1 }} spacing={1}>\n        <StatEditorList statKeys={keys} statFilters={bonusStats} setStatFilters={setFilter} wrapperFunc={wrapperFunc} />\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst mainBaseKeys = [\"hp\", \"atk\", \"def\"] as const\nconst mainSubKeys = [\"eleMas\", \"critRate_\", \"critDMG_\", \"enerRech_\", \"heal_\"] as const\nconst mainReadNodes = [...mainBaseKeys, ...mainSubKeys].map(k => input.total[k])\nconst mainEditKeys = [\"atk_\", \"atk\", \"hp_\", \"hp\", \"def_\", \"def\", ...mainSubKeys] as const\n\nconst otherStatKeys = [\n  ...allEleDmgKeys,\n  ...allEleResKeys,\n  \"stamina\", \"incHeal_\", \"shield_\", \"cdRed_\"\n] as const\n\nconst miscStatkeys = allInputPremodKeys.filter(k => !mainEditKeys.includes(k as any) && !otherStatKeys.includes(k as any))\n\n\nfunction StatDisplayContent({ nodes, extra }: { nodes: ReadNode<number>[], extra?: Displayable }) {\n  const { data, oldData } = useContext(DataContext)\n  return <FieldDisplayList >\n    {nodes.map(rn => <NodeFieldDisplay component={ListItem} key={rn.info?.key} node={data.get(rn)} oldValue={oldData?.get(rn)?.value} />)}\n    {extra}\n  </FieldDisplayList>\n}\n\nfunction MainStatsCards() {\n  const { character: { elementKey }, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const specialNode = data.get(input.special)\n  const charEle = (elementKey ?? characterSheet.elementKey) as ElementKey\n  const isMelee = characterSheet.isMelee()\n\n  const otherStatReadNodes = useMemo(() => {\n    const nodes = otherStatKeys.map(k => input.total[k])\n    const eles: ElementKeyWithPhy[] = [...allElements].filter(k => k !== charEle)\n    if (isMelee) eles.concat([\"physical\"])\n\n    return nodes.filter(n => !(!data.get(n).value && eles.some(e => n.info?.key?.includes?.(e))))\n  }, [data, charEle, isMelee])\n\n\n  const miscStatReadNodes = useMemo(() => miscStatkeys.map(k => input.total[k]).filter(n => data.get(n).value), [data])\n\n  return <CardLight><CardContent>\n    <Grid container columns={cols} spacing={1}>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Main Stats\">\n          <StatDisplayContent nodes={mainReadNodes}\n            extra={specialNode && <ListItem sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\n              <span><b>Special:</b> <ColorText color={specialNode.info.variant}>{specialNode.info.key && StatIcon[specialNode.info.key]} {specialNode.info.key && KeyMap.get(specialNode.info.key)}</ColorText></span>\n              <span >{valueString(specialNode.value, specialNode.unit)}</span>\n            </ListItem>}\n          />\n        </StatDisplayCard>\n      </Grid>\n      <Grid item xs={1}>\n        <StatDisplayCard title=\"Other Stats\">\n          <StatDisplayContent nodes={otherStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>\n      {!!miscStatReadNodes.length && <Grid item xs={1}>\n        <StatDisplayCard title=\"Misc Stats\">\n          <StatDisplayContent nodes={miscStatReadNodes} />\n        </StatDisplayCard>\n      </Grid>}\n    </Grid>\n  </CardContent></CardLight>\n}\nfunction StatDisplayCard({ title, children }) {\n  return <CardDark>\n    <CardContent sx={{ py: 1 }}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <Typography variant=\"subtitle1\">{title}</Typography>\n      </Box>\n    </CardContent>\n    {children}\n  </CardDark>\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/BackgroundWorker.820b968b.worker.js\");\n}\n","import { ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\";\nimport { ArtifactSetKey } from \"../Types/consts\";\nimport { reduceFormula, statsUpperLower } from \"./addedUtils\";\nimport { foldProd, foldSum } from \"./addedUtils\";\nimport { forEachNodes, mapFormulas } from \"./internal\";\nimport { NumNode, ReadNode } from \"./type\";\nimport { cmp, constant, prod, sum } from './utils';\n\nexport function makeid(length: number, disallowed?: string[]) {\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (let _ = 0; _ < 5; _++) {\n    var result = '';\n    for (var i = 0; i < length; i++)\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    if (disallowed && disallowed.includes(result)) continue\n    return result;\n  }\n  throw Error('Too many collisions in `makeid`')\n}\n\nfunction readKey(k: string): ReadNode<number> {\n  return { operation: \"read\", operands: [], path: ['dyn', k], type: \"number\", accu: 'add' }\n}\n\nfunction isShallow(f: NumNode) {\n  if (f.operation === 'const' || f.operation === 'read' || f.operation === 'threshold') return true\n  if (f.operation !== 'add') return false\n  return f.operands.every(n => n.operation === 'const' || n.operation === 'read' || n.operation === 'threshold')\n}\n\nfunction deleteKey(a: ArtifactsBySlot, key: string) {\n  delete a.base[key]\n  a.values.flower.forEach(art => delete art.values[key])\n  a.values.plume.forEach(art => delete art.values[key])\n  a.values.sands.forEach(art => delete art.values[key])\n  a.values.goblet.forEach(art => delete art.values[key])\n  a.values.circlet.forEach(art => delete art.values[key])\n}\n\n/**\n * Folds the formula along addable parameters. For example:\n *            `atk + 790 * atk_ + 667` <=> `kf3Dk`\n *   where\n * @param a     ArtifactsBySlot, modified in-place\n * @param nodes Objective function and/or constraints\n */\nfunction collapseAffine(a: ArtifactsBySlot, nodes: NumNode[]) {\n  const allKeys = Object.keys(a.base)\n  let addedRegisters = {} as { [key: string]: { base: number, coeff: number, sumKeys: string[] } }\n  function distributeProd(n: NumNode, v: number) {\n    if (!isShallow(n)) throw Error('`distribute` only works on shallow node type.')\n    if (v === 1) return n\n    switch (n.operation) {\n      case 'threshold':\n        let [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read') {\n          return cmp(branch, bval, foldProd([ge, constant(v)]), foldProd([lt, constant(v)]), { source: branch.path[1] as ArtifactSetKey })\n        }\n        console.log(n)\n        throw Error('branch is not read...?')\n      case 'const':\n        return constant(v * n.value)\n      case 'add':\n        return sum(...n.operands.map(ni => distributeProd(ni, v)))\n      case 'read':\n        let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n        addedRegisters[newID] = { base: 0, coeff: v, sumKeys: [n.path[1]] }\n        return readKey(newID)\n      default:\n        throw Error('Should not reach here...')\n    }\n  }\n\n  const newNodes = mapFormulas(nodes, n => n, f => {\n    switch (f.operation) {\n      case 'mul':\n        let fMops = f.operands\n        if (fMops.some(n => n.operation === 'mul')) {\n          const toFold = fMops.filter(n => n.operation === 'mul').flatMap(n => [...n.operands]) as NumNode[]\n          const orig = fMops.filter(n => n.operation !== 'mul')\n          fMops = [...orig, ...toFold]\n        }\n        if (fMops.every(isShallow) && fMops.some(n => n.operation === 'const')) {\n          let coeff = fMops.reduce((coeff, n) => n.operation === 'const' ? coeff * n.value : coeff, 1)\n          const todistrib = fMops.filter(n => n.operation !== 'const')\n          if (todistrib.length === 0) return constant(coeff)\n          const mapped = distributeProd(todistrib.pop()!, coeff)\n\n          if (todistrib.length === 0) return mapped\n          return prod(mapped, ...todistrib)\n        }\n        return f\n      case 'add':\n        let fAops = f.operands\n        if (fAops.some(n => n.operation === 'add')) {\n          const toFold = fAops.filter(n => n.operation === 'add').flatMap(n => [...n.operands]) as NumNode[]\n          const goodboyes = fAops.filter(n => n.operation !== 'add')\n          fAops = [...goodboyes, ...toFold]\n        }\n        if (fAops.filter(n => n.operation === 'const' || n.operation === 'read').length > 1) {\n          const nofold = fAops.filter(n => n.operation !== 'const' && n.operation !== 'read')\n          const tofold = fAops.filter(n => n.operation === 'const' || n.operation === 'read')\n          let newID = makeid(5, [...allKeys, ...Object.keys(addedRegisters)])\n          const base = tofold.reduce((tot, n) => n.operation === 'const' ? tot + n.value : tot, 0)\n          const sumKeys = tofold.map(n => n.operation === 'read' ? n.path[1] : undefined).filter(n => n) as string[]\n          addedRegisters[newID] = { base, coeff: 1, sumKeys }\n\n          if (nofold.length === 0) return readKey(newID)\n          return sum(...nofold, readKey(newID))\n        }\n        return f\n      default:\n        return f\n    }\n  })\n\n  // Add `addedRegisters` to all the stats\n  let instKeys = new Set(Object.keys(a.base))\n  let resolveStack = Object.entries(addedRegisters)\n  while (resolveStack.length > 0) {\n    let [s, { base, coeff, sumKeys }] = resolveStack.shift()!\n    if (!sumKeys.every(k => instKeys.has(k))) {\n      resolveStack.push([s, { base, coeff, sumKeys }])\n      continue\n    }\n\n    let getV = (stats: DynStat) => {\n      return coeff * sumKeys.reduce((v, key) => v + stats[key], 0)\n    }\n\n    a.base[s] = base + getV(a.base)\n    a.values.flower.forEach(art => art.values[s] = getV(art.values))\n    a.values.plume.forEach(art => art.values[s] = getV(art.values))\n    a.values.sands.forEach(art => art.values[s] = getV(art.values))\n    a.values.goblet.forEach(art => art.values[s] = getV(art.values))\n    a.values.circlet.forEach(art => art.values[s] = getV(art.values))\n\n    instKeys.add(s)\n  }\n\n  // Remove all unused keys from all the stats\n  let unusedKeys = new Set<string>(instKeys)\n  forEachNodes(newNodes, _ => { }, n => {\n    if (n.operation === 'read') unusedKeys.delete(n.path[1])\n  })\n  unusedKeys.forEach(k => deleteKey(a, k))\n\n  return { a, nodes: newNodes }\n}\n\nexport function elimLinDepStats(a: ArtifactsBySlot, nodes: NumNode[]) {\n  // Step 1. Find all constants and eliminate them from the equation.\n  const { statsMin, statsMax } = statsUpperLower(a)\n  nodes = reduceFormula(nodes, statsMin, statsMax);\n\n  // Step 2. Find all sums of variables and constants, and combine these values into named registers\n  ({ a, nodes } = collapseAffine(a, nodes))\n\n  // Step 3. Use Gaussian elimination to find all linear dependencies\n  const allKeys = Object.keys(a.base)\n  const allStats = [a.base, ...Object.values(a.values).flatMap(slotArts => slotArts.map(art => art.values))]\n\n  const rows = allKeys.length\n  const cols = allStats.length\n\n  let mat = allKeys.map(k => allStats.map(dyn => dyn[k]))\n  let record: number[][] = Array(rows).fill(0).map(_ => Array(rows).fill(0))\n  for (let i = 0; i < rows; i++) record[i][i] = 1\n\n  let selectedPivots = new Set<number>()\n  for (let c = 0; c < cols; c++) {\n    let pivot = -1\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        pivot = r\n        break\n      }\n    }\n    if (pivot < 0) continue\n\n    selectedPivots.add(pivot)\n    const j = pivot\n\n    for (let r = 0; r < rows; r++) {\n      if (selectedPivots.has(r)) continue\n      if (Math.abs(mat[r][c]) > 1e-8) {\n        const coeff = mat[r][c] / mat[j][c]\n        mat[r] = mat[r].map((mr, i) => mr - coeff * mat[j][i])\n        record[r] = record[r].map((ri, i) => ri - coeff * record[j][i])  // record this transform in a matrix\n      }\n    }\n    if (selectedPivots.size === rows) break\n  }\n  if (selectedPivots.size === rows) {\n    return { a, nodes }\n  }\n\n  // Step 4. Eliminate the found dependencies.\n  for (let n = 0; n < rows; n++) {\n    if (!selectedPivots.has(n)) {\n      // If the row is linearly dependent on some shit\n      let depOn = record[n]\n        .map((ri, i) => ({ w: i === n ? 0 : -ri, key: allKeys[i] }))\n        .filter(({ w }) => Math.abs(w) > 1e-8)\n\n      if (depOn.some(({ w }) => w < 0)) continue  // Ignore lindep if any negative coeff\n      const replaceWith = foldSum(depOn.map(({ w, key }) => w === 1 ? readKey(key) : prod(w, readKey(key))))\n      nodes = mapFormulas(nodes, n => n, f => {\n        if (f.operation === 'read' && f.path[1] === allKeys[n]) {\n          return replaceWith\n        }\n        return f\n      })\n      deleteKey(a, allKeys[n])\n    }\n  }\n\n  return { a, nodes }\n}\n\nexport function thresholdToConstBranchForm(nodes: NumNode[]) {\n  return mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case \"threshold\":\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'const' && bval.operation === 'const') {\n          return branch.value >= bval.value ? ge : lt\n        }\n        if (branch.operation === 'threshold' && bval.operation === 'const') {\n          // Reserved for non-stacking buffs\n          const [br2, bv2, ge2, lt2] = branch.operands\n          if (br2.operation === 'read' && bv2.operation === 'const' && ge2.operation === 'const' && lt2.operation === 'const') {\n            let left = ge2.value >= bval.value ? ge : lt\n            let right = lt2.value >= bval.value ? ge : lt\n\n            console.log('non-stacking buff', n, cmp(br2, bv2, left, right))\n            return cmp(br2, bv2, left, right)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: nested threshold must follow the form [read, const, const, const]')\n        }\n        if (ge.operation !== 'const' || lt.operation !== 'const') {\n          if (lt.operation === 'const' && lt.value === 0) {\n            return prod(cmp(branch, bval, 1, 0), ge)\n          }\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-constant `pass` AND non-zero `fail`')\n        }\n\n        if (branch.operation !== 'read') {\n          console.log('faulty node:', n)\n          throw Error('Not Implemented: threshold() node with non-read `branch`')\n        }\n        return n\n      default:\n        return n\n    }\n  })\n}\n","import { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode } from \"./type\"\nimport { allOperations } from \"./optimization\"\nimport { mapFormulas } from \"./internal\"\nimport { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { LinearForm, maxWeight, toLinearUpperBound } from \"./linearUpperBound\"\nimport { foldLikeTerms, ExpandedPolynomial } from \"./expandPoly\"\nimport { ArtifactSetKey } from \"../Types/consts\"\nimport { ArtSetExclusion } from \"../Database/Data/BuildsettingData\"\n\nexport function foldSum(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'add' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv + n.value : pv, 0)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 0) {\n    if (nodes.length === 1) return nodes[0]\n    return sum(...nodes)\n  }\n  return sum(...nodes, constant(constVal))\n}\n\nexport function foldProd(nodes: readonly NumNode[]) {\n  if (nodes.length === 1) return nodes[0]\n  nodes = nodes.flatMap(n => n.operation === 'mul' ? n.operands : n)\n  let constVal = nodes.reduce((pv, n) => n.operation === 'const' ? pv * n.value : pv, 1)\n  nodes = nodes.filter(n => n.operation !== 'const')\n\n  if (nodes.length === 0) return constant(constVal)\n  if (constVal === 1) return prod(...nodes)\n  return prod(...nodes, constant(constVal))\n}\n\nexport function slotUpperLower(a: ArtifactBuildData[]) {\n  if (a.length === 0) return { statsMin: {}, statsMax: {} }\n  // Assume keys are the same for all artifacts.\n  const keys = Object.keys(a[0].values)\n  let statsMin: DynStat = {}\n  let statsMax: DynStat = {}\n  let sets = new Set<ArtifactSetKey>()\n  keys.forEach(k => {\n    statsMin[k] = Infinity\n    statsMax[k] = -Infinity\n  })\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < keys.length; j++) {\n      const k = keys[j]\n      statsMin[k] = Math.min(a[i].values[k], statsMin[k])\n      statsMax[k] = Math.max(a[i].values[k], statsMax[k])\n    }\n    if (a[i].set) sets.add(a[i].set!)\n  }\n  sets.forEach(set => {\n    statsMax[set] = 1\n    statsMin[set] = 0\n  })\n  if (sets.size === 1) {\n    const [s] = sets\n    statsMin[s] = 1\n  }\n  return { statsMin, statsMax }\n}\n\nexport function statsUpperLower(a: ArtifactsBySlot) {\n  let statsMin: DynStat = { ...a.base }\n  let statsMax: DynStat = { ...a.base }\n  Object.entries(a.values).forEach(([slotKey, slotArts]) => {\n    const { statsMin: smin, statsMax: smax } = slotUpperLower(slotArts)\n    Object.keys(smin).forEach(sk => {\n      statsMin[sk] = smin[sk] + (statsMin[sk] ?? 0)\n      statsMax[sk] = smax[sk] + (statsMax[sk] ?? 0)\n    })\n  })\n  return { statsMin, statsMax }\n}\n\nexport function reduceFormula(f: NumNode[], lower: DynStat, upper: DynStat) {\n  const fixedStats = Object.keys(lower).filter(statKey => lower[statKey] === upper[statKey])\n  let f2 = mapFormulas(f, n => n, n => {\n    switch (n.operation) {\n      case 'add':\n        return foldSum(n.operands)\n      case 'mul':\n        return foldProd(n.operands)\n\n      case 'read':\n        if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n        return n\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'const' && branchVal.operation === 'const')\n          return branch.value >= branchVal.value ? ge : lt\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          if (lower[branch.path[1]] >= branchVal.value) return ge\n          if (upper[branch.path[1]] < branchVal.value) return lt\n        }\n        return n\n      case 'min': case 'max':\n      case 'res': case 'sum_frac':\n        if (n.operands.every(ni => ni.operation === 'const')) {\n          const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n          return constant(out)\n        }\n        return n\n      default:\n        return n\n    }\n  })\n\n  // f2 = optimize(f2, {})\n  return f2\n}\n\nexport function reducePolynomial(f: ExpandedPolynomial[], lower: DynStat, upper: DynStat): ExpandedPolynomial[] {\n  const fixedStats = Object.keys(lower).filter(statKey => Math.abs(lower[statKey] - upper[statKey]) < 1e-6)\n  return f.map(({ nodes, terms }) => {\n    // 1. Reduce nodes by substituting constants\n    const tagNodePairs = Object.entries(nodes)\n    const reducedNodes = mapFormulas(tagNodePairs.map(([k, v]) => v), n => n, n => {\n      switch (n.operation) {\n        case 'read':\n          if (fixedStats.includes(n.path[1])) return constant(lower[n.path[1]])\n          return n\n        case 'threshold':\n          const [branch, branchVal, ge, lt] = n.operands\n          if (branch.operation === 'const' && branchVal.operation === 'const')\n            return branch.value >= branchVal.value ? ge : lt\n          if (branch.operation === 'read' && branchVal.operation === 'const') {\n            if (lower[branch.path[1]] >= branchVal.value) return ge\n            if (upper[branch.path[1]] < branchVal.value) return lt\n          }\n          else throw Error('Branch between non-read and non-const!!!')\n          return n\n        case 'add':\n          return foldSum(n.operands)\n        case 'mul':\n          return foldProd(n.operands)\n        case 'res': case 'sum_frac':\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        case 'min': case 'max':\n          // TODO: reduce min & max\n          if (n.operands.every(ni => ni.operation === 'const')) {\n            const out = allOperations[n.operation](n.operands.map(ni => ni.operation === 'const' ? ni.value : NaN))\n            return constant(out)\n          }\n          return n\n        default:\n          return n\n      }\n    })\n\n    // 2a. Find all the nodes that have been reduced to constants\n    let tagsToKill = {} as Dict<string, number>\n    reducedNodes.forEach((n, i) => {\n      if (n.operation !== 'const') return\n      const [tag] = tagNodePairs[i]\n      tagsToKill[tag] = n.value\n    })\n\n    // 2b. Substitute the constant nodes in where possible\n    let newTerms = terms.map(mon => {\n      let c = mon.coeff\n      const newTerms = mon.terms.filter(t => {\n        if (tagsToKill[t] !== undefined) {\n          c *= tagsToKill[t]!\n          return false\n        }\n        return true\n      })\n      if (c === 0) return { coeff: 0, terms: [] }\n      return { coeff: c, terms: newTerms }\n    })\n\n    // 3. Delete all the constant tags & add like terms together\n    let newNodes = Object.fromEntries(reducedNodes.map((n, i) => [tagNodePairs[i][0], n]))\n    Object.keys(tagsToKill).forEach(t => delete newNodes[t])\n    return { nodes: newNodes, terms: foldLikeTerms(newTerms) }\n  })\n}\n\n/**\n * Estimates maximum value across an array of formulas\n * @param f              Functions to maximize\n * @param a              Artifact set\n * @param cachedCompute  Optional Prior cached compute. If specified, will re-calculate `maxEst` assuming `lin, lower, upper` are correct.\n * @returns              CachedCompute\n */\ntype MaxEstQuery2 = { f: ExpandedPolynomial[], a: ArtifactsBySlot, cachedCompute: { lower: DynStat, upper: DynStat } }\n  | { f?: undefined, cachedCompute: { lin: LinearForm[], lower: DynStat, upper: DynStat }, a: ArtifactsBySlot }\nexport function estimateMaximum({ f, a, cachedCompute }: MaxEstQuery2) {\n  if (f === undefined) {\n    return { maxEst: cachedCompute.lin.map(l => maxWeight(a, l)), ...cachedCompute }\n  }\n\n  const { lower, upper } = cachedCompute\n  const est = f.map(fi => {\n    const lin = toLinearUpperBound(fi, lower, upper)\n    return { maxEst: maxWeight(a, lin), lin }\n  })\n\n  return {\n    maxEst: est.map(({ maxEst }) => maxEst),\n    lin: est.map(({ lin }) => lin),\n    lower, upper\n  }\n}\n\nexport function fillBuffer(stats: DynStat, mapping: Dict<string, number>, buffer: Float64Array) {\n  Object.entries(stats)\n    .filter(([k]) => mapping[k] !== undefined)\n    .forEach(([k, v]) => buffer[mapping[k]!] = v)\n}\n\nexport function thresholdExclusions(nodes: NumNode[], excl: ArtSetExclusion) {\n  nodes = mapFormulas(nodes, n => n, n => {\n    switch (n.operation) {\n      case 'threshold':\n        const [branch, branchVal, ge, lt] = n.operands\n        if (branch.operation === 'read' && branchVal.operation === 'const') {\n          const key = branch.path[1] as ArtifactSetKey\n          if (excl[key] !== undefined) {\n            const exc = excl[key] as (2 | 4)[]\n            // Based on exclusion, either return `lt` or shift `branchVal` to 4.\n            if (branchVal.value === 2 && exc.includes(2)) {\n              if (exc.includes(4)) return lt\n              return cmp(branch, 4, ge, lt)\n            }\n            if (branchVal.value === 4 && exc.includes(4))\n              return lt\n          }\n        }\n        return n\n      default:\n        return n\n    }\n  })\n  return nodes\n}\n","import { sum, prod, hashNode, cmpNode } from \"./utils\"\nimport { ConstantNode, NumNode } from \"./type\"\nimport { allArtifactSets } from \"../Types/consts\"\nimport { cartesian } from '../Util/Util'\nimport { forEachNodes } from \"./internal\"\nimport { makeid } from \"./optimize2\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nfunction countSlotUsage(node: NumNode): DynStat {\n  if (node.operation === 'add') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.min(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'mul') {\n    return node.operands.map(n => countSlotUsage(n)).reduce((a, b) => {\n      Object.entries(b).forEach(([slotKey, n]) => a[slotKey] = Math.max(n, a[slotKey] ?? 0))\n      return a\n    }, {})\n  }\n  else if (node.operation === 'threshold') {\n    const branch = node.operands[0]\n    if (branch.operation === 'read' && (allArtifactSets as readonly string[]).includes(branch.path[1])) {\n      let con = node.operands[1] as ConstantNode<number>\n      return { [branch.path[1]]: con.value }\n    }\n  }\n  return {}\n}\n\nfunction filterProductPossible({ terms, nodes }: ExpandedPolynomial, slotsLeft = 5) {\n  let sCount = Object.fromEntries(Object.entries(nodes).map(([tag, n]) => [tag, countSlotUsage(n)]))\n\n  terms = terms.filter(({ terms }) => {\n    const slotUsage = terms.reduce((tot, s) => {\n      Object.entries(sCount[s]).forEach(([slotKey, n]) => tot[slotKey] = Math.max(n, tot[slotKey] ?? 0))\n      return tot\n    }, {} as DynStat)\n    return Object.values(slotUsage).reduce((a, b) => a + b, 0) <= slotsLeft\n  })\n  return { terms, nodes }\n}\n\nexport type Monomial = {\n  coeff: number,\n  terms: string[]\n}\nexport type ExpandedPolynomial = {\n  terms: Monomial[],\n  nodes: Dict<string, NumNode>,\n}\n\nexport function sumM(...monomials: Monomial[][]): Monomial[] {\n  return monomials.flat()\n}\nexport function prodM(...monomials: Monomial[][]): Monomial[] {\n  return cartesian(...monomials).map(monos => monos.reduce((ret, nxt) => {\n    ret.coeff *= nxt.coeff\n    ret.terms.push(...nxt.terms)\n    return ret\n  }, { coeff: 1, terms: [] }))\n}\nexport function constantM(v: number): Monomial[] {\n  return [{ coeff: v, terms: [] }]\n}\nexport function readM(tag: string): Monomial[] {\n  return [{ coeff: 1, terms: [tag] }]\n}\n\nexport function foldLikeTerms(mono: Monomial[]): Monomial[] {\n  let mon = [...mono]\n  mon.forEach(m => m.terms.sort())\n  mon.sort(({ terms: termsA }, { terms: termsB }) => {\n    if (termsA.length !== termsB.length) return termsA.length - termsB.length\n    for (let i = 0; i < termsA.length; i++) {\n      if (termsA[i] !== termsB[i]) return termsA[i] < termsB[i] ? -1 : 1\n    }\n    return 0\n  })\n\n  for (let i = mon.length - 2; i >= 0; i--) {\n    let a = mon[i].terms\n    let b = mon[i + 1].terms\n    if (a.length !== b.length) continue\n    if (a.every((ai, i) => ai === b[i])) {\n      mon[i].coeff = (mon[i].coeff ?? 0) + (mon[i + 1].coeff ?? 0)\n      mon.splice(i + 1, 1)\n    }\n  }\n  return mon\n}\n\n/**\n * Factors damage formula into sums of monomials in each variable.\n * For example:  (1700 * atk_ + atk) * (1 + cr * cd) * (1 + sum_frac(EM))\n *   -> 1700 * atk_ + 1700 * atk_ * cr * cd + 1700 * atk_ * sum_frac(EM) + 1700 * atk_ * cr * cd * sum_frac(EM)\n *            + atk +         atk * cr * cd +         atk * sum_frac(EM) +         atk * cr * cd * sum_frac(EM)\n *\n * For a total of 8 terms, since there are 3 pairs of additions, for 2^3 sum-of-product terms.\n *\n * isVar() is used to check whether any node should be considered a variable on its own.\n */\ntype NodeLinkedList = { n: NumNode, tag: string, next: NodeLinkedList | undefined }\nexport function expandPoly(node: NumNode, inheritTags?: string[]): ExpandedPolynomial {\n  let varMap = {} as Dict<number, NodeLinkedList> // my shitty hashmap\n  let tagMap = {} as Dict<string, NumNode>\n  const varTags = inheritTags ?? []\n  function lookup(n: NumNode) {\n    let hsh = hashNode(n)\n    let z = varMap[hsh]\n    while (z !== undefined) {\n      if (cmpNode(z.n, n)) return z.tag\n      z = z.next\n    }\n    const newTag = makeid(10, varTags)\n    varMap[hsh] = { n, tag: newTag, next: varMap[hsh] }\n    tagMap[newTag] = n\n    varTags.push(newTag)\n    return newTag\n  }\n\n  let stat2tag = {} as Dict<string, string>\n  forEachNodes([node], _ => { }, n => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = lookup(n as NumNode)\n  })\n\n  function toSOP(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'add':\n        return sumM(...n.operands.map(toSOP))\n      case 'mul':\n        return prodM(...n.operands.map(toSOP))\n      case 'const':\n        return constantM(n.value)\n      default:\n        return readM(lookup(n))\n    }\n  }\n\n  // let sop = toSOP(node)\n  let sop = foldLikeTerms(toSOP(node))\n  return filterProductPossible({\n    terms: sop,\n    nodes: tagMap,\n  })\n}\n\n// Really should avoid using this function ever\nexport function toNumNode({ nodes, terms }: ExpandedPolynomial) {\n  return sum(...terms.map(({ coeff, terms }) => prod(coeff, ...terms.map(t => nodes[t]!))))\n}\n","function pivotInplace(A: number[][], { i, j }: { i: number, j: number }) {\n  const Aij = A[i][j]\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    for (let k = 0; k < A[0].length; k++) {\n      if (k === j) continue\n      A[h][k] -= A[i][k] * A[h][j] / Aij\n    }\n  }\n  for (let h = 0; h < A.length; h++) {\n    if (h === i) continue\n    A[h][j] = -A[h][j] / Aij\n  }\n  for (let k = 0; k < A[0].length; k++) {\n    if (k === j) continue\n    A[i][k] = A[i][k] / Aij\n  }\n  A[i][j] = 1 / Aij\n}\n\nfunction findPiv1(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let j = 0; j < c - 1; j++) {\n    if (A[r - 1][j] >= 0) continue\n    for (let i = 0; i < r - 1; i++) {\n      if (A[i][j] > 1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('UNBOUNDED FEASIBLE')\n  }\n\n  if (minloc.i < 0) throw Error('NO PIVOTS (done)')\n  return { i: minloc.i, j: minloc.j }\n}\n\nfunction findPiv2(A: number[][]) {\n  const r = A.length, c = A[0].length\n  let minloc = { i: -1, j: -1, cmp: Infinity }\n  for (let i = 0; i < r - 1; i++) {\n    if (A[i][c - 1] >= 0) continue\n    for (let j = 0; j < c - 1; j++) {\n      if (A[i][j] < -1e-5) {\n        const cmp = A[i][c - 1] / A[i][j]\n        if (cmp < minloc.cmp) minloc = { i, j, cmp }\n      }\n    }\n\n    if (minloc.i < 0) throw Error('INFEASIBLE')\n    return { i: minloc.i, j: minloc.j }\n  }\n  throw Error('NO PIVOTS (done)')\n}\n\nfunction backtrack(tableau: number[][], ijTrack: { i: number, j: number }[], targ: number) {\n  let side = 1;  // 0 left, 1 right\n  ijTrack.forEach(({ i, j }) => {\n    if (side === 1 && j === targ) {\n      targ = i\n      side = 0\n    }\n    else if (side === 0 && i === targ) {\n      targ = j\n      side = 1\n    }\n  })\n\n  const ncol = tableau[0].length\n  return side === 0 ? tableau[targ][ncol - 1] : 0\n}\n\n/**\n * Solve a Linear Program defined by:\n *              min  c^T x\n *               x\n *   Subject to:     Ax <= b\n *                    x >= 0\n *\n * Implemented according to:\n *   https://www.math.ucla.edu/~tom/LP.pdf\n *\n * Does not implement any cycle detection, though that *shouldnt* a problem for GO's use\n *   case. This algorithm is fairly numerically unstable though, use with care & always\n *   try to verify the solution. It's also a fair bit slower than it needs to be.\n *\n * @param c        Objective vector\n * @param Ab       Constraints matrix with thresholds. Inputted in block form [A, b]\n * @returns        the optimal solution x\n */\nexport function solveLP(c: number[], Ab: number[][]) {\n  let rows = Ab.length + 1\n  let cols = Ab[0].length\n\n  let tableau = Array(rows).fill(0).map(_ => Array(cols).fill(0))\n  Ab.forEach((Ai, i) => Ai.forEach((Aij, j) => tableau[i][j] = Aij))\n  // b.forEach((bi, i) => tableau[i][cols - 1] = bi)\n  c.forEach((cj, j) => tableau[rows - 1][j] = cj)\n  // console.log('tab', tableau)\n\n  let ijTrack: { i: number, j: number }[] = []\n\n  while (tableau.some((t, i) => i < rows - 1 && t[cols - 1] < 0)) {\n    const ij = findPiv2(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  while (tableau[rows - 1].some((t, j) => j < cols - 1 && t < 0)) {\n    const ij = findPiv1(tableau)\n    ijTrack.push(ij)\n    // tableau = pivot(tableau, ij)\n    pivotInplace(tableau, ij)\n  }\n\n  return c.map((_, i) => backtrack(tableau, ijTrack, i))\n}\n","import { NumNode } from \"./type\"\nimport { ArtifactsBySlot, ArtifactsBySlotVec, DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { ExpandedPolynomial, Monomial, sumM, prodM, constantM, readM, foldLikeTerms } from './expandPoly'\nimport { precompute, allOperations } from \"./optimization\"\nimport { solveLP } from './solveLP_simplex'\nimport { cartesian } from '../Util/Util'\nimport { fillBuffer } from \"./addedUtils\"\n\nexport type LinearForm = {\n  w: DynStat,\n  c: number,\n  err: number\n}\nexport type LinearFormVec = {\n  w: number[],\n  c: number,\n  err: number\n}\n\nfunction minMax(node: NumNode, lower: DynStat, upper: DynStat) {\n  let [compute, mapping, buffer] = precompute([node], n => n.path[1])\n  fillBuffer(lower, mapping, buffer)\n  const minval = compute()[0]\n  fillBuffer(upper, mapping, buffer)\n  const maxval = compute()[0]\n  return [minval, maxval]\n}\n\n/**\n * `res` is the ONE place where negative arguments & negative slopes are allowed.\n * @param node\n */\nfunction handleResArg(node: { 'operation': 'res', 'operands': NumNode[] }, lower: DynStat, upper: DynStat) {\n  function flipOps(n: NumNode): NumNode {\n    switch (n.operation) {\n      case 'add':\n        return sum(...n.operands.map(n => flipOps(n)))\n      case 'const':\n        return constant(-n.value)\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (ge.operation === 'const' && lt.operation === 'const') {\n          if (ge.value <= lt.value) {\n            return cmp(branch, bval, -ge.value, -lt.value)\n          }\n        }\n        console.log(n)\n        throw Error('(res neg slope): threshold. Something went wrong.')\n      default:\n        console.log(n)\n        throw Error('(res neg slope) Havent written logic to handle this')\n    }\n  }\n\n  const flippedResOp = flipOps(node.operands[0])\n\n  let [a, b] = minMax(flippedResOp, lower, upper)\n  let resf = allOperations['res']\n  let [c, d] = [resf([-a]), resf([-b])]\n\n  if (b > 0 && a > -1.75) {\n    // 1 + x / 2\n    return sum(1, prod(.5, flippedResOp))\n  }\n\n  const intercept = (b * c - a * d) / (b - a)\n  const slope = (c - d) / (b - a)\n  return sum(intercept, prod(slope, flippedResOp))\n}\n\n/**\n * First converts a product of variables (including max, min, sum_frac, threshold, etc.) to\n *   a pure product form consisting of only `read` and `const` nodes, guaranteeing the\n *   product form is an upper bound.\n *\n * Then on the product form, create a linear upper bound using `lub` and return it.\n *\n * @param node The formula to expand\n * @param lower Stat lower bounds\n * @param upper Stat upper bounds\n * @returns\n */\nexport function toLinearUpperBound({ nodes, terms }: ExpandedPolynomial, lower: DynStat, upper: DynStat): LinearForm {\n  let stat2tag = {} as Dict<string, string>\n  Object.entries(nodes).forEach(([tag, n]) => {\n    if (n.operation === 'read') stat2tag[n.path[1]] = tag\n  })\n\n  let linerr = 0\n  function toPureRead(n: NumNode): Monomial[] {\n    switch (n.operation) {\n      case 'const':\n        return constantM(n.value)\n      case 'read':\n        return readM(stat2tag[n.path[1]]!)\n      case 'add':\n        return sumM(...n.operands.map(toPureRead))\n      case 'mul':\n        return prodM(...n.operands.map(toPureRead))\n\n      case 'threshold':\n        const [branch, bval, ge, lt] = n.operands\n        if (branch.operation === 'read' && bval.operation === 'const'\n          && lt.operation === 'const' && ge.operation === 'const') {\n          if (ge.value < lt.value) {\n            console.log(n)\n            throw Error('Not Implemented (threshold must be increasing)')\n          }\n\n          let key = branch.path[1]\n          if (lower[key] >= bval.value) return constantM(ge.value)\n          if (upper[key] < bval.value) return constantM(lt.value)\n\n          const slope = (ge.value - lt.value) / (bval.value - lower[key])\n          const mon1 = prodM(constantM(slope), readM(stat2tag[branch.path[1]]!))\n\n          const intercept = lt.value - slope * lower[key]\n          if (intercept === 0) return mon1\n          return sumM(constantM(intercept), mon1)\n          // if (lt.value === 0) return mon1\n          // return sumM(constantM(lt.value), mon1)\n        }\n        console.log(n)\n        throw Error('Not Implemented (threshold must branch between constants)')\n      case 'res':\n        let op = handleResArg(n as { 'operation': 'res', 'operands': NumNode[] }, lower, upper)\n        return toPureRead(op)\n\n      case 'min': case 'max':\n        let [rop, cop] = n.operands\n        if (cop.operation !== 'const')\n          [rop, cop] = [cop, rop]  // Assume min(const, read)\n        if (n.operation === 'min') return toPureRead(rop)\n\n        if (cop.operation === 'const') {\n          const thresh = cop.value\n          const [minVal, maxVal] = minMax(rop, lower, upper)\n          if (minVal > thresh) return toPureRead(rop)\n          if (thresh > maxVal) return constantM(thresh)\n\n          // rescale `rop` to be above thresh, since max(f, 0) is a convex function\n          const m = (maxVal - thresh) / (maxVal - minVal)\n          const b = thresh - m * minVal\n          return sumM(constantM(b), prodM(constantM(m), toPureRead(rop)))\n        }\n        console.log(n)\n        throw Error('Not Implemented (max between two non-constants)')\n\n      case 'sum_frac':\n        const [em, denom] = n.operands\n        if (denom.operation !== 'const') throw Error('Not Implemented (non-constant sum_frac denominator)')\n\n        const [minEM, maxEM] = minMax(em, lower, upper)\n        const k = denom.value\n        // The sum_frac form is concave, so any Taylor expansion of EM / (EM + k) gives an upper bound.\n        // We can solve for the best Taylor approximation location with the following formula.\n        let loc = Math.sqrt((minEM + k) * (maxEM + k)) - k\n        let below = (k + loc) * (k + loc)\n        let slope = k / below\n        let c = loc * loc / below\n\n        // TODO: update linerr\n        return sumM(constantM(c), prodM(constantM(slope), toPureRead(em)))\n\n      default:\n        console.log(n)\n        throw Error('Not Implemented')\n    }\n  }\n\n  // 1. Turn all nodes into linear upper bounds\n  const nodesToMap = Object.fromEntries(Object.entries(nodes).filter(([tag, n]) => n.operation !== 'read').map(([tag, n]) => [tag, toPureRead(n)]))\n\n  // 2. substitute into `terms` and construct a new SOPForm whose nodes are all pure read nodes\n  let t2 = terms.flatMap(({ coeff, terms }) => prodM(constantM(coeff), ...terms.map(t => nodesToMap[t] ?? readM(t))))\n  t2 = foldLikeTerms(t2)\n\n  // 2.5 Re-name all the tags to their read node version\n  t2 = t2.map(({ coeff, terms }) => {\n    terms = terms.map(t => {\n      const nt = nodes[t]\n      if (!nt || nt.operation !== 'read') throw Error('MUST be a read node.')\n      return nt.path[1]\n    })\n    return { coeff, terms }\n  })\n\n  // 3. call lub() on each term\n  const lins = t2.map(({ coeff, terms }) => {\n    if (terms.length === 0) return { w: {}, c: coeff, err: 0 }\n    if (terms.length === 1) return { w: { [terms[0]]: coeff }, c: 0, err: 0 }\n    const { w, c, err } = lub(terms.map(k => ({ lower: lower[k], upper: upper[k] })))\n    const retw = w.reduce((ret, wi, i) => {\n      ret[terms[i]] = wi * coeff + (ret[terms[i]] ?? 0)\n      return ret\n    }, {} as DynStat)\n    return { w: retw, c: coeff * c, err: coeff * err + linerr }\n  })\n\n  return lins.reduce((lin, l) => {\n    lin.c += l.c; lin.err += l.err\n    Object.entries(l.w).forEach(([k, v]) => lin.w[k] = v + (lin.w[k] ?? 0))\n    return lin\n  }, { w: {}, c: 0, err: 0 })\n}\n\n/**\n * Constructs an upper bounding linear form for a function x_1 * x_2 * ... * x_n\n * @param bounds upper and lower bounds for each x_i\n * @returns { w, c, err } with\n */\nfunction lub(bounds: { lower: number, upper: number }[]): { w: number[], c: number, err: number } {\n  if (bounds.length === 0) return { w: [], c: 0, err: 0 }\n  const nVar = bounds.length\n\n  // Re-scale bounds to [0, 1] for numerical stability.\n  const boundScale = bounds.map(({ upper }) => upper)\n  const scaleProd = boundScale.reduce((prod, v) => prod * v, 1)\n  bounds = bounds.map(({ lower, upper }) => ({ lower: lower / upper, upper: 1 }))\n\n  // Setting up the linear program in terms of constraints.\n  let cons = cartesian(...bounds.map(({ lower, upper }) => [lower, upper])).flatMap((coords) => {\n    const prod = coords.reduce((prod, v) => prod * v, 1)\n    return [\n      [...coords.map(v => -v), 1, 0, -prod],\n      [...coords, -1, -1, prod],\n    ]\n  })\n\n  // Force equality at upper & lower corners?\n  // cons.push([...bounds.map(lu => lu.lower), -1, 0, bounds.reduce((prod, { lower }) => prod * lower, 1)])\n  // cons.push([...bounds.map(lu => lu.upper), -1, 0, bounds.reduce((prod, { upper }) => prod * upper, 1)])\n\n  let soln: any\n  const objective = [...bounds.map(_ => 0), 0, 1]\n  try {\n    // TODO: verify solution\n    soln = solveLP(objective, cons)\n  }\n  catch (e) {\n    console.log('ERROR on bounds', bounds)\n    console.log('Possibly numerical instability issue.')\n    throw e\n  }\n  return {\n    w: soln.slice(0, nVar).map((wi, i) => wi * scaleProd / boundScale[i]),\n    c: -scaleProd * soln[nVar],\n    err: scaleProd * soln[nVar + 1]\n  }\n}\n\nexport function maxWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMax([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((maxTotVal, [slotKey, slotArts]) => maxTotVal + sparseMatmulMax([lin], slotArts.map(a => a.values))[0], 0)\n}\nexport function minWeight(a: ArtifactsBySlot, lin: LinearForm) {\n  const baseVal = sparseMatmulMin([lin], [a.base])[0] + lin.c\n\n  return baseVal + Object.entries(a.values)\n    .reduce((minTotVal, [slotKey, slotArts]) => minTotVal + sparseMatmulMin([lin], slotArts.map(a => a.values))[0], 0)\n}\n\nexport function maxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  return Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n}\nexport function minMaxWeightVec(a: ArtifactsBySlotVec, lin: LinearForm) {\n  const ixs: number[] = []\n  const w: number[] = []\n  Object.entries(lin.w).forEach(([k, ww]) => {\n    ixs.push(a.keys.indexOf(k))\n    w.push(ww)\n  })\n\n  const baseVal = ixs.reduce((accum, ix, i) => accum + a.base[ix] * w[i], lin.c)\n  const maxw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.max(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n\n  const minw = Object.values(a.values)\n    .reduce((wtot, arts) => wtot + Math.min(\n      ...arts.map(art => ixs.reduce((accum, ix, i) => accum + art.values[ix] * w[i], 0))\n    ), baseVal)\n  return { minw, maxw }\n}\n\n\n\n// Implement matrix multiply between row-major w's of LinearForm and col-major DynStats that represent artifacts.\n/**\n * Implements sparse matrix multiplication between A and x\n * @param A A list of row-major w's of some LinearForm\n * @param x A list of col-major DynStats that represent some artifacts\n * @returns A col-major 2d array number[][] with shape (A.length, x.length).\n *          ret[0] is [A1 @ x1, A2 @ x1, ..., An @ x1]\n */\nexport function sparseMatmul(A: LinearForm[], x: DynStat[]) {\n  return x.map(dyn => A.map(({ w }) => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0)))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a max() along the rows.\n */\nexport function sparseMatmulMax(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.max(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n\n/**\n * Sparse matrix multiplication between A and x, followed by a min() along the rows.\n */\nexport function sparseMatmulMin(A: LinearForm[], x: DynStat[]) {\n  return A.map(({ w }) => Math.min(...x.map(dyn => Object.entries(w).reduce((a, [k, wk]) => a + wk * (dyn[k] ?? 0), 0))))\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\";\nimport { forEachNodes, mapFormulas } from \"../../../../Formula/internal\";\nimport { allOperations, constantFold } from \"../../../../Formula/optimization\";\nimport { ConstantNode, NumNode } from \"../../../../Formula/type\";\nimport { constant, customRead, max, min } from \"../../../../Formula/utils\";\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\";\nimport { assertUnreachable, objectKeyMap, objectMap, range } from \"../../../../Util/Util\";\n\ntype DynMinMax = { [key in string]: MinMax }\ntype MinMax = { min: number, max: number }\n\ntype MicropassOperation = \"reaffine\" | \"pruneArtRange\" | \"pruneNodeRange\" | \"pruneOrder\"\nexport function pruneAll(nodes: NumNode[], minimum: number[], arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion, forced: Dict<MicropassOperation, boolean>): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  let should = forced\n  /** If `key` makes progress, all operations in `value` should be performed */\n  const deps: StrictDict<MicropassOperation, Dict<MicropassOperation, true>> = {\n    pruneOrder: { pruneNodeRange: true },\n    pruneArtRange: { pruneNodeRange: true },\n    pruneNodeRange: { reaffine: true },\n    reaffine: { pruneOrder: true, pruneArtRange: true, pruneNodeRange: true }\n  }\n  let count = 0\n  while (Object.values(should).some(x => x) && count++ < 20) {\n    if (should.pruneOrder) {\n      delete should.pruneOrder\n      const newArts = pruneOrder(arts, numTop, exclusion)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneOrder }\n      }\n    }\n    if (should.pruneArtRange) {\n      delete should.pruneArtRange\n      const newArts = pruneArtRange(nodes, arts, minimum)\n      if (arts !== newArts) {\n        arts = newArts\n        should = { ...should, ...deps.pruneArtRange }\n      }\n    }\n    if (should.pruneNodeRange) {\n      delete should.pruneNodeRange\n      const newNodes = pruneNodeRange(nodes, arts)\n      if (nodes !== newNodes) {\n        nodes = newNodes\n        should = { ...should, ...deps.pruneNodeRange }\n      }\n    }\n    if (should.reaffine) {\n      delete should.reaffine\n      const { nodes: newNodes, arts: newArts } = reaffine(nodes, arts)\n      if (nodes !== newNodes || arts !== newArts) {\n        nodes = newNodes\n        arts = newArts\n        should = { ...should, ...deps.reaffine }\n      }\n    }\n  }\n  return { nodes, arts }\n}\n\nexport function reaffine(nodes: NumNode[], arts: ArtifactsBySlot, forceRename: boolean = false): { nodes: NumNode[], arts: ArtifactsBySlot } {\n  const affineNodes = new Set<NumNode>(), topLevelAffine = new Set<NumNode>()\n\n  function visit(node: NumNode, isAffine: boolean) {\n    if (isAffine) affineNodes.add(node)\n    else node.operands.forEach(_op => {\n      const op = _op as NumNode\n      affineNodes.has(op) && topLevelAffine.add(op)\n    })\n  }\n\n  const dynKeys = new Set<string>()\n\n  forEachNodes(nodes, _ => { }, f => {\n    const operation = f.operation\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || f.path[0] !== \"dyn\" || f.accu !== \"add\")\n          throw new Error(`Found unsupported ${operation} node at path ${f.path} when computing affine nodes`)\n        dynKeys.add(f.path[1])\n        visit(f, true)\n        break\n      case \"add\": visit(f, f.operands.every(op => affineNodes.has(op))); break\n      case \"mul\": {\n        const nonConst = f.operands.filter(op => op.operation !== \"const\")\n        visit(f, nonConst.length === 0 || (nonConst.length === 1 && affineNodes.has(nonConst[0])))\n        break\n      }\n      case \"const\":\n        if (typeof f.value === \"string\" || f.value === undefined)\n          throw new Error(`Found constant ${f.value} while compacting`)\n        visit(f as NumNode, true); break\n      case \"res\": case \"threshold\": case \"sum_frac\":\n      case \"max\": case \"min\": visit(f, false); break\n      case \"data\": case \"subscript\": case \"lookup\": case \"match\": case \"prio\": case \"small\":\n        throw new Error(`Found unsupported ${operation} node when computing affine nodes`)\n      default: assertUnreachable(operation)\n    }\n  })\n\n  if ([...topLevelAffine].every(({ operation }) => operation === \"read\" || operation === \"const\") &&\n    Object.keys(arts.base).length === dynKeys.size)\n    return { nodes, arts }\n\n  let current = -1\n  function nextDynKey(): string {\n    while (dynKeys.has(`${++current}`));\n    return `${current}`\n  }\n\n  nodes.forEach(node => affineNodes.has(node) && topLevelAffine.add(node))\n  const affine = [...topLevelAffine].filter(f => f.operation !== \"const\")\n  const affineMap = new Map(affine.map(node => [node,\n    !forceRename && node.operation === \"read\" && node.path[0] === \"dyn\"\n      ? node\n      : { ...customRead([\"dyn\", `${nextDynKey()}`]), accu: \"add\" as const }]))\n  nodes = mapFormulas(nodes, f => affineMap.get(f as NumNode) ?? f, f => f)\n\n  function reaffineArt(stat: DynStat): DynStat {\n    const values = constantFold([...affineMap.keys()], {\n      dyn: objectMap(stat, (value) => constant(value))\n    } as any, _ => true)\n    return Object.fromEntries([...affineMap.values()].map((v, i) => [v.path[1], (values[i] as ConstantNode<number>).value]))\n  }\n  const result = {\n    nodes, arts: {\n      base: reaffineArt(arts.base),\n      values: objectKeyMap(allSlotKeys, slot =>\n        arts.values[slot].map(({ id, set, values }) => ({ id, set, values: reaffineArt(values) })))\n    }\n  }\n  const offsets = Object.entries(reaffineArt({}))\n  for (const arts of Object.values(result.arts.values))\n    for (const { values } of arts)\n      for (const [key, baseValue] of offsets)\n        values[key] -= baseValue\n  return result\n}\n/** Remove artifacts that cannot be in top `numTop` builds */\nexport function pruneOrder(arts: ArtifactsBySlot, numTop: number, exclusion: ArtSetExclusion): ArtifactsBySlot {\n  let progress = false\n  const noRainbow = !exclusion.rainbow?.length\n  const noSwitchIn = new Set(Object.entries(exclusion).filter(([_, v]) => v.length).map(([k]) => k) as ArtifactSetKey[])\n  const noSwitchOut = new Set(Object.entries(exclusion).filter(([_, v]) => v.includes(2) && !v.includes(4)).map(([k]) => k) as ArtifactSetKey[])\n  const values = objectKeyMap(allSlotKeys, slot => {\n    const list = arts.values[slot]\n    const newList = list.filter(art => {\n      let count = 0\n      return list.every(other => {\n        const greaterEqual = Object.entries(other.values).every(([k, o]) => o >= art.values[k])\n        const greater = Object.entries(other.values).some(([k, o]) => o > art.values[k])\n        if (greaterEqual && (greater || other.id > art.id) &&\n          ((noRainbow && !noSwitchIn.has(other.set!) && !noSwitchOut.has(art.set!)) || art.set === other.set))\n          count++\n        return count < numTop\n      })\n    })\n    if (newList.length !== list.length) progress = true\n    return newList\n  })\n  return progress ? { base: arts.base, values } : arts\n}\n/** Remove artifacts that cannot reach `minimum` in any build */\nfunction pruneArtRange(nodes: NumNode[], arts: ArtifactsBySlot, minimum: number[]): ArtifactsBySlot {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const wrap = { arts }\n  while (true) {\n    const artRanges = objectKeyMap(allSlotKeys, slot => computeArtRange(wrap.arts.values[slot]))\n    const otherArtRanges = objectKeyMap(allSlotKeys, key =>\n      addArtRange(Object.entries(artRanges).map(a => a[0] === key ? baseRange : a[1]).filter(x => x)))\n\n    let progress = false\n    const values = objectKeyMap(allSlotKeys, slot => {\n      const result = wrap.arts.values[slot].filter(art => {\n        const read = addArtRange([computeArtRange([art]), otherArtRanges[slot]])\n        const newRange = computeNodeRange(nodes, read)\n        return nodes.every((node, i) => newRange.get(node)!.max >= (minimum[i] ?? -Infinity))\n      })\n      if (result.length !== wrap.arts.values[slot].length)\n        progress = true\n      return result\n    })\n    if (!progress) break\n    wrap.arts = { base: wrap.arts.base, values }\n  }\n  return wrap.arts\n}\nfunction pruneNodeRange(nodes: NumNode[], arts: ArtifactsBySlot): NumNode[] {\n  const baseRange = Object.fromEntries(Object.entries(arts.base).map(([key, x]) => [key, { min: x, max: x }]))\n  const reads = addArtRange([baseRange, ...Object.values(arts.values).map(values => computeArtRange(values))])\n  const nodeRange = computeNodeRange(nodes, reads)\n\n  return mapFormulas(nodes, f => {\n    const { operation } = f\n    const operandRanges = f.operands.map(x => nodeRange.get(x)!)\n    switch (operation) {\n      case \"threshold\": {\n        const [value, threshold, pass, fail] = operandRanges\n        if (value.min >= threshold.max) return f.operands[2]\n        else if (value.max < threshold.min) return constant(0)\n        if (pass.max === pass.min &&\n          fail.max === fail.min &&\n          pass.min === fail.min && isFinite(pass.min))\n          return constant(pass.max)\n        break\n      }\n      case \"min\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every((op2, j) => op1.min <= op2.max)\n        })\n        if (newOperands.length < operandRanges.length) return min(...newOperands)\n        break\n      }\n      case \"max\": {\n        const newOperands = f.operands.filter((_, i) => {\n          const op1 = operandRanges[i]\n          return operandRanges.every(op2 => op1.max >= op2.min)\n        })\n        if (newOperands.length < operandRanges.length) return max(...newOperands)\n        break\n      }\n    }\n    return f\n  }, f => f)\n}\nfunction addArtRange(ranges: DynMinMax[]): DynMinMax {\n  const result: DynMinMax = {}\n  ranges.forEach(range => {\n    Object.entries(range).forEach(([key, value]) => {\n      if (result[key]) {\n        result[key].min += value.min\n        result[key].max += value.max\n      } else result[key] = { ...value }\n    })\n  })\n  return result\n}\nfunction computeArtRange(arts: ArtifactBuildData[]): DynMinMax {\n  const result: DynMinMax = {}\n  if (arts.length) {\n    Object.keys(arts[0].values)\n      .filter(key => arts.every(art => art.values[key]))\n      .forEach(key => result[key] = { min: arts[0].values[key], max: arts[0].values[key] })\n    arts.forEach(({ values }) => {\n      for (const [key, value] of Object.entries(values)) {\n        if (!result[key]) result[key] = { min: 0, max: value }\n        else {\n          if (result[key].max < value) result[key].max = value\n          if (result[key].min > value) result[key].min = value\n        }\n      }\n    })\n  }\n  return result\n}\nfunction computeNodeRange(nodes: NumNode[], reads: DynMinMax): Map<NumNode, MinMax> {\n  const range = new Map<NumNode, MinMax>()\n\n  forEachNodes(nodes, _ => { }, _f => {\n    const f = _f as NumNode\n    const { operation } = f\n    const operands = f.operands.map(op => range.get(op)!)\n    let current: MinMax\n    switch (operation) {\n      case \"read\":\n        if (f.path[0] !== \"dyn\")\n          throw new Error(`Found non-dyn path ${f.path} while computing range`)\n        current = reads[f.path[1]] ?? { min: 0, max: 0 }\n        break\n      case \"const\": current = computeMinMax([f.value]); break\n      case \"subscript\": current = computeMinMax(f.list); break\n      case \"add\": case \"min\": case \"max\":\n        current = {\n          min: allOperations[operation](operands.map(x => x.min)),\n          max: allOperations[operation](operands.map(x => x.max)),\n        }; break\n      case \"res\": current = {\n        min: allOperations[operation]([operands[0].max]),\n        max: allOperations[operation]([operands[0].min]),\n      }; break\n      case \"mul\": current = operands.reduce((accu, current) => computeMinMax([\n        accu.min * current.min, accu.min * current.max,\n        accu.max * current.min, accu.max * current.max,\n      ])); break\n      case \"threshold\":\n        if (operands[0].min >= operands[1].max) current = operands[2]\n        else if (operands[0].max < operands[1].min) current = computeMinMax([0])\n        else current = computeMinMax([0], [operands[2]])\n        break\n      case \"sum_frac\": {\n        const [x, c] = operands, sum = { min: x.min + c.min, max: x.max + c.max }\n        if (sum.min <= 0 && sum.max >= 0)\n          current = (x.min <= 0 && x.max >= 0) ? { min: NaN, max: NaN } : { min: -Infinity, max: Infinity }\n        else\n          // TODO: Check this\n          current = computeMinMax([\n            x.min / sum.min, x.min / sum.max,\n            x.max / sum.min, x.max / sum.max\n          ])\n        break\n      }\n      case \"data\": case \"lookup\": case \"match\":\n        throw new Error(`Unsupported ${operation} node`)\n      default: assertUnreachable(operation)\n    }\n    range.set(f, current)\n  })\n  return range\n}\nfunction computeMinMax(values: readonly number[], minMaxes: readonly MinMax[] = []): MinMax {\n  const max = Math.max(...values, ...minMaxes.map(x => x.max))\n  const min = Math.min(...values, ...minMaxes.map(x => x.min))\n  return { min, max }\n}\n\nexport function filterArts(arts: ArtifactsBySlot, filters: RequestFilter): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArtsVec(arts: ArtifactsBySlotVec, filters: RequestFilter): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filter = filters[slot]\n      switch (filter.kind) {\n        case \"id\": return arts.values[slot].filter(art => filter.ids.has(art.id))\n        case \"exclude\": return arts.values[slot].filter(art => !filter.sets.has(art.set!))\n        case \"required\": return arts.values[slot].filter(art => filter.sets.has(art.set!))\n      }\n    })\n  }\n}\nexport function filterArts2(arts: ArtifactsBySlot, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlot {\n  return {\n    base: arts.base,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function filterArtsVec2(arts: ArtifactsBySlotVec, filterVec: StrictDict<SlotKey, number[]>): ArtifactsBySlotVec {\n  return {\n    keys: arts.keys, base: arts.base, baseBuffer: arts.baseBuffer,\n    values: objectKeyMap(allSlotKeys, slot => {\n      const filterIxs = filterVec[slot]\n      const slotVals = arts.values[slot]\n      return filterIxs.map(ix => slotVals[ix])\n    })\n  }\n}\nexport function mergeBuilds(builds: Build[][], maxNum: number): Build[] {\n  return builds.flatMap(x => x).sort((a, b) => b.value - a.value).slice(0, maxNum)\n}\nexport function mergePlot(plots: PlotData[]): PlotData {\n  let scale = 0.01, reductionScaling = 2, maxCount = 1500\n  let keys = new Set(plots.flatMap(x => Object.values(x).map(v => Math.round(v.plot! / scale))))\n  while (keys.size > maxCount) {\n    scale *= reductionScaling\n    keys = new Set([...keys].map(key => Math.round(key / reductionScaling)))\n  }\n  const result: PlotData = {}\n  for (const plot of plots)\n    for (const build of Object.values(plot)) {\n      const x = Math.round(build.plot! / scale) * scale\n      if (!result[x] || result[x]!.value < build.value)\n        result[x] = build\n    }\n  return result\n}\n\nexport function countBuilds(arts: ArtifactsBySlot): number {\n  return allSlotKeys.reduce((_count, slot) => _count * arts.values[slot].length, 1)\n}\n\n\nexport function* filterFeasiblePerm(filters: Iterable<RequestFilter>, _artSets: ArtifactsBySlot): Iterable<RequestFilter> {\n  const artSets = objectMap(_artSets.values, values => new Set(values.map(v => v.set)))\n  filter_loop: for (const filter of filters) {\n    for (const [slot, f] of Object.entries(filter)) {\n      const available = artSets[slot]!\n      switch (f.kind) {\n        case \"required\": if ([...f.sets].every(s => !available.has(s))) continue filter_loop; break\n        case \"exclude\": if ([...available].every(s => f.sets.has(s!))) continue filter_loop; break\n        case \"id\": break\n      }\n    }\n    yield filter\n  }\n}\nexport function exclusionToAllowed(exclusion: number[] | undefined): Set<number> {\n  return new Set(exclusion?.includes(2)\n    ? exclusion.includes(4) ? [0, 1] : [0, 1, 4, 5]\n    : exclusion?.includes(4) ? [0, 1, 2, 3] : [0, 1, 2, 3, 4, 5])\n}\n/** A *disjoint* set of `RequestFilter` satisfying the exclusion rules */\nexport function* artSetPerm(exclusion: ArtSetExclusion, _artSets: ArtifactSetKey[]): Iterable<RequestFilter> {\n  /**\n   * This generation algorithm is separated into two parts:\n   * - \"Shape\" generation\n   *   - It first generates all build \"shapes\", e.g., AABBC, ABBCD\n   *   - It then filters the generated shapes according to the rainbow exclusion, e.g., removes ABBCD if excluding 3 rainbows\n   *   - It then merges the remaining shapes into wildcards, e.g. AABAA + AABAB + AABAC => AABA*\n   * - Shape filling\n   *   - From the given shapes, it tries to fill in all non-rainbow slots, e.g., slots A and B of AABBC, with actual artifacts\n   *   - It then fills the rainbow slots, e.g., slot C of AABBC while ensuring the exclusion rule of each sets\n   */\n  const artSets = [...new Set(_artSets)], allowedRainbows = exclusionToAllowed(exclusion.rainbow)\n  let shapes: number[][] = []\n  function populateShapes(current: number[], list: Set<number>, rainbows: number[]) {\n    if (current.length === 5) {\n      if (allowedRainbows.has(rainbows.length))\n        shapes.push(current)\n      return\n    }\n    for (const i of list) populateShapes([...current, i], list, rainbows.filter(j => j !== i))\n    populateShapes([...current, current.length], new Set([...list, current.length]), [...rainbows, current.length])\n  }\n  populateShapes([0], new Set([0]), [0])\n  function indexOfShape(shape: number[], replacing: number) {\n    if (range(replacing + 1, 4).some(i => shape[i] !== 5))\n      return undefined\n    shape = [...shape]\n    shape[replacing] = 5\n    return shape.reduce((a, b) => a * 6 + b, 0)\n  }\n  for (let replacing = 4; replacing >= 0; replacing--) {\n    const required: Map<number, number> = new Map()\n    for (const shape of shapes) {\n      const id = indexOfShape(shape, replacing)\n      if (id === undefined) continue\n      required.set(id, (required.get(id) ?? new Set(shape.slice(0, replacing)).size + 1) - 1)\n    }\n    for (const [id, remaining] of required.entries()) {\n      if (remaining === 0) {\n        const shape = [...shapes.find(shape => indexOfShape(shape, replacing) === id)!]\n        shape[replacing] = 5\n        shapes = shapes.filter(shape => indexOfShape(shape, replacing) !== id)\n        shapes.push(shape)\n      }\n    }\n  }\n\n  // Shapes are now calculated and merged, proceed to fill in the sets\n\n  const noFilter = { kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }\n  const result: RequestFilter = objectKeyMap(allSlotKeys, _ => noFilter)\n\n  const counts = { ...objectMap(exclusion, _ => 0), ...objectKeyMap(artSets, _ => 0) }\n  const allowedCounts = objectMap(exclusion, exclusionToAllowed)\n\n  function* check(shape: number[]) {\n    const used: Set<ArtifactSetKey> = new Set()\n    let groupped: number[][] = [], rainbows: number[] = []\n    for (const i of shape) {\n      groupped.push([])\n      if (i === 5) rainbows.push(groupped.length - 1)\n      else groupped[i].push(groupped.length - 1)\n    }\n    groupped = groupped.filter(v => v.length).sort((a, b) => b.length - a.length)\n    let usableRainbows = rainbows.length\n\n    // Inception.. because js doesn't like functions inside a for-loop\n    function* check(i: number) {\n      if (i === groupped.length)\n        return yield* check_free(0)\n\n      for (const set of artSets) {\n        if (used.has(set)) continue\n        const length = groupped[i].length, allowedSet = allowedCounts[set]\n        let requiredRainbows = 0\n\n        if (allowedSet && !allowedSet.has(length)) {\n          // Look ahead and see if we have enough rainbows to fill to the next `allowedSet` if we use the current set\n          requiredRainbows = (range(length + 1, 5).find(l => allowedSet.has(l)) ?? 6) - length\n          if (requiredRainbows > usableRainbows) continue // Not enough rainbows. Next..\n        }\n\n        used.add(set)\n        counts[set] = groupped[i].length\n        groupped[i].forEach(j => result[allSlotKeys[j]] = { kind: \"required\", sets: new Set([set]) })\n        usableRainbows -= requiredRainbows\n\n        yield* check(i + 1)\n\n        usableRainbows += requiredRainbows\n        counts[set] = 0\n        used.delete(set)\n      }\n    }\n    // We separate filling rainbow slots from groupped slots because it has an entirely\n    // different set of rules regarding what can be filled and what states to be kept.\n    function* check_free(i: number) {\n      const remaining = rainbows.length - i, isolated: ArtifactSetKey[] = [], missing: ArtifactSetKey[] = [], rejected: ArtifactSetKey[] = []\n      let required = 0\n      for (const set of artSets) {\n        const allowedSet = allowedCounts[set], count = counts[set]\n        if (!allowedSet) continue\n        if (range(1, remaining).every(j => !allowedSet.has(count + j))) rejected.push(set)\n        else if (!allowedSet.has(count)) {\n          required += [...allowedSet].find(x => x > count)! - count\n          missing.push(set)\n        }\n        else if (range(0, remaining).some(j => !allowedSet.has(count + j))) isolated.push(set)\n      }\n      if (required > remaining) return\n      if (i === rainbows.length) {\n        yield { ...result }\n        return\n      }\n      if (required === remaining) {\n        for (const set of missing) {\n          counts[set]++\n          result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n          yield* check_free(i + 1)\n          counts[set]--\n        }\n        return\n      }\n      for (const set of [...isolated, ...missing]) {\n        counts[set]++\n        result[allSlotKeys[rainbows[i]]] = { kind: \"required\", sets: new Set([set]) }\n        yield* check_free(i + 1)\n        counts[set]--\n      }\n      result[allSlotKeys[rainbows[i]]] = { kind: \"exclude\", sets: new Set([...missing, ...rejected, ...isolated]) }\n      yield* check_free(i + 1)\n    }\n    yield* check(0)\n  }\n  for (const shape of shapes) yield* check(shape)\n}\n\nexport type RequestFilter = StrictDict<SlotKey,\n  { kind: \"required\", sets: Set<ArtifactSetKey> } |\n  { kind: \"exclude\", sets: Set<ArtifactSetKey> } |\n  { kind: \"id\", ids: Set<string> }\n>\nexport const emptyfilter: RequestFilter = objectKeyMap(allSlotKeys, _ => ({ kind: \"exclude\" as const, sets: new Set<ArtifactSetKey>() }));\n\nexport type DynStat = { [key in string]: number }\nexport type ArtifactBuildData = {\n  id: string\n  set?: ArtifactSetKey\n  values: DynStat\n}\nexport type ArtifactsBySlot = { base: DynStat, values: StrictDict<SlotKey, ArtifactBuildData[]> }\n\n\nexport type ArtifactBuildDataVecDense = {\n  id: string\n  set?: ArtifactSetKey\n  values: number[]\n  buffer: number[]\n}\n// I dont *think* its worth it to implement sparse vectors n shit\n// export type ArtifactBuildDataVecSparse = {\n//   id: string\n//   set?: ArtifactSetKey\n//   values: number[][]\n// }\nexport type ArtifactsBySlotVec = { keys: string[], base: number[], values: StrictDict<SlotKey, ArtifactBuildDataVecDense[]>, baseBuffer: number[] }\n\nexport type PlotData = Dict<number, Build>\nexport interface Build {\n  value: number\n  plot?: number\n  artifactIds: string[]\n}\n","import { Box } from \"@mui/material\"\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { ArtifactSetKey, SetNum } from \"../../Types/consts\"\nimport DocumentDisplay from \"../DocumentDisplay\"\n\ntype Data = {\n  setKey: ArtifactSetKey,\n  setNumKey: SetNum,\n  hideHeader?: boolean,\n  conditionalsOnly?: boolean\n}\n\nexport default function SetEffectDisplay({ setKey, setNumKey, hideHeader = false, conditionalsOnly = false }: Data) {\n  const sheet = usePromise(() => ArtifactSheet.get(setKey), [setKey])\n  if (!sheet) return null\n\n  const document = conditionalsOnly ? sheet.setEffectDocument(setNumKey)?.filter(section => \"states\" in section) : sheet.setEffectDocument(setNumKey)\n  return <Box display=\"flex\" flexDirection=\"column\">\n    {document ? <DocumentDisplay sections={document} hideHeader={hideHeader} /> : null}\n  </Box>\n}\n","import { useCallback, useContext, useEffect, useState } from \"react\";\nimport { DatabaseContext } from \"../../../../Database/Database\";\nimport { BuildSetting, BuildSettingReducerAction } from \"../../../../Database/Data/BuildsettingData\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport default function useBuildSetting(characterKey: CharacterKey) {\n  const { database } = useContext(DatabaseContext)\n  const [buildSetting, setBuildSetting] = useState(() => database.buildSettings.get(characterKey))\n  useEffect(() => setBuildSetting(database.buildSettings.get(characterKey)), [database, characterKey])\n  useEffect(() =>\n    database.buildSettings.follow(characterKey, setBuildSetting),\n    [characterKey, setBuildSetting, database])\n  const buildSettingDispatch = useCallback((action: BuildSettingReducerAction) => characterKey && database.buildSettings.set(characterKey, action), [characterKey, database],)\n\n  return { buildSetting: buildSetting as BuildSetting, buildSettingDispatch }\n}\n","import { faBan, faChartLine } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBoxOutlineBlank, CheckBox, Replay, Settings } from '@mui/icons-material';\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Stack, Typography } from '@mui/material';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport SetEffectDisplay from '../../../../../Components/Artifact/SetEffectDisplay';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport CloseButton from '../../../../../Components/CloseButton';\nimport ColorText from '../../../../../Components/ColoredText';\nimport InfoTooltip from '../../../../../Components/InfoTooltip';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { StarsDisplay } from '../../../../../Components/StarDisplay';\nimport { Translate } from '../../../../../Components/Translate';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { DataContext, dataContextObj } from '../../../../../Context/DataContext';\nimport { UIData } from '../../../../../Formula/uiData';\nimport { constant } from '../../../../../Formula/utils';\nimport useForceUpdate from '../../../../../ReactHooks/useForceUpdate';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SetNum, SlotKey } from '../../../../../Types/consts';\nimport { deepClone, objectKeyMap } from '../../../../../Util/Util';\nimport useBuildSetting from '../useBuildSetting';\n\nexport default function ArtifactSetConfig({ disabled }: { disabled?: boolean, }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  const dataContext = useContext(DataContext)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, conditional }, characterDispatch } = useContext(CharacterContext)\n  const { buildSetting: { artSetExclusion }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const [open, setOpen] = useState(false)\n  const onOpen = useCallback(() => setOpen(true), [setOpen])\n  const onClose = useCallback(() => setOpen(false), [setOpen])\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const artSetKeyList = useMemo(() => artifactSheets ? Object.entries(ArtifactSheet.setKeysByRarities(artifactSheets)).reverse().flatMap(([, sets]) => sets).filter(key => !key.includes(\"Prayers\")) : [], [artifactSheets])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.arts.followAny(forceUpdate), [database, forceUpdate])\n\n  const artSlotCount = useMemo(() => {\n    const artSlotCount: Dict<ArtifactSetKey, Record<SlotKey, number>> = Object.fromEntries(artSetKeyList.map(k => [k, Object.fromEntries(allSlotKeys.map(sk => [sk, 0]))]))\n    database.arts.values.map(art => artSlotCount[art.setKey] && artSlotCount[art.setKey]![art.slotKey]++)\n    return dbDirty && artSlotCount\n  }, [dbDirty, database, artSetKeyList])\n  const allowRainbow2 = !artSetExclusion.rainbow?.includes(2)\n  const allowRainbow4 = !artSetExclusion.rainbow?.includes(4)\n\n  const { allow2, allow4, exclude2, exclude4 } = useMemo(() => ({\n    allow2: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(2)).length,\n    allow4: artSetKeyList.filter(k => !artSetExclusion[k]?.includes(4)).length,\n    exclude2: artSetKeyList.filter(k => artSetExclusion[k]?.includes(2)).length,\n    exclude4: artSetKeyList.filter(k => artSetExclusion[k]?.includes(4)).length,\n  }), [artSetKeyList, artSetExclusion])\n  const artifactCondCount = useMemo(() =>\n    (Object.keys(conditional)).filter(k =>\n      allArtifactSets.includes(k as ArtifactSetKey) && Object.keys(conditional[k]).length !== 0).length\n    , [conditional])\n  const fakeDataContextObj = useMemo(() => fakeData(dataContext), [dataContext])\n  const resetArtConds = useCallback(() => {\n    const tconditional = Object.fromEntries(Object.entries(conditional).filter(([k, v]) => !allArtifactSets.includes(k as any)))\n    characterDispatch({ conditional: tconditional })\n  }, [conditional, characterDispatch]);\n  const setAllExclusion = useCallback(\n    (setnum: number, exclude = true) => {\n      const artSetExclusion_ = deepClone(artSetExclusion)\n      artSetKeyList.forEach(k => {\n        if (exclude) artSetExclusion_[k] = [...(artSetExclusion_[k] ?? []), setnum];\n        else if (artSetExclusion_[k]) artSetExclusion_[k] = artSetExclusion_[k].filter(n => n !== setnum);\n      })\n      buildSettingDispatch({ artSetExclusion: artSetExclusion_ })\n    },\n    [artSetKeyList, artSetExclusion, buildSettingDispatch],\n  )\n\n  return <>\n    <CardLight sx={{ display: \"flex\" }}>\n      <CardContent sx={{ flexGrow: 1 }} >\n        <Typography>\n          <strong>{t`tabOptimize.artSetConfig.title`}</strong>\n        </Typography>\n        <Stack spacing={1}>\n          <Typography>{t`tabOptimize.artSetConfig.setEffCond`} <SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.enabled\")}</SqBadge></Typography>\n          <Typography>{t`sheet:2set`} <SqBadge color=\"success\">{allow2} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude2 && \" / \"}{!!exclude2 && <SqBadge color=\"secondary\">{exclude2} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`sheet:4set`} <SqBadge color=\"success\">{allow4} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!exclude4 && \" / \"}{!!exclude4 && <SqBadge color=\"secondary\">{exclude4} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n          <Typography>{t`tabOptimize.artSetConfig.2rainbow`} <SqBadge color={allowRainbow2 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow2 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n          <Typography>{t`tabOptimize.artSetConfig.4rainbow`} <SqBadge color={allowRainbow4 ? \"success\" : \"secondary\"}><FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" /> {allowRainbow4 ? t<string>(\"tabOptimize.artSetConfig.allowed\") : \"Excluded\"}</SqBadge></Typography>\n        </Stack>\n\n      </CardContent>\n      <Button onClick={onOpen} disabled={disabled} color=\"info\" sx={{ borderRadius: 0 }}>\n        <Settings />\n      </Button>\n    </CardLight>\n    {artifactSheets && <ModalWrapper open={open} onClose={onClose} ><CardDark>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography variant=\"h6\" >{t`tabOptimize.artSetConfig.title`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent >\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Box display=\"flex\" gap={1}>\n            <Typography><strong>{t`tabOptimize.artSetConfig.modal.setCond.title`}</strong></Typography>\n            <Typography sx={{ flexGrow: 1 }}><SqBadge color={artifactCondCount ? \"success\" : \"secondary\"}>{artifactCondCount} {t<string>(\"tabOptimize.artSetConfig.selected\")}</SqBadge></Typography>\n            <Button size='small' onClick={resetArtConds} color=\"error\" startIcon={<Replay />}>{t`tabOptimize.artSetConfig.modal.setCond.reset`}</Button>\n          </Box>\n          <Typography>{t`tabOptimize.artSetConfig.modal.setCond.text`}</Typography>\n        </CardContent></CardLight>\n        <CardLight sx={{ mb: 1 }}><CardContent>\n          <Typography sx={{ flexGrow: 1 }}><strong>\n            <Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.title\" >Artifact Sets <ColorText color='success'>Allowed<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Excluded<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText></Trans>\n          </strong></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.intro\">You can allow/exclude which sets you want the builder to consider. In the following examples, <strong>A</strong> is on-set, and <strong>R</strong> is rainbow(off-set)</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 2-Set</ColorText></strong> would exclude 2-Set builds: <strong><ColorText color='secondary' variant='light'>AA</ColorText>RRR</strong> and <strong><ColorText color='secondary' variant='light'>AAA</ColorText>RR</strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4set\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 4-Set</ColorText></strong> would exclude 4-Set builds: <strong><ColorText color='secondary' variant='light'>AAAA</ColorText>R</strong> and <strong><ColorText color='secondary' variant='light'>AAAAA</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.2rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 3-Rainbow</ColorText></strong> would exclude 2-Set + 3-Rainbow builds: <strong>AA<ColorText color='secondary' variant='light'>RRR</ColorText></strong> and <strong>AAA<ColorText color='secondary' variant='light'>RR</ColorText></strong>.</Trans></Typography>\n          <Typography><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.modal.ArtSetFilter.4rain\"><strong><ColorText color='secondary' variant='light'>Excluding<FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> 5-Rainbow</ColorText></strong> would exclude full 5-Rainbow builds: <strong><ColorText color='secondary' variant='light'>RRRRR</ColorText></strong>.</Trans></Typography>\n        </CardContent></CardLight>\n        <Grid container columns={{ xs: 2, lg: 3 }} sx={{ mb: 1 }} spacing={1}>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={2} numAllow={allow2} numExclude={exclude2} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <AllSetAllowExcludeCard setNum={4} numAllow={allow4} numExclude={exclude4} setAllExclusion={setAllExclusion} />\n          </Grid>\n          <Grid item xs={1}>\n            <CardLight>\n              <CardContent>\n                <Typography gutterBottom><strong><Trans t={t} i18nKey=\"tabOptimize.artSetConfig.alExRainbow\"><ColorText color='success'>Allow <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /></ColorText> / <ColorText color='secondary' variant='light'>Exclude <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /></ColorText> Rainbow Builds</Trans></strong></Typography>\n                <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 2 })} color={allowRainbow2 ? \"success\" : \"secondary\"} startIcon={!allowRainbow2 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow2 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.2rainbow`}</Button>\n                  <Button fullWidth onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey: \"rainbow\", num: 4 })} color={allowRainbow4 ? \"success\" : \"secondary\"} startIcon={!allowRainbow4 ? <CheckBoxOutlineBlank /> : <CheckBox />} endIcon={<FontAwesomeIcon icon={allowRainbow4 ? faChartLine : faBan} className=\"fa-fw\" />}>{t`tabOptimize.artSetConfig.4rainbow`}</Button>\n                </Box>\n              </CardContent>\n            </CardLight>\n          </Grid>\n        </Grid>\n        <Grid container spacing={1} columns={{ xs: 2, lg: 3 }}>\n          {artSetKeyList.map(setKey => {\n            return <ArtifactSetCard key={setKey} setKey={setKey} sheet={artifactSheets[setKey]} fakeDataContextObj={fakeDataContextObj} slotCount={artSlotCount[setKey]!} />\n          })}\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onClose} />\n      </CardContent>\n    </CardDark></ModalWrapper >}\n  </>\n}\nfunction AllSetAllowExcludeCard({ numAllow, numExclude, setNum, setAllExclusion }: { numAllow: number, numExclude: number, setNum: 2 | 4, setAllExclusion: (setNum: 2 | 4, exclude?: boolean) => void }) {\n  const { t } = useTranslation([\"page_character\", \"sheet\"])\n  return <CardLight>\n    <CardContent>\n      <Typography gutterBottom><strong>{t(`sheet:${setNum}set`)}</strong> <SqBadge color=\"success\">{numAllow} <FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.allowed\")}</SqBadge>{!!numExclude && \" / \"}{!!numExclude && <SqBadge color=\"secondary\">{numExclude} <FontAwesomeIcon icon={faBan} className=\"fa-fw\" /> {t<string>(\"tabOptimize.artSetConfig.excluded\")}</SqBadge>}</Typography>\n      <Box sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Button fullWidth disabled={!numExclude} onClick={() => setAllExclusion(setNum, false)} color='success' startIcon={<FontAwesomeIcon icon={faChartLine} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.allowAll${setNum}set`)}</Button>\n        <Button fullWidth disabled={!numAllow} onClick={() => setAllExclusion(setNum, true)} color='secondary' startIcon={<FontAwesomeIcon icon={faBan} className=\"fa-fw\" />}>{t(`tabOptimize.artSetConfig.excludeAll${setNum}set`)}</Button>\n      </Box>\n    </CardContent>\n  </CardLight>\n}\nfunction ArtifactSetCard({ sheet, setKey, fakeDataContextObj, slotCount }: { setKey: ArtifactSetKey, sheet: ArtifactSheet, fakeDataContextObj: dataContextObj, slotCount: Record<SlotKey, number> }) {\n  const { t } = useTranslation(\"sheet\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setExclusionSet = buildSetting?.artSetExclusion?.[setKey] ?? []\n  const allow4 = !setExclusionSet.includes(4)\n  const slots = useMemo(() => Object.values(slotCount).reduce((tot, v) => tot + (v ? 1 : 0), 0), [slotCount])\n\n  /* Assumes that all conditionals are from 4-Set. needs to change if there are 2-Set conditionals */\n  const set4CondNums = useMemo(() => {\n    if (!allow4 || slots < 4) return []\n    return Object.keys(sheet.setEffects).filter(setNumKey => sheet.setEffects[setNumKey]?.document.some(doc => \"states\" in doc))\n  }, [sheet.setEffects, allow4, slots])\n  const exclude2 = setExclusionSet.includes(2)\n  const exclude4 = setExclusionSet.includes(4)\n  if (slots < 2) return null\n  return <Grid item key={setKey} xs={1}>\n    <CardLight sx={{ height: \"100%\" }}>\n      <Box className={`grad-${sheet.rarity[0]}star`} width=\"100%\" sx={{ display: \"flex\" }} >\n        <Box component=\"img\" src={sheet.defIconSrc} sx={{ height: 100, width: \"auto\", mx: -1 }} />\n        <Box sx={{ flexGrow: 1, px: 1, display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\n          <Typography variant=\"h6\">{sheet.name ?? \"\"}</Typography>\n          <Box display=\"flex\" gap={1}>\n            <Typography variant=\"subtitle1\">{sheet.rarity.map((ns, i) => <span key={ns}>{ns} <StarsDisplay stars={1} /> {i < (sheet.rarity.length - 1) ? \"/ \" : null}</span>)}</Typography>\n            {/* If there is ever a 2-Set conditional, we will need to change this */}\n            <InfoTooltip title={<Box>\n              <Typography><SqBadge color=\"success\">{t`2set`}</SqBadge></Typography>\n              <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.2\"} /></Typography>\n              <Box paddingTop={2} sx={{ opacity: setExclusionSet.includes(4) ? 0.6 : 1 }} >\n                <Typography><SqBadge color=\"success\">{t`4set`}</SqBadge></Typography>\n                <Typography><Translate ns={`artifact_${setKey}_gen`} key18={\"setEffects.4\"} /></Typography>\n              </Box>\n            </Box>} />\n          </Box>\n          <Box sx={{ display: \"flex\", gap: 1 }}>{Object.entries(slotCount).map(([slotKey, count]) => <Typography key={slotKey} sx={{ flexGrow: 1 }} variant=\"subtitle2\" ><SqBadge sx={{ width: \"100%\" }} color={count ? \"primary\" : \"secondary\"}>{artifactSlotIcon(slotKey)}{count}</SqBadge></Typography>)}</Box>\n        </Box>\n      </Box>\n      <ButtonGroup sx={{ \".MuiButton-root\": { borderRadius: 0 } }} fullWidth>\n        {slots >= 2 && <Button startIcon={exclude2 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 2 })} color={exclude2 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude2 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`2set`}</Button>}\n        {slots >= 4 && <Button startIcon={exclude4 ? <CheckBoxOutlineBlank /> : <CheckBox />} onClick={() => buildSettingDispatch({ type: \"artSetExclusion\", setKey, num: 4 })} color={exclude4 ? 'secondary' : 'success'} endIcon={<FontAwesomeIcon icon={exclude4 ? faBan : faChartLine} className=\"fa-fw\" />}>{t`4set`}</Button>}\n      </ButtonGroup>\n\n      {!!set4CondNums.length && <DataContext.Provider value={fakeDataContextObj}>\n        <CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n          {set4CondNums.map(setNumKey =>\n            <SetEffectDisplay key={setNumKey} setKey={setKey} setNumKey={parseInt(setNumKey) as SetNum} hideHeader conditionalsOnly />\n          )}\n        </CardContent>\n      </DataContext.Provider>}\n    </CardLight>\n  </Grid >\n}\nfunction fakeData(currentContext: dataContextObj): dataContextObj {\n  return {\n    ...currentContext,\n    data: new UIData({ ...currentContext.data.data[0], artSet: objectKeyMap(allArtifactSets, _ => constant(4)) }, undefined)\n  }\n}\n","import { MenuItem } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\nimport DropdownButton from \"../../../../../Components/DropdownMenu/DropdownButton\"\n\nconst levels = [0, 4, 8, 12, 16, 20] as const\nexport default function AssumeFullLevelToggle({ mainStatAssumptionLevel = 0, setmainStatAssumptionLevel, disabled }) {\n  const { t } = useTranslation(\"page_character\")\n  return <DropdownButton fullWidth color={mainStatAssumptionLevel ? \"success\" : \"primary\"} disabled={disabled}\n    title={mainStatAssumptionLevel ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl: mainStatAssumptionLevel }) : t(\"tabOptimize.assumptionLvl.no\")}>\n    {levels.map((lvl) => <MenuItem key={lvl} onClick={() => setmainStatAssumptionLevel(lvl)}>{lvl ? t(\"tabOptimize.assumptionLvl.lvl\", { lvl }) : t(\"tabOptimize.assumptionLvl.no\")}</MenuItem>)}\n  </DropdownButton>\n}\n","import { CardContent, Divider, Typography } from '@mui/material';\nimport { useContext } from 'react';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport { NodeFieldDisplay } from '../../../../../Components/FieldDisplay';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nexport default function BonusStatsCard() {\n  const { character: { bonusStats } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const bonusStatsKeys = Object.keys(bonusStats)\n  if (!bonusStatsKeys.length) return null\n  const nodes = bonusStatsKeys.map(k => data.get(input.customBonus[k] as NumNode))\n  return <CardLight>\n    <CardContent>\n      <Typography>Bonus Stats</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      {nodes.map(n => <NodeFieldDisplay key={n.info.key} node={n} />)}\n    </CardContent>\n  </CardLight>\n}\n","import { Alert, Grid, LinearProgress, styled, Typography } from '@mui/material';\nimport { ReactNode } from 'react';\nimport { timeStringMs } from '../../../../../Util/TimeUtil';\n\nexport const warningBuildNumber = 10000000\nexport type BuildStatus = {\n  type: \"active\" | \"inactive\"\n  tested: number      // tested, including `failed`\n  failed: number      // tested but fail the filter criteria, e.g., not enough EM\n  skipped: number\n  total: number\n  startTime?: number\n  finishTime?: number\n}\n\nconst Monospace = styled(\"strong\")({\n  fontFamily: \"monospace\"\n})\n\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: 10,\n  borderRadius: 5,\n}));\nexport default function BuildAlert({ status: { type, tested, failed, skipped, total, startTime, finishTime }, characterName }: { status: BuildStatus, characterName: Displayable }) {\n  const hasTotal = isFinite(total)\n\n  const generatingBuilds = type !== \"inactive\"\n  const unskipped = total - skipped\n\n  const testedString = <Monospace>{tested.toLocaleString()}</Monospace>\n  const unskippedString = <Monospace>{unskipped.toLocaleString()}</Monospace>\n  const skippedText = !!skipped && <span>(<b>{<Monospace>{skipped.toLocaleString()}</Monospace>}</b> skipped)</span>\n\n  const durationString = <Monospace>{timeStringMs(Math.round((finishTime ?? performance.now()) - (startTime ?? NaN)))}</Monospace>\n\n  let color = \"success\" as \"success\" | \"warning\" | \"error\"\n  let title = \"\" as ReactNode\n  let subtitle = \"\" as ReactNode\n  let progress = undefined as undefined | number\n\n  if (generatingBuilds) {\n    progress = (skipped + tested) * 100 / (skipped + unskipped)\n    title = <Typography>Generating and testing {testedString}{hasTotal ? <>/{unskippedString}</> : undefined} build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Time elapsed: {durationString}</Typography>\n  } else if (tested + skipped) {\n    progress = 100\n    title = <Typography>Generated and tested {testedString} Build configurations against the criteria for <b>{characterName}</b>. {skippedText}</Typography>\n    subtitle = <Typography>Total duration: {durationString}</Typography>\n  } else {\n    return null\n  }\n\n  return <Alert severity={color} variant=\"filled\" sx={{\n    \"& .MuiAlert-message\": {\n      flexGrow: 1\n    }\n  }}>\n    {title}\n    {subtitle}\n    {progress !== undefined && <Grid container spacing={1} alignItems=\"center\">\n      {hasTotal && <Grid item>\n        <Typography>{`${progress.toFixed(1)}%`}</Typography>\n      </Grid>}\n      <Grid item flexGrow={1} >\n        <BorderLinearProgress variant={hasTotal ? \"determinate\" : \"indeterminate\"} value={progress} color=\"primary\" />\n      </Grid>\n    </Grid>}\n  </Alert>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { alpha, Box, CardActionArea, Chip, Typography, useTheme } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport Assets from \"../../Assets/Assets\";\nimport Artifact from \"../../Data/Artifacts/Artifact\";\nimport { ArtifactSheet } from \"../../Data/Artifacts/ArtifactSheet\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport KeyMap, { cacheValueString } from \"../../KeyMap\";\nimport useArtifact from \"../../ReactHooks/useArtifact\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport { ICachedSubstat } from \"../../Types/artifact\";\nimport { allElementsWithPhy, CharacterKey, SlotKey } from \"../../Types/consts\";\nimport { clamp } from \"../../Util/Util\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ColorText from \"../ColoredText\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon, { uncoloredEleIcons } from \"../StatIcon\";\nimport ArtifactTooltip from \"./ArtifactTooltip\";\n\ntype Data = {\n  artifactId?: string,\n  slotKey: SlotKey,\n  mainStatAssumptionLevel?: number,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType\n}\n\nexport default function ArtifactCardNano({ artifactId, slotKey: pSlotKey, mainStatAssumptionLevel = 0, showLocation = false, onClick, BGComponent = CardDark }: Data) {\n  const art = useArtifact(artifactId)\n  const sheet = usePromise(() => ArtifactSheet.get(art?.setKey), [art?.setKey])\n  const actionWrapperFunc = useCallback(children => <CardActionArea onClick={onClick} sx={{ height: \"100%\" }}>{children}</CardActionArea>, [onClick],)\n  const theme = useTheme()\n  if (!art) return <BGComponent sx={{ display: \"flex\", height: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\n    <Box component=\"img\" src={Assets.slot[pSlotKey]} sx={{ width: \"25%\", height: \"auto\", opacity: 0.7 }} />\n  </BGComponent>\n\n  const { slotKey, rarity, level, mainStatKey, substats, location } = art\n  const mainStatLevel = Math.max(Math.min(mainStatAssumptionLevel, rarity * 4), level)\n  const mainStatUnit = KeyMap.unit(mainStatKey)\n  const element = allElementsWithPhy.find(ele => art.mainStatKey.includes(ele))\n  const color = element ? alpha(theme.palette[element].main, 0.6) : alpha(theme.palette.secondary.main, 0.6)\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\">\n      <Box className={`grad-${rarity}star`} sx={{ position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }} >\n        <ArtifactTooltip art={art}>\n          <Box\n            component=\"img\"\n            src={sheet?.slotIcons[slotKey] ?? \"\"}\n            sx={{ m: -1, maxHeight: \"110%\", maxWidth: \"110%\" }}\n          />\n        </ArtifactTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{` +${level}`}</strong>} color={Artifact.levelVariant(level)} />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        {/* mainstats */}\n        <Chip size=\"small\" sx={{ position: \"absolute\", bottom: 0, mb: 1, backgroundColor: color }}\n          label={<Typography sx={{ display: \"flex\", gap: 0.5, px: 1, zIndex: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{KeyMap.getArtStr(mainStatKey)}</Typography>} disableInteractive>\n              <span>{element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}</span>\n            </BootstrapTooltip>\n            <ColorText color={mainStatLevel !== level ? \"warning\" : undefined}>{cacheValueString(Artifact.mainStatValue(mainStatKey, rarity, mainStatLevel) ?? 0, KeyMap.unit(mainStatKey))}{mainStatUnit}</ColorText>\n          </Typography>} />\n      </Box>\n      {/* substats */}\n      <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"space-between\" sx={{ p: 1, }}>\n        {substats.map((stat: ICachedSubstat, i: number) => <SubstatDisplay key={i + stat.key} stat={stat} />)}\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction SubstatDisplay({ stat }: { stat: ICachedSubstat }) {\n  if (!stat.value) return null\n  const numRolls = stat.rolls?.length ?? 0\n  const rollColor = `roll${clamp(numRolls, 1, 6)}`\n  const unit = KeyMap.unit(stat.key)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 0.5 }} color={(numRolls ? `${rollColor}.main` : \"error.main\") as any} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{stat.key && KeyMap.getArtStr(stat.key)}</Typography>} disableInteractive>\n        <span>{StatIcon[stat.key]}</span>\n      </BootstrapTooltip>\n      <span>{`${cacheValueString(stat.value, KeyMap.unit(stat.key))}${unit}`}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }: { location: CharacterKey | \"\" }) {\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { createContext } from \"react\";\n\nexport const OptimizationTargetContext = createContext(undefined as string[] | undefined)\n","import { Masonry } from \"@mui/lab\"\nimport { Divider, ListItem } from \"@mui/material\"\nimport { Box } from \"@mui/system\"\nimport { useContext, useMemo } from \"react\"\nimport { DataContext } from \"../../Context/DataContext\"\nimport { OptimizationTargetContext } from \"../../Context/OptimizationTargetContext\"\nimport { getDisplayHeader, getDisplaySections } from \"../../Formula/DisplayUtil\"\nimport { DisplaySub } from \"../../Formula/type\"\nimport { NodeDisplay } from \"../../Formula/uiData\"\nimport { customRead } from \"../../Formula/utils\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { objectMap } from \"../../Util/Util\"\nimport CardDark from \"../Card/CardDark\"\nimport CardHeaderCustom from \"../Card/CardHeaderCustom\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../FieldDisplay\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport SqBadge from \"../SqBadge\"\n\nexport default function StatDisplayComponent() {\n  const { data } = useContext(DataContext)\n  const sections = useMemo(() =>\n    getDisplaySections(data).filter(([, ns]) => Object.values(ns).some(n => !n.isEmpty)),\n    [data])\n  return <Box sx={{ mr: -1, mb: -1 }}>\n    <Masonry columns={{ xs: 1, sm: 2, md: 3, xl: 4 }} spacing={1}>\n      {sections.map(([key, Nodes]) =>\n        <Section key={key} displayNs={Nodes} sectionKey={key} />)}\n    </Masonry >\n  </Box>\n}\n\nfunction Section({ displayNs, sectionKey }: { displayNs: DisplaySub<NodeDisplay>, sectionKey: string }) {\n  const optimizationTarget = useContext(OptimizationTargetContext)\n  const { data, oldData } = useContext(DataContext)\n  const header = usePromise(() => getDisplayHeader(data, sectionKey), [data, sectionKey])\n  const displayNsReads = useMemo(() => objectMap(displayNs, (n, nodeKey) => customRead([\"display\", sectionKey, nodeKey])), [displayNs, sectionKey]);\n  if (!header) return <CardDark></CardDark>\n\n  const { title, icon, action } = header\n  return <CardDark >\n    <CardHeaderCustom avatar={icon && <ImgIcon size={2} sx={{ m: -1 }} src={icon} />} title={title} action={action && <SqBadge>{action}</SqBadge>} />\n    <Divider />\n    <FieldDisplayList sx={{ m: 0 }}>\n      {Object.entries(displayNs).map(([nodeKey, n]) =>\n        <NodeFieldDisplay key={nodeKey} node={n} oldValue={oldData ? oldData.get(displayNsReads[nodeKey]!).value : undefined} component={ListItem}\n          emphasize={JSON.stringify(optimizationTarget) === JSON.stringify([sectionKey, nodeKey])}\n        />)}\n    </FieldDisplayList>\n  </CardDark>\n}\n","import { BusinessCenter } from \"@mui/icons-material\";\nimport { Box, CardActionArea, Chip, Skeleton, Typography } from \"@mui/material\";\nimport { useCallback, useMemo } from \"react\";\nimport CharacterSheet from \"../../Data/Characters/CharacterSheet\";\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\";\nimport { input } from \"../../Formula\";\nimport { computeUIData, dataObjForWeapon } from \"../../Formula/api\";\nimport { NodeDisplay } from '../../Formula/uiData';\nimport KeyMap, { valueString } from \"../../KeyMap\";\nimport usePromise from \"../../ReactHooks/usePromise\";\nimport useWeapon from \"../../ReactHooks/useWeapon\";\nimport { MainStatKey, SubstatKey } from \"../../Types/artifact\";\nimport BootstrapTooltip from \"../BootstrapTooltip\";\nimport CardDark from \"../Card/CardDark\";\nimport ConditionalWrapper from \"../ConditionalWrapper\";\nimport ImgIcon from \"../Image/ImgIcon\";\nimport StatIcon from \"../StatIcon\";\nimport WeaponNameTooltip from \"./WeaponNameTooltip\";\n\ntype Data = {\n  weaponId?: string,\n  onClick?: () => void,\n  showLocation?: boolean,\n  BGComponent?: React.ElementType,\n}\n\nexport default function WeaponCardNano({ weaponId, showLocation = false, onClick, BGComponent = CardDark, }: Data) {\n  const weapon = useWeapon(weaponId)\n  const weaponSheet = usePromise(() => weapon?.key && WeaponSheet.get(weapon.key), [weapon?.key])\n  const actionWrapperFunc = useCallback(children => <CardActionArea sx={{ height: \"100%\" }} onClick={onClick}>{children}</CardActionArea>, [onClick],)\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  if (!weapon || !weaponSheet || !UIData) return <BGComponent sx={{ height: \"100%\" }}><Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\" }} /></BGComponent>;\n  const { refinement, location } = weapon\n  return <BGComponent sx={{ height: \"100%\" }}><ConditionalWrapper condition={!!onClick} wrapper={actionWrapperFunc}  >\n    <Box display=\"flex\" height=\"100%\" alignItems=\"stretch\" >\n      <Box className={`grad-${weaponSheet.rarity}star`} sx={{ height: \"100%\", position: \"relative\", flexGrow: 1, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"flex-end\" }} >\n        <WeaponNameTooltip sheet={weaponSheet}>\n          <Box\n            component=\"img\"\n            src={weaponSheet.getImg(weapon.ascension)}\n            sx={{ mx: -1, maxHeight: \"100%\", maxWidth: \"100%\" }}\n          />\n        </WeaponNameTooltip>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"space-between\", pointerEvents: \"none\" }} >\n          <Chip size=\"small\" label={<strong>{WeaponSheet.getLevelString(weapon)}</strong>} color=\"primary\" />\n          {showLocation && <Chip size=\"small\" label={<LocationIcon location={location} />} color={\"secondary\"} sx={{\n            overflow: \"visible\", \".MuiChip-label\": {\n              overflow: \"visible\"\n            }\n          }} />}\n        </Box>\n        <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\", p: 0.5, opacity: 0.85, display: \"flex\", justifyContent: \"flex-end\", alignItems: \"flex-end\" }} >\n          {weaponSheet.hasRefinement && <Chip size=\"small\" color=\"info\" label={<strong>R{refinement}</strong>} />}\n        </Box>\n      </Box>\n      <Box display=\"flex\" flexDirection=\"column\" sx={{ p: 1, }}>\n        <WeaponStat node={UIData.get(input.weapon.main)} />\n        <WeaponStat node={UIData.get(input.weapon.sub)} />\n      </Box>\n    </Box>\n  </ConditionalWrapper></BGComponent >\n}\nfunction WeaponStat({ node }: { node: NodeDisplay }) {\n  if (!node.info.key) return null\n  const val = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n  return (<Box display=\"flex\" gap={1} alignContent=\"center\">\n    <Typography sx={{ flexGrow: 1, display: \"flex\", gap: 1 }} component=\"span\">\n      <BootstrapTooltip placement=\"top\" title={<Typography>{node.info.key && KeyMap.getArtStr(node.info.key as MainStatKey | SubstatKey)}</Typography>} disableInteractive>\n        <span>{StatIcon[node.info.key]}</span>\n      </BootstrapTooltip>\n      <span>{val}</span>\n    </Typography>\n  </Box>)\n}\nfunction LocationIcon({ location }) {\n  const characterSheet = usePromise(() => CharacterSheet.get(location ?? \"\"), [location])\n  return characterSheet ? <BootstrapTooltip placement=\"right-end\" title={<Typography>{characterSheet.name}</Typography>}><ImgIcon src={characterSheet.thumbImgSide} sx={{ height: \"3em\", marginTop: \"-1.5em\", marginLeft: \"-0.5em\" }} /></BootstrapTooltip> : <BusinessCenter />\n}\n","import { ChevronRight } from '@mui/icons-material';\nimport { Button, CardContent, Grid, Skeleton, Stack, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { ArtifactSlotKey } from 'pipeline';\nimport { Suspense, useCallback, useContext, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ArtifactCardNano from '../../../../../Components/Artifact/ArtifactCardNano';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport StatDisplayComponent from '../../../../../Components/Character/StatDisplayComponent';\nimport ModalWrapper from '../../../../../Components/ModalWrapper';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport { Translate } from '../../../../../Components/Translate';\nimport WeaponCardNano from '../../../../../Components/Weapon/WeaponCardNano';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { ArtifactSheet } from '../../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../../Database/Database';\nimport { uiInput as input } from '../../../../../Formula';\nimport ArtifactCard from '../../../../../PageArtifact/ArtifactCard';\nimport usePromise from '../../../../../ReactHooks/usePromise';\nimport { allSlotKeys, ArtifactSetKey, SlotKey } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\ntype NewOld = {\n  newId: string,\n  oldId?: string\n}\n\ntype BuildDisplayItemProps = {\n  index?: number,\n  compareBuild: boolean,\n  disabled?: boolean,\n  extraButtons?: JSX.Element\n}\n//for displaying each artifact build\nexport default function BuildDisplayItem({ index, compareBuild, extraButtons, disabled }: BuildDisplayItemProps) {\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const dataContext = useContext(DataContext)\n\n  const { data, oldData } = dataContext\n  const [newOld, setNewOld] = useState(undefined as NewOld | undefined)\n  const close = useCallback(() => setNewOld(undefined), [setNewOld],)\n\n  const equipBuild = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this build to this character?\")) return\n    const newBuild = Object.fromEntries(allSlotKeys.map(s => [s, data.get(input.art[s].id).value])) as Record<SlotKey, string>\n    database.chars.equipArtifacts(characterKey, newBuild)\n    database.weapons.set(data.get(input.weapon.id).value!, { location: characterKey })\n  }, [characterKey, data, database])\n\n  const statProviderContext = useMemo(() => {\n    const dataContext_ = { ...dataContext }\n    if (!compareBuild) dataContext_.oldData = undefined\n    return dataContext_\n  }, [dataContext, compareBuild])\n\n  // Memoize Arts because of its dynamic onClick\n  const artNanos = useMemo(() => allSlotKeys.map(slotKey =>\n    <Grid item xs={1} key={slotKey} >\n      <ArtifactCardNano showLocation slotKey={slotKey} artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} onClick={() => {\n        const oldId = equippedArtifacts[slotKey]\n        const newId = data.get(input.art[slotKey].id).value!\n        setNewOld({ oldId: oldId !== newId ? oldId : undefined, newId })\n      }} />\n    </Grid>), [data, setNewOld, equippedArtifacts, mainStatAssumptionLevel])\n\n  if (!oldData) return null\n  const currentlyEquipped = allSlotKeys.every(slotKey => data.get(input.art[slotKey].id).value === oldData.get(input.art[slotKey].id).value) && data.get(input.weapon.id).value === oldData.get(input.weapon.id).value\n\n  return <CardLight>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n      {newOld && <CompareArtifactModal newOld={newOld} mainStatAssumptionLevel={mainStatAssumptionLevel} onClose={close} />}\n      <CardContent>\n        <Box display=\"flex\" gap={1} sx={{ pb: 1 }} flexWrap=\"wrap\">\n          {index !== undefined && <SqBadge color=\"info\"><Typography><strong>#{index + 1}{currentlyEquipped ? \" (Equipped)\" : \"\"}</strong></Typography></SqBadge>}\n          <SetBadges currentlyEquipped={currentlyEquipped} />\n          <Box sx={{ flexGrow: 1, display: \"flex\", justifyContent: \"flex-end\" }}>\n          </Box>\n          <Button size='small' color=\"success\" onClick={equipBuild} disabled={disabled || currentlyEquipped}>Equip Build</Button>\n          {extraButtons}\n        </Box>\n        <Grid container spacing={1} sx={{ pb: 1 }} columns={{ xs: 2, sm: 3, md: 4, lg: 6 }}>\n          <Grid item xs={1}>\n            <WeaponCardNano showLocation weaponId={data.get(input.weapon.id).value} />\n          </Grid>\n          {artNanos}\n        </Grid>\n        <DataContext.Provider value={statProviderContext}>\n          <StatDisplayComponent />\n        </DataContext.Provider>\n      </CardContent>\n    </Suspense>\n  </CardLight>\n}\nfunction SetBadges({ currentlyEquipped = false }: { currentlyEquipped: boolean }) {\n  const { data } = useContext(DataContext)\n  const setToSlots: Partial<Record<ArtifactSetKey, SlotKey[]>> = {}\n  allSlotKeys.forEach(slotKey => {\n    const set = data.get(input.art[slotKey].set).value as ArtifactSetKey | undefined\n    if (!set) return\n    if (setToSlots[set]) setToSlots[set]!.push(slotKey)\n    else setToSlots[set] = [slotKey]\n  })\n  return <>{Object.entries(setToSlots).sort(([k1, slotarr1], [k2, slotarr2]) => slotarr2.length - slotarr1.length).map(([key, slotarr]) =>\n    <SetBadge key={key} setKey={key} currentlyEquipped={currentlyEquipped} slotarr={slotarr} />\n  )}</>\n\n}\nfunction SetBadge({ setKey, currentlyEquipped = false, slotarr }: { setKey: ArtifactSetKey, currentlyEquipped: boolean, slotarr: ArtifactSlotKey[] }) {\n  const artifactSheet = usePromise(() => ArtifactSheet.get(setKey), [])\n  if (!artifactSheet) return null\n  const numInSet = slotarr.length\n  const setActive = Object.keys(artifactSheet.setEffects).map((setKey) => parseInt(setKey)).filter(setNum => setNum <= numInSet)\n  return <Box>\n    <BootstrapTooltip placement=\"top\" title={\n      <Suspense fallback={<Skeleton variant='rectangular' width={100} height={100} />}>\n        <SetToolTipTitle artifactSheet={artifactSheet} numInSet={numInSet} />\n      </Suspense>\n    } disableInteractive >\n      <SqBadge color={currentlyEquipped ? \"success\" : \"primary\"} ><Typography >\n        {slotarr.map(slotKey => artifactSlotIcon(slotKey))} {artifactSheet.name ?? \"\"}\n        {setActive.map(n => <SqBadge sx={{ ml: 0.5 }} key={n} color=\"success\">{n}</SqBadge>)}\n      </Typography></SqBadge>\n    </BootstrapTooltip>\n  </Box>\n}\nfunction SetToolTipTitle({ artifactSheet, numInSet }: { artifactSheet: ArtifactSheet, numInSet: number }) {\n  const { t } = useTranslation(\"sheet\")\n  return <Stack spacing={2} sx={{ p: 1 }}>\n    {Object.keys(artifactSheet.setEffects).map((setKey) => <Box key={setKey} sx={{ opacity: parseInt(setKey) <= numInSet ? 1 : 0.5 }}>\n      <Typography><SqBadge color=\"success\">{t(`${setKey}set`)}</SqBadge></Typography>\n      <Typography><Translate ns={`artifact_${artifactSheet.key}_gen`} key18={`setEffects.${setKey}`} /></Typography>\n    </Box>\n    )}\n  </Stack>\n}\n\nfunction CompareArtifactModal({ newOld: { newId, oldId }, mainStatAssumptionLevel, onClose }: { newOld: NewOld, mainStatAssumptionLevel: number, onClose: () => void }) {\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const onEquip = useCallback(() => {\n    if (!window.confirm(\"Do you want to equip this artifact to this character?\")) return\n    database.arts.set(newId, { location: characterKey })\n    onClose()\n  }, [newId, database, characterKey, onClose])\n\n  return <ModalWrapper open={!!newId} onClose={onClose} containerProps={{ maxWidth: oldId ? \"md\" : \"xs\" }}>\n    <CardDark>\n      <CardContent sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"stretch\", gap: 2, height: \"100%\" }}>\n        {oldId && <Box minWidth={320}><ArtifactCard artifactId={oldId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        {oldId && <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\"><Button onClick={onEquip} sx={{ display: \"flex\" }}><ChevronRight sx={{ fontSize: 40 }} /></Button></Box>}\n        {oldId && <Box display=\"flex\" flexGrow={1} />}\n        <Box minWidth={320}><ArtifactCard artifactId={newId} mainStatAssumptionLevel={mainStatAssumptionLevel} canExclude canEquip /></Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { CheckBox, CheckBoxOutlineBlank, Download, Info } from '@mui/icons-material';\nimport { Button, CardContent, Collapse, Divider, Grid, MenuItem, styled, Tooltip, Typography } from '@mui/material';\nimport { useContext, useMemo, useState } from 'react';\nimport { CartesianGrid, ComposedChart, Legend, Line, ResponsiveContainer, Scatter, XAxis, YAxis, ZAxis } from 'recharts';\nimport CardDark from '../../../../../Components/Card/CardDark';\nimport CardLight from '../../../../../Components/Card/CardLight';\nimport DropdownButton from '../../../../../Components/DropdownMenu/DropdownButton';\nimport { DataContext } from '../../../../../Context/DataContext';\nimport { uiInput as input } from '../../../../../Formula';\nimport { NumNode } from '../../../../../Formula/type';\nimport KeyMap from '../../../../../KeyMap';\nimport { MainStatKey, SubstatKey } from '../../../../../Types/artifact';\nimport { Build } from '../common';\n\nexport type ChartData = {\n  valueNode: NumNode,\n  plotNode: NumNode,\n  data: Build[]\n}\ntype ChartCardProps = {\n  chartData?: ChartData\n  plotBase: MainStatKey | SubstatKey | \"\",\n  setPlotBase: (key: MainStatKey | SubstatKey | \"\") => void\n  disabled?: boolean\n}\ntype Point = { x: number, y: number, min?: number }\nexport default function ChartCard({ chartData, plotBase, setPlotBase, disabled = false }: ChartCardProps) {\n  const [showDownload, setshowDownload] = useState(false)\n  const [showMin, setshowMin] = useState(true)\n  const { data } = useContext(DataContext)\n  const statKeys = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n  if (data.get(input.weaponType).value !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n  statKeys.push(`${data.get(input.charEle).value}_dmg_`)\n\n  const { displayData, downloadData } = useMemo(() => {\n    if (!chartData) return { displayData: null, downloadData: null }\n    const points = chartData.data.map(({ value: y, plot: x }) => ({ x, y })) as Point[]\n    const increasingX: Point[] = points.sort((a, b) => a.x - b.x)\n    const minimumData: Point[] = []\n    for (const point of increasingX) {\n      let last: Point | undefined\n      while ((last = minimumData.pop())) {\n        if (last.y > point.y) {\n          minimumData.push(last)\n          break\n        }\n      }\n      minimumData.push(point)\n    }\n\n    // Note:\n    // We can also just use `minimumData` if the plotter supports multiple data sources.\n    // It could be faster too since there're no empty entries in `minimumData`.\n    if (minimumData[0]?.x !== increasingX[0]?.x)\n      increasingX[0].min = minimumData[0].y\n    minimumData.forEach(x => { x.min = x.y })\n\n    const downloadData = {\n      minimum: minimumData.map(({ x, y }) => [x, y]),\n      allData: increasingX.map(({ x, y }) => [x, y]),\n    }\n    return { displayData: increasingX, downloadData }\n  }, [chartData])\n\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h6\" >Optimization Target vs</Typography>\n        </Grid>\n        <Grid item>\n          <DropdownButton title={plotBase ? KeyMap.get(plotBase) : \"Not Selected\"}\n            color={plotBase ? \"success\" : \"primary\"}\n            disabled={disabled}\n          >\n            <MenuItem onClick={() => { setPlotBase(\"\") }}>Unselect</MenuItem>\n            <Divider />\n            {statKeys.map(sKey => <MenuItem key={sKey} onClick={() => { setPlotBase(sKey as any) }}>{KeyMap.get(sKey)}</MenuItem>)}\n          </DropdownButton>\n        </Grid>\n        <Grid item flexGrow={1}>\n          <Tooltip placement=\"top\" title=\"Using data from the builder, this will generate a graph to visualize Optimization Target vs. a selected stat. The graph will show the maximum Optimization Target value per 0.01 of the selected stat.\">\n            <Info />\n          </Tooltip>\n        </Grid>\n        {!!downloadData && <Grid item>\n          <Button startIcon={showMin ? <CheckBox /> : <CheckBoxOutlineBlank />}\n            color={showMin ? \"success\" : \"secondary\"}\n            onClick={() => setshowMin(!showMin)}>Show Min Stat Threshold</Button>\n        </Grid>}\n        {!!downloadData && <Grid item>\n          <Button color=\"info\" startIcon={<Download />} onClick={() => setshowDownload(!showDownload)}>Download Data</Button>\n        </Grid>}\n      </Grid>\n    </CardContent>\n    {!!displayData && <Divider />}\n    {chartData && !!displayData && <CardContent>\n      <Collapse in={!!downloadData && showDownload}>\n        <CardDark sx={{ mb: 2 }}>\n          <CardContent>\n            <Typography>Min Data</Typography>\n            <DataDisplay data={downloadData?.minimum} />\n            <Typography>All Data</Typography>\n            <DataDisplay data={downloadData?.allData} />\n          </CardContent>\n        </CardDark>\n      </Collapse>\n      <Chart displayData={displayData} plotNode={chartData.plotNode} valueNode={chartData.valueNode} showMin={showMin} />\n    </CardContent>}\n  </CardLight >\n}\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  fontFamily: \"monospace\",\n  resize: \"vertical\",\n  minHeight: \"5em\"\n})\nfunction DataDisplay({ data, }: { data?: object }) {\n  return <TextArea readOnly value={JSON.stringify(data)} onClick={e => {\n    const target = e.target as HTMLTextAreaElement;\n    target.selectionStart = 0;\n    target.selectionEnd = target.value.length;\n  }} />\n}\nfunction Chart({ displayData, plotNode, valueNode, showMin }: {\n  displayData: Point[],\n  plotNode: NumNode,\n  valueNode: NumNode,\n  showMin: boolean\n}) {\n  const plotBaseUnit = KeyMap.unit(plotNode.info?.key)\n  const valueUnit = KeyMap.unit(valueNode.info?.key)\n  return <ResponsiveContainer width=\"100%\" height={600}>\n    <ComposedChart data={displayData}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"x\" scale=\"linear\" unit={plotBaseUnit} domain={[\"auto\", \"auto\"]} tick={{ fill: 'white' }} type=\"number\" tickFormatter={n => n > 10000 ? n.toFixed() : n.toFixed(1)} />\n      <YAxis name=\"DMG\" domain={[\"auto\", \"auto\"]} unit={valueUnit} allowDecimals={false} tick={{ fill: 'white' }} type=\"number\" />\n      <ZAxis dataKey=\"y\" range={[3, 25]} />\n      <Legend />\n      <Scatter name=\"Optimization Target\" dataKey=\"y\" fill=\"#8884d8\" line lineType=\"fitting\" isAnimationActive={false} />\n      {showMin && <Line name=\"Minimum Stat Requirement Threshold\" dataKey=\"min\" stroke=\"#ff7300\" type=\"stepBefore\" connectNulls strokeWidth={2} isAnimationActive={false} />}\n    </ComposedChart>\n  </ResponsiveContainer>\n}\n","import { Replay } from '@mui/icons-material';\nimport { Button, CardContent, Divider, Grid, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { CharacterContext } from '../../../../../Context/CharacterContext';\nimport { artifactSlotIcon } from '../../../../../Components/Artifact/SlotNameWIthIcon';\nimport BootstrapTooltip from '../../../../../Components/BootstrapTooltip';\nimport SqBadge from '../../../../../Components/SqBadge';\nimport StatIcon, { uncoloredEleIcons } from '../../../../../Components/StatIcon';\nimport Artifact from '../../../../../Data/Artifacts/Artifact';\nimport KeyMap from '../../../../../KeyMap';\nimport { allElementsWithPhy } from '../../../../../Types/consts';\nimport useBuildSetting from '../useBuildSetting';\n\nexport const artifactsSlotsToSelectMainStats = [\"sands\", \"goblet\", \"circlet\"] as const\n\nexport default function MainStatSelectionCard({ disabled = false, }: {\n  disabled?: boolean\n}) {\n  const { t } = useTranslation(\"artifact\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatKeys }, buildSettingDispatch } = useBuildSetting(characterKey)\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {artifactsSlotsToSelectMainStats.map(slotKey => {\n      const numSel = mainStatKeys[slotKey].length\n      return <Box key={slotKey}>\n        <Divider />\n        <CardContent sx={{ pt: 1 }}>\n          <Box sx={{ display: \"flex\", gap: 1, alignItems: \"center\", pb: 1 }}>\n            <BootstrapTooltip placement=\"top\" title={<Typography>{t(`slotName.${slotKey}`)}</Typography>}>\n              <span>{artifactSlotIcon(slotKey)}</span>\n            </BootstrapTooltip>\n            <Box flexGrow={1}>\n              <SqBadge color=\"info\">{numSel ? `${numSel} Selected` : `Any`}</SqBadge>\n            </Box>\n            <Button color=\"error\" size=\"small\" disabled={!mainStatKeys[slotKey].length || disabled} sx={{ mt: -1, mb: -1 }}\n              onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey })}>\n              <Replay />\n            </Button>\n          </Box>\n          <Grid container spacing={1}>\n            {Artifact.slotMainStats(slotKey).map((mainStatKey, i) => {\n              const element = allElementsWithPhy.find(ele => mainStatKey.includes(ele))\n              const color = mainStatKeys[slotKey].includes(mainStatKey)\n                ? element ?? \"success\"\n                : \"secondary\"\n              return <Grid item key={mainStatKey} flexGrow={1} xs={(i < 3 && slotKey !== \"goblet\") ? 4 : undefined} >\n                <BootstrapTooltip placement=\"top\" title={<Typography><strong>{KeyMap.getArtStr(mainStatKey)}</strong></Typography>} disableInteractive>\n                  <Button fullWidth size=\"small\" color={color} sx={{ fontSize: \"1.2em\", height: \"100%\", pointerEvents: disabled ? \"none\" : undefined, cursor: disabled ? \"none\" : undefined }}\n                    onClick={() => buildSettingDispatch({ type: \"mainStatKey\", slotKey, mainStatKey })}>\n                    {element ? uncoloredEleIcons[element] : StatIcon[mainStatKey]}\n                  </Button>\n                </BootstrapTooltip>\n              </Grid>\n            })}\n          </Grid>\n        </CardContent>\n      </Box>\n    })}\n  </Box >\n}\n","import { Box, CardContent, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardLight from \"../../../../../Components/Card/CardLight\"\nimport InfoTooltip from \"../../../../../Components/InfoTooltip\"\nimport StatEditorList from \"../../../../../Components/StatEditorList\"\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\"\nimport { DataContext } from \"../../../../../Context/DataContext\"\nimport { input } from \"../../../../../Formula\"\nimport { StatKey } from \"../../../../../KeyMap\"\nimport { ElementKey, WeaponTypeKey } from \"../../../../../Types/consts\"\nimport useBuildSetting from \"../useBuildSetting\"\n\nexport default function StatFilterCard({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const { buildSetting: { statFilters }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const setStatFilters = useCallback((statFilters: Dict<StatKey, number>) => buildSettingDispatch({ statFilters }), [buildSettingDispatch],)\n\n  const statKeys = useMemo(() => {\n    const statKeys: StatKey[] = [\"atk\", \"hp\", \"def\", \"eleMas\", \"critRate_\", \"critDMG_\", \"heal_\", \"enerRech_\"]\n    if (data.get(input.weaponType).value as WeaponTypeKey !== \"catalyst\") statKeys.push(\"physical_dmg_\")\n    const charEle = data.get(input.charEle).value as ElementKey\n    statKeys.push(`${charEle}_dmg_`)\n    return statKeys\n  }, [data])\n\n\n  return <Box>\n    <CardLight>\n      <CardContent sx={{ display: \"flex\", gap: 1, justifyContent: \"space-between\" }}>\n        <Typography>{t`tabOptimize.constraintFilter.title`}</Typography>\n        <InfoTooltip title={<Typography>{t`tabOptimize.constraintFilter.tooltip`}</Typography>} />\n      </CardContent>\n    </CardLight>\n    <Box display=\"flex\" flexDirection=\"column\" gap={0.5}>\n      <StatEditorList statKeys={statKeys} statFilters={statFilters} setStatFilters={setStatFilters} disabled={disabled} />\n    </Box>\n  </Box>\n}\n","import useDBState from \"../../../../ReactHooks/useDBState\";\nimport { CharacterKey } from \"../../../../Types/consts\";\n\nexport const defThreads = navigator.hardwareConcurrency || 4\n\nexport function initialTabOptimizeDBState(): {\n  equipmentPriority: CharacterKey[],\n  threads: number,\n} {\n  return {\n    equipmentPriority: [],\n    threads: defThreads\n  }\n}\n\nexport function useOptimizeDBState() {\n  return useDBState(\"TabOptimize\", initialTabOptimizeDBState)\n}\n","import { Add, CheckBox, CheckBoxOutlineBlank, Close, KeyboardArrowDown, KeyboardArrowUp, KeyboardDoubleArrowDown, KeyboardDoubleArrowUp, Replay, Settings } from \"@mui/icons-material\";\nimport { Box, Button, ButtonGroup, CardContent, Divider, Grid, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport ArtifactCardPico from \"../../../../../Components/Artifact/ArtifactCardPico\";\nimport CardDark from \"../../../../../Components/Card/CardDark\";\nimport CardLight from \"../../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../../Components/Character/CharacterCardPico\";\nimport { CharacterSelectionModal } from \"../../../../../Components/Character/CharacterSelectionModal\";\nimport CloseButton from \"../../../../../Components/CloseButton\";\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../../../../../Components/CustomNumberInput\";\nimport ModalWrapper from \"../../../../../Components/ModalWrapper\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport WeaponCardPico from \"../../../../../Components/Weapon/WeaponCardPico\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBoolState from \"../../../../../ReactHooks/useBoolState\";\nimport useCharacter from \"../../../../../ReactHooks/useCharacter\";\nimport useCharSelectionCallback from \"../../../../../ReactHooks/useCharSelectionCallback\";\nimport { ICachedCharacter } from \"../../../../../Types/character\";\nimport { CharacterKey } from \"../../../../../Types/consts\";\nimport useBuildSetting from \"../useBuildSetting\";\nimport { useOptimizeDBState } from \"../DBState\";\n\nexport default function UseEquipped({ disabled = false }: { disabled?: boolean }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useEquippedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState(false)\n  const [{ equipmentPriority: tempEquipmentPriority }, setOptimizeDBState] = useOptimizeDBState()\n  //Basic validate for the equipmentPrio list to remove dups and characters that doesnt exist.\n  const equipmentPriority = useMemo(() => [...new Set(tempEquipmentPriority)].filter(ck => database.chars.get(ck)), [database, tempEquipmentPriority])\n  const setPrio = useCallback((equipmentPriority: CharacterKey[]) => setOptimizeDBState({ equipmentPriority }), [setOptimizeDBState])\n\n  const setPrioRank = useCallback((fromIndex, toIndex) => {\n    const arr = [...equipmentPriority]\n    var element = arr[fromIndex];\n    arr.splice(fromIndex, 1);\n    arr.splice(toIndex, 0, element);\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const removePrio = useCallback((fromIndex) => {\n    const arr = [...equipmentPriority]\n    arr.splice(fromIndex, 1)\n    setPrio(arr)\n  }, [equipmentPriority, setPrio])\n  const addPrio = useCallback((ck: CharacterKey) => setPrio([...equipmentPriority, ck]), [equipmentPriority, setPrio])\n  const resetPrio = useCallback(() => setPrio([]), [setPrio])\n\n  const numAbove = useMemo(() => {\n    let numAbove = equipmentPriority.length\n    const index = equipmentPriority.indexOf(characterKey)\n    if (index >= 0) numAbove = index\n    return numAbove\n  }, [characterKey, equipmentPriority])\n  const numUseEquippedChar = useMemo(() => {\n    return database.chars.keys.length - 1 - numAbove\n  }, [numAbove, database])\n  const numUnlisted = useMemo(() => {\n    return database.chars.keys.length - equipmentPriority.length\n  }, [equipmentPriority, database])\n\n  return <Box display=\"flex\" gap={1}>\n    <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"sm\" }}><CardDark>\n      <CardContent>\n        <Grid container spacing={1}>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\"><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.title\">Character Priority for Equipped Artifacts</Trans></Typography>\n          </Grid>\n          <Grid item sx={{ mb: -1 }}>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <CardLight sx={{ mb: 1 }}>\n          <CardContent>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc1\">When generating a build, the Optimizer will only consider equipped artifacts from characters below the current character or those not on the list.</Trans></Typography>\n            <Typography gutterBottom><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.desc2\">If the current character is not on the list, the Optimizer will only consider equipped artifacts from others characters that are not on the list.</Trans></Typography>\n          </CardContent>\n        </CardLight>\n        <Box display=\"flex\" flexDirection=\"column\" gap={2}>\n          {equipmentPriority.map((ck, i) =>\n            <SelectItem key={ck} characterKey={ck} rank={i + 1} maxRank={equipmentPriority.length} setRank={(num) => num && setPrioRank(i, num - 1)} onRemove={() => removePrio(i)} numAbove={numAbove} />)}\n          <Box sx={{ display: \"flex\", gap: 1 }}>\n            <NewItem onAdd={addPrio} list={equipmentPriority} />\n            <Button color=\"error\" onClick={resetPrio} startIcon={<Replay />}><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.clearList\">Clear List</Trans></Button>\n          </Box>\n          {!!numUseEquippedChar && <SqBadge color=\"success\"><Typography><Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.usingNum\" count={numUnlisted}>Using artifacts from <strong>{{ count: numUnlisted }}</strong> unlisted characters</Trans></Typography></SqBadge>}\n        </Box>\n      </CardContent>\n    </CardDark ></ModalWrapper>\n    <ButtonGroup sx={{ display: \"flex\", width: \"100%\" }}>\n      <Button sx={{ flexGrow: 1 }} onClick={() => buildSettingDispatch({ useEquippedArts: !useEquippedArts })} disabled={disabled} startIcon={useEquippedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useEquippedArts ? \"success\" : \"secondary\"}>\n        <Box>\n          <span><Trans t={t} i18nKey=\"tabOptimize.useEquipped.title\">Use Equipped Artifacts</Trans></span>\n          {useEquippedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useEquipped.usingNum\" count={numUseEquippedChar}>Using from <strong>{{ count: numUseEquippedChar }}</strong> characters</Trans></SqBadge>}\n        </Box>\n      </Button>\n      {useEquippedArts && <Button sx={{ flexShrink: 1 }} color=\"info\" onClick={onOpen} disabled={disabled}><Settings /></Button>}\n    </ButtonGroup>\n  </Box>\n}\n\nconst itemSize = 60\nfunction SelectItem({ characterKey, rank, maxRank, setRank, onRemove, numAbove }: {\n  characterKey: CharacterKey,\n  rank: number,\n  maxRank: number,\n  setRank: (r: number | undefined) => void,\n  onRemove: () => void,\n  numAbove: number,\n}) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const character = useCharacter(characterKey)\n  const onClick = useCharSelectionCallback()\n  if (!character) return null\n  const { equippedWeapon, equippedArtifacts } = character\n  return <CardLight sx={{ p: 1 }}  >\n    <Box sx={{ pb: 1, display: \"flex\", justifyContent: \"space-between\", gap: 1 }}>\n      <SqBadge color=\"info\">\n        <Typography>#{rank}</Typography>\n      </SqBadge>\n      <SqBadge sx={{ flexGrow: 1 }} color={numAbove === (rank - 1) ? \"warning\" : (rank - 1) < numAbove ? \"error\" : \"success\"}>\n        <Typography>{numAbove === (rank - 1) ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.curr\">Current character</Trans>\n          : (rank - 1) < numAbove ? <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.dont\">Don't Use artifacts</Trans> :\n            <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.status.use\">Use artifacts</Trans>}</Typography>\n      </SqBadge>\n      <Box>\n        <ButtonGroup sx={{ flexGrow: 1 }} size=\"small\">\n          <CustomNumberInputButtonGroupWrapper >\n            <CustomNumberInput onChange={setRank} value={rank}\n              // startAdornment=\"Rank:\"\n              inputProps={{ min: 1, max: maxRank, sx: { textAlign: \"center\" } }}\n              sx={{ width: \"100%\", height: \"100%\", pl: 2 }} />\n          </CustomNumberInputButtonGroupWrapper>\n          <Button disabled={rank === 1} onClick={() => setRank(1)} >\n            <KeyboardDoubleArrowUp />\n          </Button>\n          <Button disabled={rank === 1} onClick={() => setRank(rank - 1)}  >\n            <KeyboardArrowUp />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(rank + 1)}  >\n            <KeyboardArrowDown />\n          </Button>\n          <Button disabled={rank === maxRank} onClick={() => setRank(maxRank)}  >\n            <KeyboardDoubleArrowDown />\n          </Button>\n          <Button color=\"error\" onClick={onRemove}>\n            <Close />\n          </Button>\n        </ButtonGroup>\n      </Box>\n    </Box>\n    <Grid container columns={7} spacing={1}>\n      <Grid item xs={1} >\n        <CharacterCardPico characterKey={characterKey} onClick={onClick} />\n      </Grid>\n      <Grid item xs={1}><WeaponCardPico weaponId={equippedWeapon} /></Grid>\n      {Object.entries(equippedArtifacts).map(([slotKey, aId]) => <Grid item xs={1} key={slotKey} ><ArtifactCardPico slotKey={slotKey} artifactObj={database.arts.get(aId)} /></Grid>)}\n    </Grid>\n\n  </CardLight>\n}\nfunction NewItem({ onAdd, list }: { onAdd: (ck: CharacterKey) => void, list: CharacterKey[] }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onOpen, onClose] = useBoolState(false)\n  const filter = useCallback((char?: ICachedCharacter) => {\n    if (!char) return false\n    return !list.includes(char.key)\n  }, [list])\n  return <>\n    <CharacterSelectionModal show={show} onHide={onClose} onSelect={onAdd} filter={filter} />\n    <Button fullWidth sx={{ height: itemSize }} color=\"info\" onClick={onOpen} startIcon={<Add />} >\n      <Trans t={t} i18nKey=\"tabOptimize.useEquipped.modal.add\">Add character to list</Trans>\n    </Button>\n  </>\n}\n","import { CheckBox, CheckBoxOutlineBlank } from \"@mui/icons-material\";\nimport { Box, Button } from \"@mui/material\";\nimport { useContext, useMemo } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { CharacterContext } from \"../../../../../Context/CharacterContext\";\nimport SqBadge from \"../../../../../Components/SqBadge\";\nimport { DatabaseContext } from \"../../../../../Database/Database\";\nimport useBuildSetting from \"../useBuildSetting\";\n\nexport default function UseExcluded({ disabled = false, artsDirty }: { disabled?: boolean, artsDirty: object }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { buildSetting: { useExcludedArts }, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { database } = useContext(DatabaseContext)\n  const numExcludedArt = useMemo(() => artsDirty && database.arts.values.reduce((a, art) => a + ((art.exclude && art.location !== characterKey) ? 1 : 0), 0), [database, artsDirty, characterKey])\n  return <Button fullWidth onClick={() => buildSettingDispatch({ useExcludedArts: !useExcludedArts })} disabled={!numExcludedArt || disabled} startIcon={useExcludedArts ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useExcludedArts ? \"success\" : \"secondary\"}>\n    <Box>\n      <span><Trans t={t} i18nKey=\"tabOptimize.useExcluded.title\" count={numExcludedArt}>Use Excluded Artifacts</Trans></span>\n      {useExcludedArts && <SqBadge><Trans t={t} i18nKey=\"tabOptimize.useExcluded.usingNum\" count={numExcludedArt}>Using <strong>{{ count: numExcludedArt }}</strong> excluded artifacts</Trans></SqBadge>}\n    </Box>\n  </Button>\n}\n","import Artifact from \"../../../../Data/Artifacts/Artifact\";\nimport { input } from \"../../../../Formula\";\nimport { computeUIData } from \"../../../../Formula/api\";\nimport { formulaString } from \"../../../../Formula/debug\";\nimport { Data, NumNode } from \"../../../../Formula/type\";\nimport { constant, setReadNodeKeys } from \"../../../../Formula/utils\";\nimport { allMainStatKeys, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\";\nimport { deepClone, objectKeyMap, objectMap } from \"../../../../Util/Util\";\nimport type { ArtifactBuildData, ArtifactsBySlot, DynStat } from \"./common\";\n\nconst dynamic = setReadNodeKeys(deepClone({ dyn: { ...input.art, ...input.artSet } }))\nexport const dynamicData = {\n  art: objectKeyMap([...allMainStatKeys, ...allSubstatKeys], key => dynamic.dyn[key]),\n  artSet: objectMap(input.artSet, (_, key) => dynamic.dyn[key]),\n}\n\nexport function compactArtifacts(arts: ICachedArtifact[], mainStatAssumptionLevel: number, allowPartial: boolean): ArtifactsBySlot {\n  const result: ArtifactsBySlot = {\n    base: {},\n    values: { flower: [], plume: [], goblet: [], circlet: [], sands: [] }\n  }\n  const keys = new Set<string>()\n\n  for (const art of arts) {\n    const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, Math.max(Math.min(mainStatAssumptionLevel, art.rarity * 4), art.level))\n\n    const data: ArtifactBuildData = {\n      id: art.id, set: art.setKey,\n      values: {\n        [art.setKey]: 1,\n        [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n        ...Object.fromEntries(art.substats.map(substat =>\n          [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n      },\n    }\n    delete data.values[\"\"]\n    result.values[art.slotKey].push(data)\n    Object.keys(data.values).forEach(x => keys.add(x))\n  }\n  result.base = objectKeyMap([...keys], _ => 0)\n  if (allowPartial)\n    for (const value of Object.values(result.values))\n      value.push({ id: \"\", values: {} })\n  return result\n}\n\nexport function debugCompute(nodes: NumNode[], base: DynStat, arts: ArtifactBuildData[]) {\n  const stats = { ...base }\n  for (const art of arts) {\n    for (const [key, value] of Object.entries(art.values)) {\n      stats[key] = (stats[key] ?? 0) + value\n    }\n  }\n  const data = { dyn: Object.fromEntries(Object.entries(stats).map(([key, value]) => [key, constant(value)])) } as Data\n  const uiData = computeUIData([data])\n  return {\n    base, arts, stats,\n    data, uiData,\n    nodes: nodes.map(formulaString),\n    results: nodes.map(node => uiData.get(node)),\n  }\n}\n","import { ArtSetExclusion } from \"../../../../Database/Data/BuildsettingData\"\nimport { fillBuffer, reducePolynomial } from \"../../../../Formula/addedUtils\"\nimport { ExpandedPolynomial, expandPoly, toNumNode } from \"../../../../Formula/expandPoly\"\nimport { LinearForm, minMaxWeightVec, toLinearUpperBound } from \"../../../../Formula/linearUpperBound\"\nimport { precompute } from \"../../../../Formula/optimization\"\nimport { NumNode } from \"../../../../Formula/type\"\nimport { allArtifactSets, allSlotKeys, ArtifactSetKey, SlotKey } from \"../../../../Types/consts\"\nimport { objectKeyMap, objectKeyValueMap, range } from \"../../../../Util/Util\"\nimport { ArtifactBuildDataVecDense, ArtifactsBySlot, ArtifactsBySlotVec, DynStat, filterArtsVec2, RequestFilter } from \"./common\"\n\nexport type UnionFilter = {\n  uType: true\n  filters: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>[]\n} | (RequestFilter & { uType: false })\n\nexport type RequestFilter2 = {\n  // filter: StrictDict<SlotKey, { kind: \"id\", ids: Set<string> }>,\n  filterVec: StrictDict<SlotKey, number[]>,  // dict of list of indices (for some particular ArtifactsBySetVec)\n  lower: number[],  // length `k` list of lower bound stats\n  upper: number[],  // length `k` list of upper bound stats\n  minw: number[],   // length `l` list of minimum upper bound estimates\n  maxw: number[],   // length `l` list of maximum upper bound weights\n}\nexport type UnionFilter2 = RequestFilter2[]\nexport type ArtSetExclusionFull = Dict<Exclude<ArtifactSetKey, \"PrayersForDestiny\" | \"PrayersForIllumination\" | \"PrayersForWisdom\" | \"PrayersToSpringtime\"> | \"uniqueKey\", number[]>\n// export type SubProblem = SubProblemNC | SubProblemWC\nexport type SubProblem = SubProblemWC\nexport type SubProblemNC = {\n  cache: false,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  depth: number,\n}\nexport type SubProblemWC = {\n  cache: true,\n  optimizationTarget: ExpandedPolynomial,\n  constraints: { value: ExpandedPolynomial, min: number }[],\n  artSetExclusion: ArtSetExclusionFull,\n\n  filters: UnionFilter2,\n  lin: LinearForm[],\n  // cachedCompute: CachedCompute,\n  depth: number,\n}\nexport type CachedCompute = {\n  maxEst: number[],\n  lin: LinearForm[],\n  lower: DynStat,\n  upper: DynStat\n}\n\nexport function countBuildsU(f: UnionFilter2): number {\n  return f.reduce((tot, { filterVec }) => tot + allSlotKeys.reduce((_count, slot) => _count * filterVec[slot].length, 1), 0)\n}\n\nexport function unionFilterUpperLower(f: UnionFilter2) {\n  const lower = [...f[0].lower]\n  const upper = [...f[0].upper]\n  const minw = [...f[0].minw]\n  const maxw = [...f[0].maxw]\n\n  for (let i = 1; i < f.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], f[i].lower[j])\n      upper[j] = Math.max(upper[j], f[i].upper[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], f[i].minw[j])\n      maxw[j] = Math.max(maxw[j], f[i].maxw[j])\n    }\n  }\n\n  return { lower, upper, minw, maxw }\n}\n\nexport function applyLinearForm(arts: ArtifactsBySlotVec, lin: LinearForm[]) {\n  const wixs: number[][] = []\n  const ws: number[][] = []\n  const baseC: number[] = []\n  lin.forEach(li => {\n    const ixs0: number[] = []\n    const w0: number[] = []\n    Object.entries(li.w).forEach(([k, w]) => {\n      ixs0.push(arts.keys.indexOf(k))\n      w0.push(w)\n    })\n    wixs.push(ixs0)\n    ws.push(w0)\n\n    baseC.push(ixs0.reduce((accum, ix, i) => accum + arts.base[ix] * w0[i], li.c))\n  })\n\n  arts.baseBuffer = baseC\n  allSlotKeys.forEach(slotKey => arts.values[slotKey].forEach(art =>\n    art.buffer = wixs.map((ixsi, i) => ixsi.reduce((accum, ix, j) => accum + art.values[ix] * ws[i][j], 0))\n  ))\n}\n\nexport function reduceSubProblem(arts: ArtifactsBySlotVec, threshold: number, subp: SubProblem): SubProblemWC | undefined {\n  const { optimizationTarget, constraints, artSetExclusion, depth } = subp\n  let { filters } = subp\n  let nodes = [...constraints.map(({ value }) => value), optimizationTarget]\n  const mins = constraints.map(({ min }) => min)\n\n  // 0. Check for never-feasible constraints\n  filters = filters.filter(({ maxw }) => {\n    if (mins.some((min, j) => maxw[j] < min)) return false\n    if (maxw[mins.length] < threshold) return false\n    return true\n  })\n  if (filters.length === 0) return undefined\n\n  // 0b. Calculate stat bounding box\n  const { lower, upper } = unionFilterUpperLower(filters)\n  const statsMin: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, lower[i]])))\n  const statsMax: DynStat = Object.fromEntries(arts.keys.map((k, i) => ([k, upper[i]])))\n\n  nodes = reducePolynomial(nodes, statsMin, statsMax)\n\n  // 1. Check for always-feasible constraints.\n  const [compute, mapping, buffer] = precompute(constraints.map(({ value }) => toNumNode(value)), n => n.path[1])\n  fillBuffer(statsMin, mapping, buffer)\n  const result = compute()\n  const active = mins.map((m, i) => m > result[i])\n\n  const newOptTarget = nodes.pop()!\n  const newConstraints = nodes.map((value, i) => ({ value, min: mins[i] })).filter((_, i) => active[i])\n  const newMins = newConstraints.map(({ min }) => min)\n\n  // 2. Check for never-active and always-active ArtSetExcl constraints.\n  const newArtExcl = {} as ArtSetExclusionFull\n  for (const [setKey, exclude] of Object.entries(artSetExclusion)) {\n    if (setKey === 'uniqueKey') {\n      // TODO: Check and exclude rainbow bullshit.\n      newArtExcl[setKey] = exclude\n      const feasibleKeys = allArtifactSets.filter(setKey => statsMax[setKey] > 0)\n      let feasible4sets = 0\n      let feasible2sets = 0\n      feasibleKeys.forEach(k => {\n        let allowedCnts = range(statsMin[k], statsMax[k])\n        if (artSetExclusion[k])\n          allowedCnts = allowedCnts.filter(cnt => !artSetExclusion[k].includes(cnt))\n\n        if (allowedCnts.includes(4) || allowedCnts.includes(5)) feasible4sets++\n        if (allowedCnts.includes(2) || allowedCnts.includes(3)) feasible2sets++\n      })\n\n      if (exclude.includes(5) && feasible4sets === 0) {\n        if (feasible2sets === 0) return; // No feasible 4sets or 2sets along with rainbow5 excluded is never satisfiable\n        if (exclude.includes(3) && feasible2sets < 2) return; // No 4sets, rainbow5 excluded, rainbow3 excluded means we need at least 2 2sets\n      }\n      continue\n    }\n    const reducedExcl = exclude.filter(n => statsMin[setKey] <= n && n <= statsMax[setKey])        // Cut away never-active\n    if (reducedExcl.includes(statsMin[setKey]) && reducedExcl.includes(statsMax[setKey])) return;  // Always active.\n    if (reducedExcl.length > 0) newArtExcl[setKey] = reducedExcl\n  }\n\n  // 3. Estimate Upper Bounds and re-check for never-feasible constraints\n  let f = [...newConstraints.map(({ value }) => value), newOptTarget]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  applyLinearForm(arts, lin)\n  const newFilters = filters\n    .map(filter => {\n      const { filterVec, lower, upper } = filter\n      const a = filterArtsVec2(arts, filter.filterVec)  // CANDIDATE for making this more efficient\n      const minww = [...a.baseBuffer]\n      const maxww = [...a.baseBuffer]\n      allSlotKeys.forEach(slotKey => {\n        const { minw, maxw } = slotUpperLowerVecW(a.values[slotKey])\n        for (let j = 0; j < minww.length; j++) {\n          minww[j] += minw[j]\n          maxww[j] += maxw[j]\n        }\n      })\n      return {\n        filterVec, lower, upper,\n        minw: minww, maxw: maxww,\n      }\n    })\n    .filter(({ maxw }) => {\n      if (newMins.some((min, j) => maxw[j] < min)) return false\n      if (maxw[mins.length] < threshold) return false\n      return true\n    })\n\n  return {\n    cache: true,\n    optimizationTarget: newOptTarget,\n    constraints: newConstraints,\n    artSetExclusion: newArtExcl,\n\n    depth, lin, filters: newFilters\n  }\n}\n\nexport function toArtifactBySlotVec(arts: ArtifactsBySlot): ArtifactsBySlotVec {\n  const allKeys = new Set(Object.keys(arts.base))\n  Object.values(arts.values).forEach(slotArts => {\n    slotArts.forEach(art => {\n      if (art.set) allKeys.add(art.set)\n      Object.keys(art.values).forEach(k => allKeys.add(k))\n    })\n  })\n\n  const allKeysList = [...allKeys]\n  const keys = [...allKeysList.filter(k => !(allArtifactSets as readonly string[]).includes(k)), ...allKeysList.filter(k => (allArtifactSets as readonly string[]).includes(k))]\n\n  return {\n    keys, baseBuffer: [],\n    base: keys.map(k => arts.base[k] ?? 0),\n    values: {\n      flower: arts.values.flower.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      plume: arts.values.plume.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      sands: arts.values.sands.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      goblet: arts.values.goblet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n      circlet: arts.values.circlet.map(({ id, set, values }) => ({ id, set, values: keys.map(k => values[k] ?? (k === set ? 1 : 0)), buffer: [] })),\n    }\n  }\n}\n\ntype ProblemSetup = {\n  optimizationTargetNode: NumNode,\n  nodes: NumNode[],\n  minimum: number[],\n  artSetExclusion: ArtSetExclusion\n}\nexport function problemSetup(arts: ArtifactsBySlotVec, { optimizationTargetNode, nodes, minimum, artSetExclusion }: ProblemSetup): SubProblemWC {\n  const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n    if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n    return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n  })\n\n  const constraintsEP = nodes\n    .map((value, i) => ({ value: expandPoly(value), min: minimum[i] }))\n    .filter(x => x.min > -Infinity)\n  const opttargetEP = expandPoly(optimizationTargetNode)\n\n  const { lower, upper } = statsUpperLowerVec(arts)\n  const statsMin = Object.fromEntries(arts.keys.map((k, i) => [k, lower[i]]))\n  const statsMax = Object.fromEntries(arts.keys.map((k, i) => [k, upper[i]]))\n  let f = [...constraintsEP.map(({ value }) => value), opttargetEP]\n  const lin = f.map(fi => toLinearUpperBound(fi, statsMin, statsMax))\n  const minMaxEst = lin.map(li => minMaxWeightVec(arts, li))\n\n  console.log('-----------------------------------------------------------------------')\n  console.log('lin', lin)\n  console.log('-----------------------------------------------------------------------')\n\n  const filterVec = objectKeyMap(allSlotKeys, slotKey => {\n    return arts.values[slotKey].map((v, i) => i)\n  })\n\n  const initialProblem: SubProblemWC = {\n    cache: true,\n    optimizationTarget: opttargetEP,\n    constraints: constraintsEP,\n    artSetExclusion: artSetExclFull,\n\n    filters: [{\n      filterVec, lower, upper,\n      maxw: minMaxEst.map(({ maxw }) => maxw),\n      minw: minMaxEst.map(({ minw }) => minw),\n    }],\n    depth: 0,\n    lin,\n  }\n  const initialReducedProblem = reduceSubProblem(arts, -Infinity, initialProblem)\n  console.log(initialReducedProblem)\n  if (initialReducedProblem === undefined)\n    return initialProblem\n  return initialReducedProblem\n}\n\nexport function slotUpperLowerVec(arts: ArtifactBuildDataVecDense[]) {\n  const lower = [...arts[0].values]\n  const upper = [...arts[0].values]\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < lower.length; j++) {\n      lower[j] = Math.min(lower[j], arts[i].values[j])\n      upper[j] = Math.max(upper[j], arts[i].values[j])\n    }\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { lower, upper, minw, maxw }\n}\nexport function slotUpperLowerVecW(arts: ArtifactBuildDataVecDense[]) {\n  const minw = [...arts[0].buffer]\n  const maxw = [...arts[0].buffer]\n  for (let i = 1; i < arts.length; i++) {\n    for (let j = 0; j < minw.length; j++) {\n      minw[j] = Math.min(minw[j], arts[i].buffer[j])\n      maxw[j] = Math.max(maxw[j], arts[i].buffer[j])\n    }\n  }\n  return { minw, maxw }\n}\nexport function statsUpperLowerVec(a: ArtifactsBySlotVec) {\n  const lower = [...a.base]\n  const upper = [...a.base]\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVec(slotArts)\n    for (let i = 0; i < lower.length; i++) {\n      lower[i] += slotUL.lower[i]\n      upper[i] += slotUL.upper[i]\n    }\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { lower, upper, minw, maxw }\n}\nexport function statsUpperLowerVecW(a: ArtifactsBySlotVec) {\n  const minw = [...a.baseBuffer]\n  const maxw = [...a.baseBuffer]\n  Object.values(a.values).forEach(slotArts => {\n    const slotUL = slotUpperLowerVecW(slotArts)\n    for (let i = 0; i < minw.length; i++) {\n      minw[i] += slotUL.minw[i]\n      maxw[i] += slotUL.maxw[i]\n    }\n  })\n  return { minw, maxw }\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { CheckBox, CheckBoxOutlineBlank, Close, TrendingUp } from '@mui/icons-material';\nimport { Alert, Box, Button, ButtonGroup, CardContent, Divider, Grid, Link, MenuItem, Skeleton, ToggleButton, Typography, Pagination } from '@mui/material';\nimport React, { Suspense, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink } from 'react-router-dom';\n// eslint-disable-next-line\nimport Worker from \"worker-loader!./BackgroundWorker\";\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport BootstrapTooltip from '../../../../Components/BootstrapTooltip';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport DropdownButton from '../../../../Components/DropdownMenu/DropdownButton';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport SolidToggleButtonGroup from '../../../../Components/SolidToggleButtonGroup';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { thresholdExclusions } from '../../../../Formula/addedUtils';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { uiInput as input } from '../../../../Formula/index';\nimport { optimize } from '../../../../Formula/optimization';\nimport { elimLinDepStats, thresholdToConstBranchForm } from '../../../../Formula/optimize2';\nimport { NumNode } from '../../../../Formula/type';\nimport { UIData } from '../../../../Formula/uiData';\nimport KeyMap from '../../../../KeyMap';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useDBState from '../../../../ReactHooks/useDBState';\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport { initGlobalSettings } from '../../../../stateInit';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { CharacterKey } from '../../../../Types/consts';\nimport { objectKeyValueMap, objPathValue, range } from '../../../../Util/Util';\nimport { FinalizeResult, Setup, WorkerCommand, WorkerResult } from './BackgroundWorker';\nimport { maxBuildsToShowList } from './Build';\nimport { artSetPerm, Build, filterFeasiblePerm, mergeBuilds, mergePlot, pruneAll, RequestFilter } from './common';\nimport ArtifactSetConfig from './Components/ArtifactSetConfig';\nimport AssumeFullLevelToggle from './Components/AssumeFullLevelToggle';\nimport BonusStatsCard from './Components/BonusStatsCard';\nimport BuildAlert, { BuildStatus } from './Components/BuildAlert';\nimport BuildDisplayItem from './Components/BuildDisplayItem';\nimport ChartCard, { ChartData } from './Components/ChartCard';\nimport MainStatSelectionCard from './Components/MainStatSelectionCard';\nimport OptimizationTargetSelector from './Components/OptimizationTargetSelector';\nimport StatFilterCard from './Components/StatFilterCard';\nimport UseEquipped from './Components/UseEquipped';\nimport UseExcluded from './Components/UseExcluded';\nimport { defThreads, useOptimizeDBState } from './DBState';\nimport { compactArtifacts, dynamicData } from './foreground';\nimport { OptimizationTargetContext } from '../../../../Context/OptimizationTargetContext';\nimport { countBuildsU, problemSetup, SubProblem, toArtifactBySlotVec } from './subproblemUtil';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport useBuildSetting from './useBuildSetting';\n\nexport default function TabBuild() {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey, compareData } } = useContext(CharacterContext)\n  const [{ tcMode }] = useDBState(\"GlobalSettings\", initGlobalSettings)\n  const { database } = useContext(DatabaseContext)\n\n  const [buildStatus, setBuildStatus] = useState({ type: \"inactive\", tested: 0, failed: 0, skipped: 0, total: 0 } as BuildStatus)\n  const generatingBuilds = buildStatus.type !== \"inactive\"\n\n  const [chartData, setchartData] = useState(undefined as ChartData | undefined)\n\n  const [artsDirty, setArtsDirty] = useForceUpdate()\n\n  const [{ equipmentPriority, threads = defThreads }, setOptimizeDBState] = useOptimizeDBState()\n  const maxWorkers = threads > defThreads ? defThreads : threads\n  const setMaxWorkers = useCallback(threads => setOptimizeDBState({ threads }), [setOptimizeDBState],)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { plotBase, optimizationTarget, mainStatAssumptionLevel, allowPartial, builds, buildDate, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n  const buildsArts = useMemo(() => builds.map(build => build.map(i => database.arts.get(i)!)), [builds, database])\n  const numBuilds = buildsArts.length\n\n  const [currentPageIndex, setCurrentPageIndex] = useState(0)\n  const { numPages } = useMemo(() => {\n    return { numPages: Math.ceil(numBuilds / maxArtsToShowPerPage) }\n  }, [numBuilds])\n  const setPageIdx = useCallback((e, value: number) => {\n    setCurrentPageIndex(value - 1)\n  }, [setCurrentPageIndex])\n\n  //register changes in artifact database\n  useEffect(() =>\n    database.arts.followAny(setArtsDirty),\n    [setArtsDirty, database])\n\n  // Provides a function to cancel the work\n  const cancelToken = useRef(() => { })\n  //terminate worker when component unmounts\n  useEffect(() => () => cancelToken.current(), [])\n  const generateBuilds = useCallback(async () => {\n    const { artSetExclusion, plotBase, statFilters, mainStatKeys, optimizationTarget, mainStatAssumptionLevel, useExcludedArts, useEquippedArts, allowPartial, maxBuildsToShow, levelLow, levelHigh } = buildSetting\n    if (!characterKey || !optimizationTarget) return\n\n    let cantTakeList: CharacterKey[] = []\n    if (useEquippedArts) {\n      const index = equipmentPriority.indexOf(characterKey)\n      if (index < 0) cantTakeList = [...equipmentPriority]\n      else cantTakeList = equipmentPriority.slice(0, index)\n    }\n    const filteredArts = database.arts.values.filter(art => {\n      if (art.level < levelLow) return false\n      if (art.level > levelHigh) return false\n      const mainStats = mainStatKeys[art.slotKey]\n      if (mainStats?.length && !mainStats.includes(art.mainStatKey)) return false\n\n      // If its equipped on the selected character, bypass the check\n      if (art.location === characterKey) return true\n\n      if (art.exclude && !useExcludedArts) return false\n      if (art.location && !useEquippedArts) return false\n      if (art.location && useEquippedArts && cantTakeList.includes(art.location)) return false\n      return true\n    })\n    const split = compactArtifacts(filteredArts, mainStatAssumptionLevel, allowPartial)\n\n    const teamData = await getTeamData(database, characterKey, mainStatAssumptionLevel, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    const targetNode = optimizationTargetNode\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100 // TODO: Conversion\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    setchartData(undefined)\n\n    const cancelled = new Promise<void>(r => cancelToken.current = r)\n\n    let nodes = [...valueFilter.map(x => x.value), optimizationTargetNode], arts = split!\n    // const setPerms = filterFeasiblePerm(artSetPerm(artSetExclusion, Object.values(split.values).flatMap(x => x.map(x => x.set!))), split)\n\n    const minimum = [...valueFilter.map(x => x.minimum), -Infinity]\n    const status: Omit<BuildStatus, \"type\"> = { tested: 0, failed: 0, skipped: 0, total: NaN, startTime: performance.now() }\n    if (plotBase) {\n      nodes.push(input.total[plotBase])\n      minimum.push(-Infinity)\n    }\n\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    ({ nodes, arts } = pruneAll(nodes, minimum, arts, maxBuildsToShow, artSetExclusion, {\n      reaffine: true, pruneArtRange: true, pruneNodeRange: true, pruneOrder: true\n    }))\n    // Can be further folded after pruning\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    nodes = thresholdExclusions(nodes, artSetExclusion);\n    nodes = thresholdToConstBranchForm(nodes);\n    ({ a: arts, nodes } = elimLinDepStats(arts, nodes));\n    nodes = optimize(nodes, {}, _ => false)\n\n    const plotBaseNode = plotBase ? nodes.pop() : undefined\n    optimizationTargetNode = nodes.pop()!\n\n    const artSetExclFull = objectKeyValueMap(Object.entries(artSetExclusion), ([setKey, v]) => {\n      if (setKey === 'rainbow') return ['uniqueKey', v.map(v => v + 1)]\n      return [setKey, v.flatMap(v => (v === 2) ? [2, 3] : [4, 5])]\n    })\n    console.log({ artSetExclFull })\n    const constraints = nodes\n      .map((value, i) => ({ value, min: minimum[i] }))\n      .filter(x => x.min > -Infinity)\n    const artsVec = toArtifactBySlotVec(arts)\n    const initialProblem = problemSetup(artsVec, { optimizationTargetNode, nodes, minimum, artSetExclusion })\n\n    const masterInfo = { id: -1, ready: true }\n    const maxSplitIters = 5\n    const minFilterCount = 2_000 // Don't split for single worker\n    // const maxRequestFilterInFlight = maxWorkers * 4\n    const maxRequestFilterInFlight = 1\n    const workQueue: SubProblem[] = [initialProblem]\n    const idleWorkers = new Set<number>()  // Currently idle workers\n    const busyWorkerIDs = new Set<number>()  // Workers with pending work in SplitWorker()\n    const workers: Worker[] = []\n\n    const wrap = { buildValues: Array(maxBuildsToShow).fill(0).map(_ => -Infinity) }\n\n    function fetchContinueWork(): WorkerCommand {\n      return { command: \"split\", minCount: minFilterCount, maxIter: maxSplitIters, threshold: wrap.buildValues[maxBuildsToShow - 1] }\n    }\n    function fetchWork(): WorkerCommand | undefined {\n      const subproblem = workQueue.shift()\n      if (!subproblem) return undefined\n      let numBuild = countBuildsU(subproblem.filters)\n      // let numBuild = countBuilds(filterArts(arts, subproblem.filter))\n\n      if (numBuild <= minFilterCount) return { command: 'iterate', threshold: wrap.buildValues[maxBuildsToShow - 1], subproblem }\n      return { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem }\n    }\n    function requestShareWork(sender: number): WorkerCommand {\n      return { command: 'share', sender }\n    }\n\n    status.total = Object.values(arts.values).reduce((prod, arts) => prod * arts.length, 1)\n    const finalizedList: Promise<FinalizeResult>[] = []\n    for (let i = 0; i < maxWorkers; i++) {\n      const worker = new Worker()\n      workers.push(worker)\n\n      const setup: Setup = {\n        command: \"setup\",\n        id: i, arts, artsVec,\n        optimizationTarget: optimizationTargetNode,\n        artSetExclusion: artSetExclusion,\n        plotBase: plotBaseNode,\n        maxBuilds: maxBuildsToShow,\n        filters: constraints\n      }\n      worker.postMessage(setup, undefined)\n      // if (i === 0) {\n      //   const countCommand: WorkerCommand = { command: \"count\", exclusion: artSetExclusion, arts: [arts, prepruneArts] }\n      //   worker.postMessage(countCommand, undefined)\n      // }\n      let finalize: (_: FinalizeResult) => void\n      const finalized = new Promise<FinalizeResult>(r => finalize = r)\n      worker.onmessage = async ({ data }: { data: { id: number } & WorkerResult }) => {\n        switch (data.command) {\n          case \"interim\":\n            status.tested += data.tested\n            status.failed += data.failed\n            status.skipped += data.skipped\n            if (data.buildValues) {\n              wrap.buildValues.push(...data.buildValues)\n              wrap.buildValues.sort((a, b) => b - a).splice(maxBuildsToShow)\n            }\n            return\n          case \"split\":\n            workQueue.push(...data.subproblems)\n            if (data.ready && data.id === masterInfo.id) masterInfo.ready = true\n            if (data.ready) {\n              busyWorkerIDs.delete(data.id)\n            }\n            else busyWorkerIDs.add(data.id)\n            idleWorkers.add(data.id)\n            break\n          case \"iterate\":\n            idleWorkers.add(data.id)\n            break\n          case \"finalize\":\n            worker.terminate()\n            finalize(data);\n            return\n          case \"share\":\n            if (data.subproblem) {\n              const splitCommand = { command: 'split', threshold: wrap.buildValues[maxBuildsToShow - 1], minCount: minFilterCount, maxIter: maxSplitIters, subproblem: data.subproblem }\n              workers[data.sender].postMessage(splitCommand)\n              busyWorkerIDs.add(data.sender)\n            }\n            else idleWorkers.add(data.sender)\n            break\n          case \"count\":\n            const [pruned, prepruned] = data.counts\n            status.total = prepruned\n            status.skipped += prepruned - pruned\n            return\n          default: console.log(\"DEBUG\", data)\n        }\n\n        const toLoop = [...idleWorkers]\n        for (const id of toLoop) {\n          const worker = workers[id]\n          let work: WorkerCommand | undefined\n\n          if (workQueue.length >= maxRequestFilterInFlight) work = fetchWork()\n          else if (busyWorkerIDs.has(id)) work = fetchContinueWork()\n          if (!work) work = fetchWork()\n          if (masterInfo.id < 0) {\n            masterInfo.id = id\n            masterInfo.ready = false\n          }\n\n          if (work) {\n            idleWorkers.delete(id)\n            worker.postMessage(work)\n          }\n          else if (!masterInfo.ready) {\n            idleWorkers.delete(id)\n            workers[masterInfo.id].postMessage(requestShareWork(id))\n          }\n        }\n\n        if (busyWorkerIDs.size === 0 && idleWorkers.size === maxWorkers) {\n          workers.forEach(worker => worker.postMessage({ command: 'finalize' }))\n        }\n      }\n\n      cancelled.then(() => worker.terminate())\n      finalizedList.push(finalized)\n    }\n\n    const buildTimer = setInterval(() => setBuildStatus({ type: \"active\", ...status }), 100)\n    const results = await Promise.any([Promise.all(finalizedList), cancelled])\n    clearInterval(buildTimer)\n    cancelToken.current = () => { }\n\n    if (!results) {\n      status.tested = 0\n      status.failed = 0\n      status.skipped = 0\n      status.total = 0\n    } else {\n      if (plotBase) {\n        const plotData = mergePlot(results.map(x => x.plotData!))\n        const plotBaseNode = input.total[plotBase] as NumNode\n        let data = Object.values(plotData)\n        if (KeyMap.unit(targetNode.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value: value * 100, plot })) as Build[]\n        if (KeyMap.unit(plotBaseNode!.info?.key) === \"%\")\n          data = data.map(({ value, plot }) => ({ value, plot: (plot ?? 0) * 100 })) as Build[]\n        setchartData({\n          valueNode: targetNode,\n          plotNode: plotBaseNode,\n          data\n        })\n      }\n      const builds = mergeBuilds(results.map(x => x.builds), maxBuildsToShow)\n      if (process.env.NODE_ENV === \"development\") console.log(\"Build Result\", builds)\n      buildSettingDispatch({ builds: builds.map(build => build.artifactIds), buildDate: Date.now() })\n      setCurrentPageIndex(0)\n    }\n    setBuildStatus({ ...status, type: \"inactive\", finishTime: performance.now() })\n  }, [characterKey, database, buildSettingDispatch, maxWorkers, buildSetting, equipmentPriority, setCurrentPageIndex])\n\n  const characterName = characterSheet?.name ?? \"Character Name\"\n\n  const setPlotBase = useCallback(plotBase => {\n    buildSettingDispatch({ plotBase })\n    setchartData(undefined)\n  }, [buildSettingDispatch])\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return data && teamData && { data, teamData }\n  }, [data, teamData])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <CardLight>\n            <CardContent  >\n              <Typography gutterBottom>Main Stat</Typography>\n              <BootstrapTooltip placement=\"top\" title={<Typography><strong>Level Assumption</strong> changes mainstat value to be at least a specific level. Does not change substats.</Typography>}>\n                <Box>\n                  <AssumeFullLevelToggle mainStatAssumptionLevel={mainStatAssumptionLevel} setmainStatAssumptionLevel={mainStatAssumptionLevel => buildSettingDispatch({ mainStatAssumptionLevel })} disabled={generatingBuilds} />\n                </Box>\n              </BootstrapTooltip>\n            </CardContent>\n            {/* main stat selector */}\n            <MainStatSelectionCard disabled={generatingBuilds} />\n          </CardLight>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 3 */}\n        <Grid item xs={12} sm={6} lg={6} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <ArtifactSetConfig disabled={generatingBuilds} />\n\n          {/* use excluded */}\n          <UseExcluded disabled={generatingBuilds} artsDirty={artsDirty} />\n\n          {/* use equipped */}\n          <UseEquipped disabled={generatingBuilds} />\n\n          <Button fullWidth startIcon={allowPartial ? <CheckBox /> : <CheckBoxOutlineBlank />} color={allowPartial ? \"success\" : \"secondary\"} onClick={() => buildSettingDispatch({ allowPartial: !allowPartial })}>{t`tabOptimize.allowPartial`}</Button>\n          { /* Level Filter */}\n          <CardLight>\n            <CardContent>Artifact Level Filter</CardContent>\n            <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n              setLow={levelLow => buildSettingDispatch({ levelLow })}\n              setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n              setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n              disabled={generatingBuilds}\n            />\n          </CardLight>\n\n          {/*Minimum Final Stat Filter */}\n          <StatFilterCard disabled={generatingBuilds} />\n\n        </Grid>\n      </Grid>\n      {/* Footer */}\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1} >\n          <ButtonGroup>\n            <Button\n              disabled={!characterKey || generatingBuilds || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n              color={characterKey ? \"success\" : \"warning\"}\n              onClick={generateBuilds}\n              startIcon={<TrendingUp />}\n            >Generate Builds</Button>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxBuildsToShow}</b> {maxBuildsToShow === 1 ? \"Build\" : \"Builds\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Decreasing the number of generated build will decrease build calculation time for large number of builds.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {maxBuildsToShowList.map(v => <MenuItem key={v}\n                onClick={() => buildSettingDispatch({ maxBuildsToShow: v })}>{v} {v === 1 ? \"Build\" : \"Builds\"}</MenuItem>)}\n            </DropdownButton>\n            <DropdownButton disabled={generatingBuilds || !characterKey}\n              title={<span><b>{maxWorkers}</b> {maxWorkers === 1 ? \"Thread\" : \"Threads\"}</span>}>\n              <MenuItem>\n                <Typography variant=\"caption\" color=\"info.main\">\n                  Increasing the number of threads will speed up build time, but will use more CPU power.\n                </Typography>\n              </MenuItem>\n              <Divider />\n              {range(1, defThreads).reverse().map(v => <MenuItem key={v}\n                onClick={() => setMaxWorkers(v)}>{v} {v === 1 ? \"Thread\" : \"Threads\"}</MenuItem>)}\n            </DropdownButton>\n            <Button\n              disabled={!generatingBuilds}\n              color=\"error\"\n              onClick={() => cancelToken.current()}\n              startIcon={<Close />}\n            >Cancel</Button>\n          </ButtonGroup>\n        </Grid>\n        <Grid item>\n          <span>Optimization Target: </span>\n          {<OptimizationTargetSelector\n            optimizationTarget={optimizationTarget}\n            setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n            disabled={!!generatingBuilds}\n          />}\n        </Grid>\n      </Grid>\n\n      {!!characterKey && <BuildAlert {...{ status: buildStatus, characterName, maxBuildsToShow }} />}\n      {tcMode && <Box >\n        <ChartCard disabled={generatingBuilds} chartData={chartData} plotBase={plotBase} setPlotBase={setPlotBase} />\n      </Box>}\n      <CardLight>\n        <CardContent>\n          <Box display=\"flex\" alignItems=\"center\" gap={1} mb={1} >\n            <Typography sx={{ flexGrow: 1 }}>\n              {builds ? <span>Showing <strong>{builds.length}</strong> Builds generated for {characterName}. {!!buildDate && <span>Build generated on: <strong>{(new Date(buildDate)).toLocaleString()}</strong></span>}</span>\n                : <span>Select a character to generate builds.</span>}\n            </Typography>\n            <Button disabled={!builds.length} color=\"error\" onClick={() => buildSettingDispatch({ builds: [], buildDate: 0 })} >Clear Builds</Button>\n          </Box>\n          <Grid container display=\"flex\" spacing={1}>\n            <Grid item><HitModeToggle size=\"small\" /></Grid>\n            <Grid item><ReactionToggle size=\"small\" /></Grid>\n            <Grid item flexGrow={1} />\n            <Grid item><SolidToggleButtonGroup exclusive value={compareData} onChange={(e, v) => characterDispatch({ compareData: v })} size=\"small\">\n              <ToggleButton value={false} disabled={!compareData}>\n                <small>Show New artifact Stats</small>\n              </ToggleButton>\n              <ToggleButton value={true} disabled={compareData}>\n                <small>Compare against equipped artifacts</small>\n              </ToggleButton>\n            </SolidToggleButtonGroup></Grid>\n          </Grid>\n        </CardContent>\n      </CardLight>\n\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n      <OptimizationTargetContext.Provider value={optimizationTarget}>\n        <BuildList buildsArts={buildsArts} characterKey={characterKey} data={data} compareData={compareData} disabled={!!generatingBuilds} pageIdx={currentPageIndex} />\n      </OptimizationTargetContext.Provider>\n      {numPages > 1 && <PageBrowser numPages={numPages} pageIdx={currentPageIndex} setPageIdex={setPageIdx} />}\n    </DataContext.Provider>}\n  </Box>\n}\n\nconst maxArtsToShowPerPage = 5\nfunction BuildList({ buildsArts, characterKey, data, compareData, disabled, pageIdx }: {\n  buildsArts: ICachedArtifact[][],\n  characterKey?: \"\" | CharacterKey,\n  data?: UIData,\n  compareData: boolean,\n  disabled: boolean,\n  pageIdx: number,\n}) {\n  // Memoize the build list because calculating/rendering the build list is actually very expensive, which will cause longer optimization times.\n  const list = useMemo(() => <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n    {buildsArts?.slice(maxArtsToShowPerPage * pageIdx, maxArtsToShowPerPage * (pageIdx + 1))\n      .map((build, index) => characterKey && data && <DataContextWrapper\n        key={index + build.join()}\n        characterKey={characterKey}\n        build={build}\n        oldData={data}\n      >\n        <BuildDisplayItem index={maxArtsToShowPerPage * pageIdx + index} compareBuild={compareData} disabled={disabled} />\n      </DataContextWrapper>\n      )}\n  </Suspense>, [buildsArts, characterKey, data, compareData, disabled, pageIdx])\n  return list\n}\n\ntype Prop = {\n  children: React.ReactNode\n  characterKey: CharacterKey,\n  build: ICachedArtifact[],\n  oldData: UIData,\n}\nfunction DataContextWrapper({ children, characterKey, build, oldData }: Prop) {\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build)\n  const providerValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [teamData, oldData, characterKey])\n  if (!providerValue) return null\n  return <DataContext.Provider value={providerValue}>\n    {children}\n  </DataContext.Provider>\n}\n\nfunction PageBrowser({ numPages, pageIdx, setPageIdex }: {\n  numPages: number,\n  pageIdx: number,\n  setPageIdex: (e: any, n: number) => void\n}) {\n  return <CardDark ><CardContent>\n    <Grid container>\n      <Grid item flexGrow={1}>\n        <Pagination count={numPages} page={pageIdx + 1} onChange={setPageIdex} />\n      </Grid>\n      <Grid item>\n        page {pageIdx + 1} / {numPages}\n        {/* <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} /> */}\n      </Grid>\n    </Grid>\n  </CardContent></CardDark>\n}\n","import { Close, Difference } from \"@mui/icons-material\"\nimport { Button, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport { CharacterContext } from \"../../../../Context/CharacterContext\"\nimport { HitModeToggle, ReactionToggle } from \"../../../../Components/HitModeEditor\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport { DataContext } from \"../../../../Context/DataContext\"\nimport useBoolState from \"../../../../ReactHooks/useBoolState\"\nimport useTeamData from \"../../../../ReactHooks/useTeamData\"\nimport { objectMap } from \"../../../../Util/Util\"\nimport useBuildSetting from \"../TabOptimize/useBuildSetting\"\nimport BuildDisplayItem from \"../TabOptimize/Components/BuildDisplayItem\"\n\nexport default function CompareBuildButton({ artId, weaponId }: { artId?: string, weaponId?: string }) {\n  const { t } = useTranslation(\"page_character\")\n  const [show, onShow, onHide] = useBoolState(false)\n  const { database } = useContext(DatabaseContext)\n  const { character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { data: oldData } = useContext(DataContext)\n  const build = useMemo(() => {\n    const newArt = database.arts.get(artId ?? \"\")\n    const artmap = objectMap(equippedArtifacts, (id, slot) => slot === newArt?.slotKey ? newArt : database.arts.get(id))\n    return Object.values(artmap)\n  }, [database, equippedArtifacts, artId])\n  const teamData = useTeamData(characterKey, mainStatAssumptionLevel, build, weaponId ? database.weapons.get(weaponId) : undefined)\n  const dataProviderValue = useMemo(() => teamData && ({ data: teamData[characterKey]!.target, teamData, oldData }), [characterKey, teamData, oldData])\n  return <>\n    <ModalWrapper open={show} onClose={onHide} containerProps={{ maxWidth: \"xl\" }}>\n      <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={600} />}>\n        {dataProviderValue && <DataContext.Provider value={dataProviderValue}>\n          <BuildDisplayItem compareBuild={true} extraButtons={<><HitModeToggle size=\"small\" /><ReactionToggle size=\"small\" /><Button size='small' color=\"error\" onClick={onHide} ><Close /></Button></>} />\n        </DataContext.Provider>}\n      </Suspense>\n    </ModalWrapper>\n    <Tooltip title={<Typography>{t`tabEquip.compare`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onShow} ><Difference /></Button>\n    </Tooltip>\n  </>\n}\n","import { Box, CardContent, Divider, Grid, Skeleton, Typography } from \"@mui/material\"\nimport { lazy, Suspense, useCallback, useContext, useEffect, useMemo, useReducer } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\"\nimport { artifactFilterConfigs, FilterOption, initialFilterOption } from \"../../../../PageArtifact/ArtifactSort\"\nimport useForceUpdate from \"../../../../ReactHooks/useForceUpdate\"\nimport useMediaQueryUp from \"../../../../ReactHooks/useMediaQueryUp\"\nimport { SlotKey } from \"../../../../Types/consts\"\nimport { filterFunction } from \"../../../../Util/SortByFilters\"\nimport CompareBuildButton from \"./CompareBuildButton\"\nconst numToShowMap = { xs: 6, sm: 6, md: 9, lg: 12, xl: 12 }\n\nconst ArtifactFilterDisplay = lazy(() => import('../../../../Components/Artifact/ArtifactFilterDisplay'))\n\nexport default function ArtifactSwapModal({ onChangeId, slotKey, show, onClose }:\n  { onChangeId: (id: string) => void, slotKey: SlotKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation(\"page_character\")\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n  const filterOptionReducer = useCallback((state, action) => ({ ...state, ...action, slotKeys: [slotKey] }), [slotKey],)\n\n  const [filterOption, filterOptionDispatch]: [FilterOption, (action: any) => void] = useReducer(filterOptionReducer, { ...initialFilterOption(), slotKeys: [slotKey] })\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => { return database.arts.followAny(forceUpdate) }, [database, forceUpdate])\n\n  const brPt = useMediaQueryUp()\n\n  const filterConfigs = useMemo(() => artifactFilterConfigs(), [])\n  const artIdList = useMemo(() => {\n    const filterFunc = filterFunction(filterOption, filterConfigs)\n    return dbDirty && database.arts.values.filter(filterFunc).map(art => art.id).slice(0, numToShowMap[brPt])\n  }, [dbDirty, database, filterConfigs, filterOption, brPt])\n\n  return <ModalWrapper open={show} onClose={onClose} containerProps={{ maxWidth: \"xl\" }} >\n    <CardDark>\n      <CardContent sx={{ py: 1, display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Typography variant=\"h6\">{slotKey ? <ImgIcon src={Assets.slot[slotKey]} /> : null} {t`tabEquip.swapArt`}</Typography>\n        <CloseButton onClick={onClose} />\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={200} />}>\n          <ArtifactFilterDisplay filterOption={filterOption} filterOptionDispatch={filterOptionDispatch} disableSlotFilter />\n        </Suspense>\n        <Box mt={1}>\n          <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={300} />}>\n            <Grid container spacing={1} columns={{ xs: 2, md: 3, lg: 4 }}>\n              {artIdList.map(id =>\n                <Grid item key={id} xs={1} >\n                  <ArtifactCard\n                    artifactId={id}\n                    extraButtons={<CompareBuildButton artId={id} />}\n                    onClick={clickHandler}\n                  />\n                </Grid>)}\n            </Grid>\n          </Suspense>\n        </Box>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Box, CardContent, Divider, Grid, TextField, ToggleButton, Typography } from \"@mui/material\"\nimport { ChangeEvent, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../../../../Assets/Assets\"\nimport CardDark from \"../../../../Components/Card/CardDark\"\nimport CloseButton from \"../../../../Components/CloseButton\"\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\"\nimport ModalWrapper from \"../../../../Components/ModalWrapper\"\nimport SolidToggleButtonGroup from \"../../../../Components/SolidToggleButtonGroup\"\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\"\nimport WeaponSheet from \"../../../../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../../../../Database/Database\"\nimport WeaponCard from \"../../../../PageWeapon/WeaponCard\"\nimport useForceUpdate from '../../../../ReactHooks/useForceUpdate'\nimport usePromise from \"../../../../ReactHooks/usePromise\"\nimport { allRarities, Rarity, WeaponTypeKey } from \"../../../../Types/consts\"\nimport { handleMultiSelect } from \"../../../../Util/MultiSelect\"\nimport { filterFunction, sortFunction } from '../../../../Util/SortByFilters'\nimport { weaponFilterConfigs, weaponSortConfigs } from '../../../../Util/WeaponSort'\nimport CompareBuildButton from \"./CompareBuildButton\"\n\nconst rarityHandler = handleMultiSelect([...allRarities])\n\nexport default function WeaponSwapModal({ onChangeId, weaponTypeKey, show, onClose }: { onChangeId: (id: string) => void, weaponTypeKey: WeaponTypeKey, show: boolean, onClose: () => void }) {\n  const { t } = useTranslation([\"page_character\", \"page_weapon\", \"weaponNames_gen\"])\n  const { database } = useContext(DatabaseContext)\n  const clickHandler = useCallback((id: string) => {\n    onChangeId(id)\n    onClose()\n  }, [onChangeId, onClose])\n\n  const [dbDirty, forceUpdate] = useForceUpdate()\n  useEffect(() => database.weapons.followAny(forceUpdate), [forceUpdate, database])\n\n  const weaponSheets = usePromise(() => WeaponSheet.getAll, [])\n\n  const filterConfigs = useMemo(() => weaponSheets && weaponFilterConfigs(weaponSheets), [weaponSheets])\n  const sortConfigs = useMemo(() => weaponSheets && weaponSortConfigs(weaponSheets), [weaponSheets])\n\n  const [rarity, setRarity] = useState<Rarity[]>([5, 4, 3])\n\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const deferredSearchTerm = useDeferredValue(searchTerm)\n\n  const weaponIdList = useMemo(() => (filterConfigs && sortConfigs && dbDirty && database.weapons.values\n    .filter(filterFunction({ weaponType: weaponTypeKey, rarity, name: deferredSearchTerm }, filterConfigs))\n    .sort(sortFunction(\"level\", false, sortConfigs))\n    .map(weapon => weapon.id)) ?? []\n    , [dbDirty, database, filterConfigs, sortConfigs, rarity, weaponTypeKey, deferredSearchTerm])\n\n  return <ModalWrapper open={show} onClose={onClose} >\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <Typography variant=\"h6\">{weaponTypeKey ? <ImgIcon src={Assets.weaponTypes[weaponTypeKey]} /> : null} {t`page_character:tabEquip.swapWeapon`}</Typography>\n          </Grid>\n          <Grid item>\n            <CloseButton onClick={onClose} />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent>\n        <Grid container spacing={1} mb={1}>\n          <Grid item>\n            <SolidToggleButtonGroup sx={{ height: \"100%\" }} value={rarity} size=\"small\">\n              {allRarities.map(star => <ToggleButton key={star} value={star} onClick={() => setRarity(rarityHandler(rarity, star))}>\n                <Box display=\"flex\" gap={1}><strong>{star}</strong><StarsDisplay stars={1} /></Box>\n              </ToggleButton>)}\n            </SolidToggleButtonGroup>\n          </Grid>\n          <Grid item flexGrow={1}>\n            <TextField\n              autoFocus\n              size=\"small\"\n              value={searchTerm}\n              onChange={(e: ChangeEvent<HTMLTextAreaElement>) => setSearchTerm(e.target.value)}\n              label={t(\"page_weapon:weaponName\")}\n              sx={{ height: \"100%\" }}\n              InputProps={{\n                sx: { height: \"100%\" }\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid container spacing={1}>\n          {weaponIdList.map(weaponId =>\n            <Grid item key={weaponId} xs={6} sm={6} md={4} lg={3} >\n              <WeaponCard\n                weaponId={weaponId}\n                onClick={clickHandler}\n                extraButtons={<CompareBuildButton weaponId={weaponId} />}\n              />\n            </Grid>)}\n        </Grid>\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { Settings, SwapHoriz } from '@mui/icons-material';\nimport { Box, Button, CardContent, Divider, Grid, ListItem, Stack, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { useTheme } from \"@mui/system\";\nimport { lazy, Suspense, useCallback, useContext, useDeferredValue, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport SetEffectDisplay from '../../../../Components/Artifact/SetEffectDisplay';\nimport SlotNameWithIcon from '../../../../Components/Artifact/SlotNameWIthIcon';\nimport SubstatToggle from '../../../../Components/Artifact/SubstatToggle';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport DocumentDisplay from \"../../../../Components/DocumentDisplay\";\nimport { BasicFieldDisplay, FieldDisplayList } from '../../../../Components/FieldDisplay';\nimport ModalWrapper from '../../../../Components/ModalWrapper';\nimport PercentBadge from '../../../../Components/PercentBadge';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Artifact from '../../../../Data/Artifacts/Artifact';\nimport { ArtifactSheet } from '../../../../Data/Artifacts/ArtifactSheet';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCard from '../../../../PageArtifact/ArtifactCard';\nimport WeaponCard from '../../../../PageWeapon/WeaponCard';\nimport useBoolState from '../../../../ReactHooks/useBoolState';\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport usePromise from '../../../../ReactHooks/usePromise';\nimport { initCharMeta } from '../../../../stateInit';\nimport { allSubstatKeys } from '../../../../Types/artifact';\nimport { allSlotKeys, SlotKey, WeaponTypeKey } from '../../../../Types/consts';\nimport { IFieldDisplay } from '../../../../Types/fieldDisplay';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport ArtifactSwapModal from './ArtifactSwapModal';\nimport WeaponSwapModal from './WeaponSwapModal';\n\nconst WeaponEditor = lazy(() => import('../../../../PageWeapon/WeaponEditor'))\n\nexport default function EquipmentSection() {\n  const { character: { equippedWeapon, key: characterKey }, characterSheet } = useContext(CharacterContext)\n  const { buildSetting: { mainStatAssumptionLevel } } = useBuildSetting(characterKey)\n  const { teamData, data } = useContext(DataContext)\n  const weaponSheet = teamData[characterKey]?.weaponSheet\n  const [weaponId, setweaponId] = useState(\"\")\n  const showWeapon = useCallback(() => setweaponId(equippedWeapon), [equippedWeapon],)\n  const hideWeapon = useCallback(() => setweaponId(\"\"), [])\n\n  //triggers when character swap weapons\n  useEffect(() => {\n    if (weaponId && weaponId !== equippedWeapon)\n      setweaponId(equippedWeapon)\n  }, [weaponId, equippedWeapon])\n\n  const theme = useTheme();\n  const breakpoint = useMediaQuery(theme.breakpoints.up('lg'));\n\n  const weaponDoc = useMemo(() => weaponSheet && weaponSheet.document.length > 0 && <CardLight><CardContent><DocumentDisplay sections={weaponSheet.document} /></CardContent></CardLight>, [weaponSheet])\n  const [{ rvFilter }] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const deferredRvFilter = useDeferredValue(rvFilter)\n  const deferredRvSet = useMemo(() => new Set(deferredRvFilter), [deferredRvFilter])\n  return <Box >\n    <Suspense fallback={false}>\n      <WeaponEditor\n        weaponId={weaponId}\n        footer\n        onClose={hideWeapon}\n        extraButtons={<LargeWeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />}\n      />\n    </Suspense>\n    <Grid container spacing={1}>\n      {breakpoint && <Grid item xs={12} md={12} lg={3} xl={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        {weaponDoc && weaponDoc}\n        <ArtifactSectionCard />\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} xl={9} container spacing={1}>\n        <Grid item xs={12} sm={6} md={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <WeaponCard weaponId={equippedWeapon} onEdit={showWeapon} canEquip extraButtons={<WeaponSwapButton weaponTypeKey={characterSheet.weaponTypeKey} />} />\n        </Grid>\n        {allSlotKeys.map(slotKey => <Grid item xs={12} sm={6} md={4} key={slotKey} >\n          {!!data.get(input.art[slotKey].id).value ?\n            <ArtifactCard artifactId={data.get(input.art[slotKey].id).value} mainStatAssumptionLevel={mainStatAssumptionLevel} effFilter={deferredRvSet}\n              extraButtons={<ArtifactSwapButton slotKey={slotKey} />} editor canExclude canEquip /> :\n            <ArtSwapCard slotKey={slotKey} />}\n        </Grid>)}\n      </Grid>\n      {!breakpoint && <Grid item xs={12} md={12} xl={3} container spacing={1} >\n        {weaponDoc && <Grid item xs={12} md={6} lg={4}>{weaponDoc}</Grid>}\n        <Grid item xs={12} md={6} lg={4} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <ArtifactSectionCard />\n        </Grid>\n      </Grid>}\n    </Grid>\n  </Box>\n}\nfunction ArtSwapCard({ slotKey }: { slotKey: SlotKey }) {\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <CardLight sx={{ height: \"100%\", width: \"100%\", minHeight: 300, display: \"flex\", flexDirection: \"column\" }}>\n    <CardContent>\n      <Typography><SlotNameWithIcon slotKey={slotKey} /></Typography>\n    </CardContent>\n    <Divider />\n    <Box sx={{\n      flexGrow: 1,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }}\n    >\n      <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\n      <Button onClick={onOpen} color=\"info\" sx={{ borderRadius: \"1em\", }}>\n        <SwapHoriz sx={{ height: 100, width: 100 }} />\n      </Button>\n    </Box>\n  </CardLight>\n}\nfunction WeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapWeapon`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\n  </>\n}\nfunction LargeWeaponSwapButton({ weaponTypeKey }: { weaponTypeKey: WeaponTypeKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" onClick={onOpen} startIcon={<SwapHoriz />} >{t`tabEquip.swapWeapon`}</Button>\n    <WeaponSwapModal weaponTypeKey={weaponTypeKey} onChangeId={id => database.weapons.set(id, { location: characterKey })} show={show} onClose={onClose} />\n  </>\n}\nfunction ArtifactSwapButton({ slotKey }: { slotKey: SlotKey }) {\n  const { t } = useTranslation(\"page_character\")\n  const { character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n  const [show, onOpen, onClose] = useBoolState()\n  return <>\n    <Tooltip title={<Typography>{t`tabEquip.swapArt`}</Typography>} placement=\"top\" arrow>\n      <Button color=\"info\" size=\"small\" onClick={onOpen} ><SwapHoriz /></Button>\n    </Tooltip>\n    <ArtifactSwapModal slotKey={slotKey} show={show} onClose={onClose} onChangeId={id => database.arts.set(id, { location: characterKey })} />\n  </>\n}\nfunction ArtifactSectionCard() {\n  const { t } = useTranslation([\"page_character\", \"artifact\"])\n  const { database } = useContext(DatabaseContext)\n  const { character, character: { key: characterKey, equippedArtifacts } } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const hasEquipped = useMemo(() => !!Object.values(equippedArtifacts).filter(i => i).length, [equippedArtifacts])\n  const unequipArts = useCallback(() => {\n    if (!character) return\n    if (!window.confirm(\"Do you want to move all currently equipped artifacts to inventory?\")) return\n    Object.values(equippedArtifacts).forEach(aid => database.arts.set(aid, { location: \"\" }))\n  }, [character, database, equippedArtifacts])\n\n  const setEffects = useMemo(() => artifactSheets && ArtifactSheet.setEffects(artifactSheets, data), [artifactSheets, data])\n  const [{ rvFilter }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  const setRVFilter = useCallback(rvFilter => setCharMeta({ rvFilter }), [setCharMeta],)\n\n  const [show, onShow, onHide] = useBoolState()\n  const deferredrvFilter = useDeferredValue(rvFilter)\n  const { rvField, rvmField } = useMemo(() => {\n    const { currentEfficiency, currentEfficiency_, maxEfficiency, maxEfficiency_ } = Object.values(equippedArtifacts).reduce((a, artid) => {\n      const art = database.arts.get(artid)\n      if (art) {\n        const { currentEfficiency, maxEfficiency } = Artifact.getArtifactEfficiency(art, new Set(deferredrvFilter))\n        const { currentEfficiency: currentEfficiency_, maxEfficiency: maxEfficiency_ } = Artifact.getArtifactEfficiency(art, new Set(allSubstatKeys))\n        a.currentEfficiency = a.currentEfficiency + currentEfficiency\n        a.maxEfficiency = a.maxEfficiency + maxEfficiency\n\n        a.currentEfficiency_ = a.currentEfficiency_ + currentEfficiency_\n        a.maxEfficiency_ = a.maxEfficiency_ + maxEfficiency_\n      }\n      return a\n    }, { currentEfficiency: 0, currentEfficiency_: 0, maxEfficiency: 0, maxEfficiency_: 0 })\n    const rvField: IFieldDisplay = {\n      text: t`artifact:editor.curSubEff`,\n      value: !(currentEfficiency - currentEfficiency_) ? <PercentBadge value={currentEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={currentEfficiency} max={4500} valid /> / <PercentBadge value={currentEfficiency_} max={4500} valid /></span>\n    }\n    const rvmField: IFieldDisplay = {\n      text: t`artifact:editor.maxSubEff`,\n      canShow: () => !!(currentEfficiency_ - maxEfficiency_),\n      value: !(maxEfficiency - maxEfficiency_) ? <PercentBadge value={maxEfficiency} max={4500} valid /> :\n        <span><PercentBadge value={maxEfficiency} max={4500} valid /> / <PercentBadge value={maxEfficiency_} max={4500} valid /></span>\n    }\n    return { rvField, rvmField }\n  }, [t, deferredrvFilter, equippedArtifacts, database])\n\n  return <CardLight>\n    {hasEquipped && <Button color=\"error\" onClick={unequipArts} fullWidth sx={{ borderBottomRightRadius: 0, borderBottomLeftRadius: 0 }}>{t`tabEquip.unequipArts`}</Button>}\n    <CardContent >\n      <Stack spacing={1}>\n        <CardDark >\n          <Button fullWidth color=\"info\" startIcon={<Settings />} sx={{ borderBottomLeftRadius: 0, borderBottomRightRadius: 0 }} onClick={onShow}>RV Filter</Button>\n          <ModalWrapper open={show} onClose={onHide}>\n            <CardDark>\n              <CardContent>\n                <SubstatToggle selectedKeys={rvFilter} onChange={setRVFilter} />\n              </CardContent>\n            </CardDark>\n          </ModalWrapper>\n          <FieldDisplayList >\n            <BasicFieldDisplay field={rvField} component={ListItem} />\n            {rvmField?.canShow?.(data) && <BasicFieldDisplay field={rvmField} component={ListItem} />}\n          </FieldDisplayList>\n        </CardDark>\n        {artifactSheets && setEffects && Object.entries(setEffects).flatMap(([setKey, setNumKeyArr]) =>\n          setNumKeyArr.map(setNumKey => <CardDark key={setKey + setNumKey} sx={{ display: \"flex\", flexDirection: \"column\", gap: 2 }}>\n            <SetEffectDisplay key={setKey + setNumKey} setKey={setKey} setNumKey={setNumKey} />\n          </CardDark>)\n        )}\n      </Stack>\n    </CardContent>\n  </CardLight>\n}\n","import { Favorite, FavoriteBorder } from \"@mui/icons-material\";\nimport { Badge, Box, CardActionArea, CardContent, Chip, Grid, IconButton, Stack, Typography } from \"@mui/material\";\nimport { useCallback, useContext, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Assets from \"../../../../Assets/Assets\";\nimport ArtifactCardNano from \"../../../../Components/Artifact/ArtifactCardNano\";\nimport CardLight from \"../../../../Components/Card/CardLight\";\nimport CharacterCardPico from \"../../../../Components/Character/CharacterCardPico\";\nimport StatDisplayComponent from \"../../../../Components/Character/StatDisplayComponent\";\nimport ImgIcon from \"../../../../Components/Image/ImgIcon\";\nimport SqBadge from \"../../../../Components/SqBadge\";\nimport { StarsDisplay } from \"../../../../Components/StarDisplay\";\nimport { uncoloredEleIcons } from \"../../../../Components/StatIcon\";\nimport WeaponCardNano from \"../../../../Components/Weapon/WeaponCardNano\";\nimport { CharacterContext } from \"../../../../Context/CharacterContext\";\nimport { DataContext } from \"../../../../Context/DataContext\";\nimport { TalentSheetElementKey } from \"../../../../Data/Characters/CharacterSheet\";\nimport { getLevelString } from \"../../../../Data/LevelData\";\nimport { uiInput as input } from \"../../../../Formula\";\nimport useCharacterReducer from \"../../../../ReactHooks/useCharacterReducer\";\nimport useDBState from \"../../../../ReactHooks/useDBState\";\nimport { initCharMeta } from \"../../../../stateInit\";\nimport { allSlotKeys, Ascension, ElementKey } from \"../../../../Types/consts\";\nimport { range } from \"../../../../Util/Util\";\nimport EquipmentSection from \"./EquipmentSection\";\n\nexport default function TabOverview() {\n  const scrollRef = useRef<HTMLDivElement>()\n  const onScroll = useCallback(() => scrollRef?.current?.scrollIntoView?.({ behavior: \"smooth\" }), [scrollRef])\n\n  return <Stack spacing={1}>\n    <Grid container spacing={1} sx={{ justifyContent: \"center\" }}>\n      <Grid item xs={8} sm={5} md={4} lg={2.3}  >\n        <CharacterProfileCard />\n      </Grid>\n      <Grid item xs={12} sm={7} md={8} lg={9.7} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <EquipmentRow onClick={onScroll} />\n        <CardLight sx={{ flexGrow: 1, p: 1 }}>\n          <StatDisplayComponent />\n        </CardLight>\n      </Grid>\n    </Grid >\n    <Box ref={scrollRef}>\n      <EquipmentSection />\n    </Box>\n  </Stack>\n}\nfunction EquipmentRow({ onClick }: { onClick: () => void }) {\n  const { character: { equippedWeapon } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n\n  return <Grid container spacing={1} columns={{ xs: 2, sm: 2, md: 3, lg: 6, xl: 6 }}>\n    <Grid item xs={1}>\n      <WeaponCardNano weaponId={equippedWeapon} BGComponent={CardLight} onClick={onClick} />\n    </Grid>\n    {allSlotKeys.map(slotKey =>\n      <Grid item key={slotKey} xs={1} >\n        <ArtifactCardNano artifactId={data.get(input.art[slotKey].id).value} slotKey={slotKey} BGComponent={CardLight} onClick={onClick} />\n      </Grid>)}\n  </Grid>\n}\n/* Image card with star and name and level */\nfunction CharacterProfileCard() {\n  const { characterSheet, character: { key: characterKey, team } } = useContext(CharacterContext)\n  const { data, } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(characterKey)\n  const navigate = useNavigate()\n  const charEle = data.get(input.charEle).value as ElementKey\n  const weaponTypeKey = characterSheet.weaponTypeKey\n  const level = data.get(input.lvl).value\n  const ascension = data.get(input.asc).value as Ascension\n  const constellation = data.get(input.constellation).value\n  const tlvl = {\n    auto: data.get(input.total.auto).value,\n    skill: data.get(input.total.skill).value,\n    burst: data.get(input.total.burst).value,\n  }\n  const tBoost = {\n    auto: data.get(input.bonus.auto).value,\n    skill: data.get(input.bonus.skill).value,\n    burst: data.get(input.bonus.burst).value,\n  }\n  const [{ favorite }, setCharMeta] = useDBState(`charMeta_${characterKey}`, initCharMeta)\n  return <CardLight sx={{ height: \"100%\" }} >\n    <Box sx={{ position: \"relative\" }}>\n      <Box sx={{ position: \"absolute\", width: \"100%\", height: \"100%\" }}>\n        <Typography variant=\"h6\" sx={{ position: \"absolute\", left: \"50%\", bottom: 0, transform: \"translate(-50%, -50%)\", opacity: 0.75 }}>\n          <StarsDisplay stars={characterSheet.rarity} colored />\n        </Typography>\n        <Box sx={{ position: \"absolute\", left: \"50%\", bottom: \"5%\", transform: \"translate(-50%, -50%)\", opacity: 0.85, width: \"100%\", display: \"flex\", justifyContent: \"center\", px: 1 }}>\n          <Chip color={charEle} sx={{ height: \"auto\" }}\n            label={<Typography variant=\"h6\" sx={{ display: \"flex\", gap: 1, alignItems: \"center\" }} >\n              {uncoloredEleIcons[charEle]}\n              <Box sx={{ whiteSpace: \"normal\", textAlign: \"center\" }}>{characterSheet.name}</Box>\n              <ImgIcon src={Assets.weaponTypes?.[weaponTypeKey]} />\n            </Typography>} />\n        </Box>\n        <Box sx={{ position: \"absolute\", left: 0, top: 0 }}>\n          <IconButton sx={{ p: 1 }} color=\"error\" onClick={() => setCharMeta({ favorite: !favorite })}>\n            {favorite ? <Favorite /> : <FavoriteBorder />}\n          </IconButton>\n        </Box>\n        <Typography sx={{ p: 1, position: \"absolute\", right: 0, top: 0, opacity: 0.8 }}>\n          <SqBadge>{getLevelString(level, ascension)}</SqBadge>\n        </Typography>\n      </Box>\n      <Box src={characterSheet.cardImg} component=\"img\" width=\"100%\" height=\"auto\" />\n    </Box>\n    <CardContent>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"talent\")}>\n        <Grid container spacing={1} mt={-1}>\n          {([\"auto\", \"skill\", \"burst\"] as TalentSheetElementKey[]).map(tKey =>\n            <Grid item xs={4} key={tKey}>\n              <Badge badgeContent={tlvl[tKey]} color={tBoost[tKey] ? \"info\" : \"secondary\"}\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  \"& > .MuiBadge-badge\": {\n                    fontSize: \"1.25em\",\n                    padding: \".25em .4em\",\n                    borderRadius: \".5em\",\n                    lineHeight: 1,\n                    height: \"1.25em\"\n                  }\n                }}>\n                <Box component=\"img\" src={characterSheet.getTalentOfKey(tKey, charEle)?.img} width=\"100%\" height=\"auto\" />\n              </Badge>\n            </Grid>)}\n        </Grid>\n      </CardActionArea>\n      <Typography sx={{ textAlign: \"center\", mt: 1 }} variant=\"h6\">{characterSheet.constellationName}</Typography>\n      <Grid container spacing={1}>\n        {range(1, 6).map(i =>\n          <Grid item xs={4} key={i}>\n            <CardActionArea onClick={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}>\n              <Box component=\"img\" src={characterSheet.getTalentOfKey(`constellation${i}` as TalentSheetElementKey, charEle)?.img}\n                sx={{\n                  ...(constellation >= i ? {} : { filter: \"brightness(50%)\" })\n                }}\n                width=\"100%\" height=\"auto\" />\n            </CardActionArea>\n          </Grid>)}\n      </Grid>\n      <CardActionArea sx={{ p: 1 }} onClick={() => navigate(\"teambuffs\")}>\n        <Grid container columns={3} spacing={1}>\n          {range(0, 2).map(i => <Grid key={i} item xs={1} height=\"100%\"><CharacterCardPico characterKey={team[i]} index={i} /></Grid>)}\n        </Grid>\n      </CardActionArea>\n    </CardContent>\n  </CardLight >\n}\n","import { Box, CardActionArea, CardContent, Grid, MenuItem, Typography, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport { CharacterContext } from \"../../../Context/CharacterContext\";\nimport CardDark from \"../../../Components/Card/CardDark\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport ConditionalWrapper from \"../../../Components/ConditionalWrapper\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport DropdownButton from \"../../../Components/DropdownMenu/DropdownButton\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport { TalentSheetElementKey } from \"../../../Data/Characters/CharacterSheet\";\nimport { DataContext } from '../../../Context/DataContext';\nimport { uiInput as input } from \"../../../Formula\";\nimport { NumNode } from \"../../../Formula/type\";\nimport { NodeDisplay } from '../../../Formula/uiData';\nimport useCharacterReducer from \"../../../ReactHooks/useCharacterReducer\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { DocumentSection } from \"../../../Types/sheet\";\nimport { range } from \"../../../Util/Util\";\n\nconst talentSpacing = {\n  xs: 12,\n  sm: 6,\n  md: 4\n}\n\nexport default function CharacterTalentPane() {\n  const { character, characterSheet } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n  const characterDispatch = useCharacterReducer(character.key)\n  const skillBurstList = [[\"auto\", \"Normal/Charged Attack\"], [\"skill\", \"Elemental Skill\"], [\"burst\", \"Elemental Burst\"]] as [TalentSheetElementKey, string][]\n  const passivesList: [tKey: TalentSheetElementKey, tText: string, asc: number][] = [[\"passive1\", \"Unlocked at Ascension 1\", 1], [\"passive2\", \"Unlocked at Ascension 4\", 4], [\"passive3\", \"Unlocked by Default\", 0]]\n  const charEle = data.get(input.charEle).value as ElementKey | undefined\n  const ascension = data.get(input.asc).value\n  const constellation = data.get(input.constellation).value\n\n  const theme = useTheme();\n  const grlg = useMediaQuery(theme.breakpoints.up('lg'));\n  const constellationCards = useMemo(() => range(1, 6).map(i =>\n    <SkillDisplayCard\n      talentKey={`constellation${i}` as TalentSheetElementKey}\n      subtitle={`Constellation Lv. ${i}`}\n      onClickTitle={() => characterDispatch({ constellation: i === constellation ? i - 1 : i })}\n    />), [constellation, characterDispatch])\n  return <>\n    <ReactionDisplay />\n    <Grid container spacing={1}>\n      {/* constellations for 4column */}\n      {grlg && <Grid item xs={12} md={12} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }} >\n        <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        {constellationCards.map((c, i) => <Box key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} >{c}</Box>)}\n      </Grid>}\n      <Grid item xs={12} md={12} lg={9} container spacing={1} >\n        {/* auto, skill, burst */}\n        {skillBurstList.map(([tKey, tText]) =>\n          <Grid item key={tKey} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>)}\n        {!!characterSheet.getTalentOfKey(\"sprint\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"sprint\"\n            subtitle=\"Alternative Sprint\"\n          />\n        </Grid>}\n        {!!characterSheet.getTalentOfKey(\"passive\", charEle) && <Grid item {...talentSpacing} >\n          <SkillDisplayCard\n            talentKey=\"passive\"\n            subtitle=\"Passive\"\n          />\n        </Grid>}\n        {/* passives */}\n        {passivesList.map(([tKey, tText, asc]) => {\n          let enabled = ascension >= asc\n          if (!characterSheet.getTalentOfKey(tKey, charEle)) return null\n          return <Grid item key={tKey} style={{ opacity: enabled ? 1 : 0.5 }} {...talentSpacing} >\n            <SkillDisplayCard\n              talentKey={tKey}\n              subtitle={tText}\n            />\n          </Grid>\n        })}\n      </Grid>\n      {/* constellations for < 4 columns */}\n      {!grlg && <Grid item xs={12} md={12} lg={3} container spacing={1} >\n        <Grid item xs={12}>\n          <CardLight><CardContent><Typography variant=\"h6\" sx={{ textAlign: \"center\" }}>Constellation Lv. {constellation}</Typography></CardContent></CardLight>\n        </Grid>\n        {constellationCards.map((c, i) => <Grid item key={i} sx={{ opacity: constellation >= (i + 1) ? 1 : 0.5 }} {...talentSpacing} >{c}</Grid>)}\n      </Grid>}\n    </Grid>\n  </>\n}\nfunction ReactionDisplay() {\n  const { data } = useContext(DataContext)\n  const reaction = data.getDisplay().reaction as { [key: string]: NodeDisplay }\n  return <CardLight>\n    <CardContent>\n      <Grid container spacing={1}>\n        {Object.entries(reaction).map(([key, node]) => {\n          return <Grid item key={key}>\n            <CardDark><CardContent sx={{ p: 1, \"&:last-child\": { pb: 1 } }}>\n              <NodeFieldDisplay node={node} />\n            </CardContent></CardDark>\n          </Grid>\n        })}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\n\nconst talentLimits = [1, 1, 2, 4, 6, 8, 10]\ntype SkillDisplayCardProps = {\n  talentKey: TalentSheetElementKey,\n  subtitle: string,\n  onClickTitle?: (any) => any\n}\nfunction SkillDisplayCard({ talentKey, subtitle, onClickTitle }: SkillDisplayCardProps) {\n  const { character: { talent }, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { data } = useContext(DataContext)\n\n  const actionWrapeprFunc = useCallback(\n    children => <CardActionArea onClick={onClickTitle}>{children}</CardActionArea>,\n    [onClickTitle],\n  )\n\n  const setTalentLevel = useCallback((tKey: TalentSheetElementKey, newTalentLevelKey: number) =>\n    characterDispatch({ talent: { ...talent, [tKey]: newTalentLevelKey } }), [talent, characterDispatch])\n\n  let header: Displayable | null = null\n\n  if (talentKey in talent) {\n    const levelBoost = data.get(input.bonus[talentKey] as NumNode).value\n    const level = data.get(input.total[talentKey]).value\n    const asc = data.get(input.asc).value\n\n    header = <DropdownButton fullWidth title={`Talent Lv. ${level}`} color={levelBoost ? \"info\" : \"primary\"} sx={{ borderRadius: 0 }}>\n      {range(1, talentLimits[asc]).map(i =>\n        <MenuItem key={i} selected={talent[talentKey] === (i)} disabled={talent[talentKey] === (i)} onClick={() => setTalentLevel(talentKey, i)}>Talent Lv. {i + levelBoost}</MenuItem>)}\n    </DropdownButton>\n  }\n  const talentSheet = characterSheet.getTalentOfKey(talentKey, data.get(input.charEle).value as ElementKey | undefined)\n\n  // Hide header if the header matches the current talent\n  const hideHeader = (section: DocumentSection): boolean => {\n    let headerAction = section.header?.action\n    if (headerAction && (typeof headerAction !== \"string\")) {\n      const key: string = headerAction.props.children.props.key18\n      return key.includes(talentKey)\n    }\n    return false\n  }\n\n  return <CardLight sx={{ height: \"100%\" }}>\n    {header}\n    <CardContent>\n      <ConditionalWrapper condition={!!onClickTitle} wrapper={actionWrapeprFunc} >\n        <Grid container sx={{ flexWrap: \"nowrap\" }}>\n          <Grid item>\n            <Box component=\"img\" src={talentSheet?.img} sx={{ width: 60, height: \"auto\" }} />\n          </Grid>\n          <Grid item flexGrow={1} sx={{ pl: 1 }}>\n            <Typography variant=\"h6\">{talentSheet?.name}</Typography>\n            <Typography variant=\"subtitle1\">{subtitle}</Typography>\n          </Grid>\n        </Grid>\n      </ConditionalWrapper>\n      {/* Display document sections */}\n      {talentSheet?.sections ? <DocumentDisplay sections={talentSheet.sections} hideDesc hideHeader={hideHeader} /> : null}\n    </CardContent>\n  </CardLight>\n}\n","import { PersonAdd } from \"@mui/icons-material\";\nimport { CardContent, CardHeader, Divider, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useContext, useMemo } from 'react';\nimport { useTranslation } from \"react-i18next\";\nimport CardLight from \"../../../Components/Card/CardLight\";\nimport CharacterAutocomplete from \"../../../Components/Character/CharacterAutocomplete\";\nimport CharacterCard from \"../../../Components/Character/CharacterCard\";\nimport DocumentDisplay from \"../../../Components/DocumentDisplay\";\nimport { NodeFieldDisplay } from \"../../../Components/FieldDisplay\";\nimport InfoTooltip from \"../../../Components/InfoTooltip\";\nimport { CharacterContext, CharacterContextObj } from \"../../../Context/CharacterContext\";\nimport { DataContext, dataContextObj } from \"../../../Context/DataContext\";\nimport { ArtifactSheet } from \"../../../Data/Artifacts/ArtifactSheet\";\nimport { resonanceSheets } from \"../../../Data/Resonance\";\nimport { uiInput as input } from \"../../../Formula\";\nimport { NodeDisplay } from \"../../../Formula/uiData\";\nimport useCharSelectionCallback from \"../../../ReactHooks/useCharSelectionCallback\";\nimport usePromise from \"../../../ReactHooks/usePromise\";\nimport { ElementKey } from \"../../../Types/consts\";\nimport { objPathValue, range } from \"../../../Util/Util\";\n\nexport default function TabTeambuffs() {\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1} alignItems=\"stretch\">\n    <Grid container spacing={1}>\n      <Grid item xs={12} md={6} lg={3} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <TeamBuffDisplay />\n        <ResonanceDisplay />\n      </Grid>\n      {range(0, 2).map(i => <Grid item xs={12} md={6} lg={3} key={i}>\n        <TeammateDisplay index={i} />\n      </Grid>)}\n    </Grid>\n  </Box>\n}\nexport function TeamBuffDisplay() {\n  const { data, oldData } = useContext(DataContext)\n  const teamBuffs = data.getTeamBuff()\n  const nodes: Array<[string[], NodeDisplay<number>]> = []\n  Object.entries(teamBuffs.total ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"total\", key], node]))\n  Object.entries(teamBuffs.premod ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && node.value !== 0 && nodes.push([[\"premod\", key], node]))\n  Object.entries(teamBuffs.enemy ?? {}).forEach(([key, node]) =>\n    !node.isEmpty && typeof node.value === \"number\" && node.value !== 0 && nodes.push([[\"enemy\", key], node as NodeDisplay<number>]))\n  if (!nodes.length) return null\n  return <CardLight>\n    <CardContent>\n      <Typography>Team Buffs</Typography>\n    </CardContent>\n    <Divider />\n    <CardContent>\n      <Grid container>\n        {nodes.map(([path, n], i) => n && <Grid item xs={12} key={(n.info.key ?? \"\") + i} >\n          <NodeFieldDisplay node={n} oldValue={objPathValue(oldData?.getTeamBuff(), path)?.value} />\n        </Grid>)}\n      </Grid>\n    </CardContent>\n  </CardLight>\n}\nfunction ResonanceDisplay() {\n  const { data } = useContext(DataContext)\n  return <>\n    {resonanceSheets.map((res, i) => {\n      const icon = <InfoTooltip title={<Typography>{res.desc}</Typography>} />\n      const title = <span>{res.name} {icon}</span>\n      return <CardLight key={i} sx={{ opacity: res.canShow(data) ? 1 : 0.5, }}>\n        <CardHeader title={title} action={res.icon} titleTypographyProps={{ variant: \"subtitle2\" }} />\n        {res.canShow(data) && <Divider />}\n        {res.canShow(data) && <CardContent>\n          <DocumentDisplay sections={res.sections} teamBuffOnly hideDesc />\n        </CardContent>}\n      </CardLight>\n    })}\n  </>\n}\nfunction TeammateDisplay({ index }: { index: number }) {\n  const { teamData } = useContext(DataContext)\n  const { t } = useTranslation(\"page_character\")\n  const { character: active, character: { key: activeCharacterKey }, characterDispatch } = useContext(CharacterContext)\n  const teamMateKey = active.team[index]\n  const onClickHandler = useCharSelectionCallback()\n\n  const dataBundle = teamData[teamMateKey]\n  const teammateCharacterContext: CharacterContextObj | undefined = useMemo(() => dataBundle && {\n    character: { ...dataBundle.character, conditional: active.teamConditional[teamMateKey] ?? {} },\n    characterSheet: dataBundle.characterSheet,\n    characterDispatch: (state) => {\n      if (!teamMateKey) return\n      if (!(\"conditional\" in state)) return\n      const { conditional } = state\n      characterDispatch({ type: \"teamConditional\", teamMateKey: teamMateKey, conditional })\n    }\n  }, [active, teamMateKey, dataBundle, characterDispatch])\n  const teamMateDataContext: dataContextObj | undefined = useMemo(() => dataBundle && {\n    data: dataBundle.target,\n    teamData: teamData,\n  }, [dataBundle, teamData])\n  return <CardLight>\n    <CharacterAutocomplete fullWidth value={teamMateKey}\n      onChange={charKey => characterDispatch({ type: \"team\", index, charKey })}\n      disable={ck => ck === activeCharacterKey || (ck !== \"\" && active.team.includes(ck))}\n      labelText={t(\"teammate\", { count: index + 1 })}\n      defaultText={t(\"none\")}\n      defaultIcon={<PersonAdd />}\n      showDefault\n    />\n    {teammateCharacterContext && <CharacterContext.Provider value={teammateCharacterContext}>\n      {teamMateDataContext && <DataContext.Provider value={teamMateDataContext}>\n        <CharacterCard characterKey={teamMateKey}\n          onClickHeader={onClickHandler}\n          // Need to wrap these elements with the providers for them to use the correct functions.\n          artifactChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharArtifactCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          weaponChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharWeaponCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          characterChildren={<CharacterContext.Provider value={teammateCharacterContext}>\n            <DataContext.Provider value={teamMateDataContext}>\n              <CharTalentCondDisplay />\n            </DataContext.Provider>\n          </CharacterContext.Provider>}\n          isTeammateCard\n        />\n      </DataContext.Provider>}\n    </CharacterContext.Provider>}\n  </CardLight>\n}\nfunction CharArtifactCondDisplay() {\n  const { data, } = useContext(DataContext)\n  const artifactSheets = usePromise(() => ArtifactSheet.getAll, [])\n  const sections = useMemo(() => artifactSheets &&\n    Object.entries(ArtifactSheet.setEffects(artifactSheets, data))\n      .flatMap(([setKey, setNums]) =>\n        setNums.flatMap(sn => artifactSheets[setKey]!.setEffectDocument(sn)!))\n    , [artifactSheets, data])\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\nfunction CharWeaponCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { teamData } = useContext(DataContext)\n  const weaponSheet = teamData[charKey]!.weaponSheet\n  if (!weaponSheet.document) return null\n  return <DocumentDisplay sections={weaponSheet.document} teamBuffOnly={true} />\n}\nfunction CharTalentCondDisplay() {\n  const { character: { key: charKey } } = useContext(CharacterContext)\n  const { data, teamData } = useContext(DataContext)\n  const characterSheet = teamData[charKey]!.characterSheet\n  const talent = characterSheet.getTalent(data.get(input.charEle).value as ElementKey)!\n  const sections = Object.values(talent.sheets).flatMap(sts => sts.sections)\n  if (!sections) return null\n  return <DocumentDisplay sections={sections} teamBuffOnly={true} />\n}\n","import { assertUnreachable } from \"../Util/Util\"\nimport { forEachNodes } from \"./internal\"\nimport { constant, sum, prod, cmp } from \"./utils\"\nimport { NumNode, ReadNode } from \"./type\"\nimport { precompute } from \"./optimization\"\nimport { fillBuffer } from \"./addedUtils\"\nimport { DynStat } from \"../PageCharacter/CharacterDisplay/Tabs/TabOptimize/common\"\n\nexport function zero_deriv(funct: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): boolean {\n  let ret = true\n  forEachNodes([funct], _ => { }, f => {\n    const { operation } = f\n    switch (operation) {\n      case \"read\":\n        if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n          throw new Error(`Unsupported [${operation}] node in zero_deriv`)\n        if (binding(f) === diff) ret = false\n    }\n  })\n  return ret\n}\n\nexport function ddx(f: NumNode, binding: (readNode: ReadNode<number>) => string, diff: string): NumNode {\n  const { operation } = f\n  switch (operation) {\n    case \"read\":\n      if (f.type !== \"number\" || (f.accu && f.accu !== \"add\"))\n        throw new Error(`Unsupported [${operation}] node in d/dx`)\n      const name = binding(f)\n      if (name === diff) return constant(1)\n      return constant(0)\n    case \"const\": return constant(0)\n    case \"res\":\n      if (!zero_deriv(f, binding, diff)) throw new Error(`[${operation}] node takes only constant inputs. ${f}`)\n      return constant(0)\n\n    case \"add\": return sum(...f.operands.map(fi => ddx(fi, binding, diff)))\n    case \"mul\":\n      let ops = f.operands.map((fi, i) => prod(ddx(fi, binding, diff), ...f.operands.filter((v, ix) => ix !== i)))\n      return sum(...ops)\n    case \"sum_frac\":\n      const a = f.operands[0]\n      const da = ddx(a, binding, diff)\n      const b = sum(...f.operands.slice(1,))\n      const db = ddx(b, binding, diff)\n      const denom = prod(sum(...f.operands), sum(...f.operands))\n      const numerator = sum(prod(b, da), prod(-1, a, db))\n      return { operation: \"sum_frac\", operands: [numerator, prod(numerator, -1), denom] }\n\n    case \"min\": case \"max\":\n      switch (f.operands.length) {\n        case 1: return ddx(f.operands[0], binding, diff)\n        case 2:\n          const [arg1, arg2] = f.operands\n          if (operation === \"min\") return cmp(arg1, arg2, ddx(arg2, binding, diff), ddx(arg1, binding, diff))\n          if (operation === \"max\") return cmp(arg1, arg2, ddx(arg1, binding, diff), ddx(arg2, binding, diff))\n          assertUnreachable(operation)\n          break\n        default:\n          throw new Error(`[${operation}] node operates on only 1 or 2 arguments. ${f}`)\n      }\n\n      break\n    case \"threshold\":\n      const [value, threshold, pass, fail] = f.operands\n      if (!zero_deriv(value, binding, diff) || !zero_deriv(threshold, binding, diff))\n        throw new Error(`[${operation}] node must branch on constant inputs. ${f}`)\n      return cmp(value, threshold, ddx(pass, binding, diff), ddx(fail, binding, diff))\n\n    case \"match\": case \"lookup\": case \"subscript\": case \"data\":\n      throw new Error(`Unsupported [${operation}] node in ddx`)\n    default:\n      assertUnreachable(operation)\n  }\n}\n\nexport function diff_debug() {\n  console.log('Youve reached differentiate!!!')\n\n  // Copied stats & formula from arbitrary build of my HuTao\n  const stats: DynStat = { \"0\": 0.284294, \"1\": 0.9462000033378601, \"2\": 0.1, \"3\": 1.48, \"TenacityOfTheMillelith\": 0, \"hp_\": 0.23249999999999998, \"hp\": 1159, \"ShimenawasReminiscence\": 1, \"atk_\": 0.0933, \"atk\": 110.58, \"EmblemOfSeveredFate\": 0, \"enerRech_\": 0.09709999999999999 }\n  const formula1: NumNode = { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"TenacityOfTheMillelith\"], \"accu\": \"add\", \"info\": { \"key\": \"TenacityOfTheMillelith\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.2, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"hp_\", \"source\": \"TenacityOfTheMillelith\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 15552.306844604493 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"hp\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"hp\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.05957 }] }, { \"operation\": \"mul\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"ShimenawasReminiscence\"], \"accu\": \"add\", \"info\": { \"key\": \"ShimenawasReminiscence\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.18, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"atk_\", \"source\": \"ShimenawasReminiscence\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk_\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk_\" }, \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 507.727969991803 }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"atk\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"atk\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"3\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"0\"], \"type\": \"number\", \"accu\": \"add\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"1\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"res\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"2\"], \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"add\", \"operands\": [{ \"operation\": \"mul\", \"operands\": [{ \"operation\": \"sum_frac\", \"operands\": [{ \"operation\": \"add\", \"operands\": [{ \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"WanderersTroupe\"], \"accu\": \"add\", \"info\": { \"key\": \"WanderersTroupe\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 80 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"eleMas\", \"source\": \"WanderersTroupe\" }, \"emptyOn\": \"l\" }, { \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"eleMas\"], \"info\": { \"prefix\": \"art\", \"asConst\": true, \"key\": \"eleMas\" }, \"type\": \"number\", \"accu\": \"add\" }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1400 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 2.7777777777777777 }] }, { \"operation\": \"threshold\", \"operands\": [{ \"operation\": \"read\", \"operands\": [], \"path\": [\"dyn\", \"CrimsonWitchOfFlames\"], \"accu\": \"add\", \"info\": { \"key\": \"CrimsonWitchOfFlames\" }, \"type\": \"number\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 4 }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0.15, \"info\": { \"key\": \"_\" } }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 0 }], \"info\": { \"key\": \"vaporize_dmg_\", \"variant\": \"vaporize\", \"source\": \"CrimsonWitchOfFlames\" }, \"emptyOn\": \"l\" }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1 }] }, { \"operation\": \"const\", 'type': 'number', \"operands\": [], \"value\": 1.71495 }] }\n  const formula2 = formula1\n\n  var [compute, mapping, buffer] = precompute([formula2], f => f.path[1])\n  fillBuffer(stats, mapping, buffer)\n  var result = compute()[0]\n\n  // Check validity of calculated derivatives\n  const eps = 1e-5\n  let stat2 = { ...stats }\n  stat2['hp_'] = eps + (stat2['hp_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  var res2 = compute()[0]\n  var dhp_ = ddx(formula2, f => f.path[1], 'hp_')\n  var [c_dhp_, mapping2, buffer2] = precompute([dhp_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer2[mapping2[k] ?? 0] = v)\n  console.log('diff hp_ (numeric/symbolic)', (res2 - result) / eps, c_dhp_()[0])\n\n  stat2 = { ...stats }\n  stat2['hp'] = eps + (stat2['hp'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var dhp = ddx(formula2, f => f.path[1], 'hp')\n  var [c_dhp, mapping3, buffer3] = precompute([dhp], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer3[mapping3[k] ?? 0] = v)\n  console.log('diff hp (numeric/symbolic)', (res2 - result) / eps, c_dhp()[0])\n\n  stat2 = { ...stats }\n  stat2['atk_'] = eps + (stat2['atk_'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var datk_ = ddx(formula2, f => f.path[1], 'atk_')\n  var [c_datk_, buffer4, mapping4] = precompute([datk_], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer4[mapping4[k] ?? 0] = v)\n  console.log('diff atk_ (numeric/symbolic)', (res2 - result) / eps, c_datk_()[0])\n\n  stat2 = { ...stats }\n  stat2['eleMas'] = eps + (stat2['eleMas'] ?? 0)\n  fillBuffer(stat2, mapping, buffer)\n  res2 = compute()[0]\n  var deleMas = ddx(formula2, f => f.path[1], 'eleMas')\n  var [c_deleMas, mapping5, buffer5] = precompute([deleMas], f => f.path[1])\n  Object.entries(stats).forEach(([k, v]) => buffer5[mapping5[k] ?? 0] = v)\n  console.log('diff eleMas (numeric/symbolic)', (res2 - result) / eps, c_deleMas()[0])\n}\n","// https://oeis.org/A008287\n// step 1: a basic LUT with a few steps of Pascal's triangle\nvar quadrinomials = [\n  [1],\n  [1, 1, 1, 1,],\n  [1, 2, 3, 4, 3, 2, 1],\n  [1, 3, 6, 10, 12, 12, 10, 6, 3, 1],\n  [1, 4, 10, 20, 31, 40, 44, 40, 31, 20, 10, 4, 1],\n  [1, 5, 15, 35, 65, 101, 135, 155, 155, 135, 101, 65, 35, 15, 5, 1],\n];\n\n// step 2: a function that builds out the LUT if it needs to.\nexport function quadrinomial(n: number, k: number) {\n  while (n >= quadrinomials.length) {\n    let s = quadrinomials.length;\n\n    let nextRow: number[] = [];\n    for (let i = 0, prev = s - 1; i <= 3 * s; i++) {\n      const a = quadrinomials[prev][i - 3] ?? 0\n      const b = quadrinomials[prev][i - 2] ?? 0\n      const c = quadrinomials[prev][i - 1] ?? 0\n      const d = quadrinomials[prev][i] ?? 0\n\n      nextRow[i] = a + b + c + d\n    }\n    quadrinomials.push(nextRow);\n  }\n  return quadrinomials[n][k] ?? 0;\n}\n\n// https://hewgill.com/picomath/javascript/erf.js.html\n// very good algebraic approximation of erf function. Maximum deviation below 1.5e-7\nexport function erf(x: number) {\n  // constants\n  const a1 = 0.254829592, a2 = -0.284496736, a3 = 1.421413741;\n  const a4 = -1.453152027, a5 = 1.061405429, p = 0.3275911;\n\n  // Save the sign of x\n  var sign = 1;\n  if (x < 0) sign = -1;\n  x = Math.abs(x);\n\n  // A&S formula 7.1.26\n  var t = 1.0 / (1.0 + p * x);\n  var y = 1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * Math.exp(-x * x);\n\n  return sign * y;\n}\n\n// Gaussian probability distribution. mean & variance can be omitted for standard Gaussian.\nexport function gaussPDF(x: number, mu?: number, sig2?: number) {\n  if (mu === undefined) mu = 0\n  if (sig2 === undefined) sig2 = 1\n\n  if (sig2 <= 0) return 0\n  return Math.exp(-(mu - x) * (mu - x) / sig2 / 2) / Math.sqrt(2 * Math.PI * sig2)\n}\n","import { QueryResult } from \"./artifactQuery\"\nimport { SubstatKey, allSubstatKeys } from \"../../../../Types/artifact\"\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { range } from \"../../../../Util/Util\"\nimport { quadrinomial } from \"../../../../Util/MathUtil\"\n\n// Cartesian product of arrays\nconst cartesian = (...a: any[][]): any[][] => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\n\n// Manually cached multinomial distribution.\n// Example: sigma([2, 3, 0, 0], 5)\n//   gives the probability (n1=2, n2=3, n3=0, n4=0) given N=5 total rolls. (uniform distribution is assumed for the four bins)\n// `sigr` and `sig_arr` constitute a near perfect hash of all combinations for N=1 to N=5.\n// This function has undefined behavior for N > 5 and N = 0\nconst sig_arr = [270 / 1024, 80 / 1024, 0, 12 / 256, 8 / 256, 120 / 1024, 0, 60 / 1024, 4 / 256, 60 / 1024, 4 / 256, 30 / 1024, 24 / 256, 160 / 1024, 1 / 64, 1 / 64, 24 / 256, 1 / 64, 12 / 256, 0, 6 / 256, 2 / 16, 6 / 256, 0, 81 / 256, 16 / 256, 0, 27 / 64, 12 / 64, 0, 1 / 16, 1 / 16, 12 / 64, 1 / 16, 6 / 64, 3 / 4, 2 / 4, 243 / 1024, 32 / 1024, 0, 108 / 256, 32 / 256, 0, 9 / 64, 6 / 64, 48 / 256, 0, 24 / 256, 3 / 64, 5 / 1024, 3 / 64, 5 / 1024, 0, 405 / 1024, 80 / 1024, 0, 54 / 256, 90 / 1024, 40 / 1024, 0, 1 / 256, 1 / 256, 40 / 1024, 1 / 256, 20 / 1024, 9 / 16, 4 / 16, 0, 1 / 4, 1 / 4, 0, 1 / 4, 27 / 64, 8 / 64, 0, 6 / 16, 4 / 16, 10 / 1024, 0, 10 / 1024, 2 / 16, 0, 0, 0, 15 / 1024, 10 / 1024, 1 / 1024, 1 / 1024, 0, 1 / 1024]\nconst sigr = [35, 64, 70, 21, 33, 45, 12, 0, 53, 76, 48, 86]\nfunction sigma(ss: number[], N: number) {\n  const ssum = ss.reduce((a, b) => a + b);\n  if ((ss.length > 4) || ssum > N) return 0\n  if ((ss.length === 4) && (ssum !== N)) return 0\n  if (ss.length === 3) ss = [...ss, N - ssum]\n  ss.sort().reverse();\n\n  // t = 12\n  // offset = -14\n  let v = 13 * N + ss.length - 14 + 16 * ss[0]\n  if (ss.length > 1) v += 4 * ss[1]\n  const x = v % 12\n  const y = Math.trunc(v / 12) // integer divide\n\n  return sig_arr[x + sigr[y]]\n}\n\nexport function crawlUpgrades(n: number, fn?: (n1234: number[], p: number) => void) {\n  if (n === 0) {\n    fn!([0, 0, 0, 0], 1)\n    return\n  }\n\n  // Binomial(n+3, 3) branches to crawl.\n  for (let i1 = n; i1 >= 0; i1--) {\n    for (let i2 = n - i1; i2 >= 0; i2--) {\n      for (let i3 = n - i1 - i2; i3 >= 0; i3--) {\n        const i4 = n - i1 - i2 - i3;\n        const p_comb = sigma([i1, i2, i3, i4], n)\n        fn!([i1, i2, i3, i4], p_comb)\n      }\n    }\n  }\n}\n\nexport function allUpgradeValues({ statsBase, rollsLeft, subs, skippableDerivs, fourthsubOpts, evalFn }: QueryResult) {\n  // TODO: Include non-5* artifacts\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, 5) / 1000 : Artifact.substatValue(key, 5) / 10\n  const base = statsBase\n\n  let results: WeightedPoint[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    if (fourthsubOpts) ns[3] += 1\n    const vals = ns.map((ni, i) => {\n      if (fourthsubOpts && i === 3) return range(7 * ni, 10 * ni)\n      const sub = subs[i]\n      if (sub && !skippableDerivs[allSubstatKeys.indexOf(sub)]) return range(7 * ni, 10 * ni)\n      return [NaN]\n    })\n\n    const allValues: number[][] = cartesian(...vals)\n    allValues.forEach(upVals => {\n      let stats = { ...base }\n      let p_upVals = 1\n      for (let i = 0; i < 3; i++) {\n        if (isNaN(upVals[i])) continue\n\n        const key = subs[i];\n        const val = upVals[i];\n        const ni = ns[i];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      if (fourthsubOpts !== undefined) {\n        fourthsubOpts.forEach(({ sub, subprob }) => {\n          const stats2 = { ...stats }\n          const key = sub\n          const val = upVals[3]\n          const ni = ns[3]\n          stats2[key] = (stats2[key] ?? 0) + val * scale(key)\n          let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni) * subprob\n          const p_upVals2 = p_upVals * p_val\n          results.push({ v: evalFn(stats2).map(n => n.v), p: p * p_upVals2 })\n        })\n        return\n      }\n      if (!isNaN(upVals[3])) {\n        const key = subs[3];\n        const val = upVals[3];\n        const ni = ns[3];\n        stats[key] = (stats[key] ?? 0) + val * scale(key)\n        let p_val = (4 ** -ni) * quadrinomial(ni, val - 7 * ni)\n        p_upVals *= p_val\n      }\n      results.push({ v: evalFn(stats).map(n => n.v), p: p * p_upVals })\n    })\n  })\n\n  return results\n}\n\ntype WeightedPoint = {\n  v: number[],\n  p: number\n}\n","import { erf } from \"../../../../Util/MathUtil\";\nimport { Module } from \"wasmpack/assembly.js\";\n\n// From a Gaussian mean & variance, get P(x > mu) and E[x | x > mu]\nexport function gaussianPE(mean: number, variance: number, x: number) {\n  if (variance < 1e-5) {\n    if (mean > x) return { p: 1, upAvg: mean - x }\n    return { p: 0, upAvg: 0 }\n  }\n\n  const z = (x - mean) / Math.sqrt(variance)\n  const p = (1 - erf(z / Math.sqrt(2))) / 2\n  if (z > 5) {\n    // Z-score large means p will be very small.\n    // We can use taylor expansion at infinity to evaluate upAvg.\n    const y = 1 / z, y2 = y * y\n    return { p: p, upAvg: Math.sqrt(variance) * y * (1 - 2 * y2 * (1 - y2 * (5 + 37 * y2))) }\n  }\n\n  const phi = Math.exp(-z * z / 2) / Math.sqrt(2 * Math.PI)\n  return { p: p, upAvg: mean - x + Math.sqrt(variance) * phi / p }\n}\n\n// From a multivariate Gaussian mean & variance, get P(x > mu) and E[x0 | x > mu]\nexport function mvnPE_bad(mu: number[], cov: number[][], x: number[]) {\n  // TODO: an implementation without using the independence assumption\n  let ptot = 1\n  let cptot = 1\n  for (let i = 0; i < mu.length; ++i) {\n    if (cov[i][i] < 1e-5) {\n      if (mu[i] < x[i]) return { p: 0, upAvg: 0, cp: 0 }\n      continue;\n    }\n\n    const z = (x[i] - mu[i]) / Math.sqrt(cov[i][i]);\n    const p = (1 - erf(z / Math.sqrt(2))) / 2\n    ptot *= p\n\n    if (i !== 0) cptot *= p\n  }\n\n  // Naive 1st moment of truncated distribution: assume it's relatively stationary w.r.t. the\n  //  constraints. If the constraints greatly affects the moment, then its associated\n  //  conditional probability should also be small. Therefore in conjunction with the summation\n  //  method in `gmmNd()`, the overall approximation should be fairly good, even if the individual\n  //  upAvg terms may be very bad.\n  // Appears to work well in practice.\n  //\n  // More rigorous methods for estimating 1st moment of truncated multivariate distribution exist.\n  // https://www.cesarerobotti.com/wp-content/uploads/2019/04/JCGS-KR.pdf\n  const { upAvg } = gaussianPE(mu[0], cov[0][0], x[0])\n  return { p: ptot, upAvg: upAvg, cp: cptot }\n}\n\nexport function mvnPE_good(mu: number[], cov: number[][], x: number[]) {\n  let mvn: any = new Module.MVNHandle(mu.length);\n  try {\n    x.forEach(xi => mvn.pushX(xi));\n    mu.forEach(mui => mvn.pushMu(mui));\n    cov.forEach(arr => arr.forEach(c => mvn.pushCov(c)));\n\n    mvn.compute()\n    return { p: mvn.p, upAvg: mvn.Eup, cp: mvn.cp }\n  }\n  finally {\n    // HAHAHA explicit memory management in my javascript\n    mvn.delete();\n  }\n}\n\n\nexport function debugMVN() {\n  console.log('FROM debugMVN()')\n  // var mvn = new Module.MVNHandle(1);\n  // mvn.pushX(0);\n  // mvn.pushMu(0);\n  // mvn.pushCov(1);\n\n  // mvn.compute();\n  // console.log('this', mvn.p)\n  // mvn.delete()\n\n  // var mvn2 = new Module.MVNHandle(2);\n  // let mu = [0, 0]\n  // let x = [1, 1]\n  // let cov = [[10, -5], [-5, 20]]\n  // mu.forEach(m => mvn2.pushMu(m))\n  // x.forEach(x => mvn2.pushX(x))\n  // cov.forEach(a => a.forEach(c => mvn2.pushCov(c)))\n  // mvn2.compute()\n  // console.log('that', mvn2.p)\n  // console.log('cp', mvn2.cp)\n  // console.log('eup', mvn2.Eup)\n  // mvn2.delete()\n\n  // var mvn3 = new Module.MVNHandle(4);\n  // let mu3 = [0.30650569, 0.53707501, 0.95858678, 0.80295683]\n  // let x3 = [0, 0, 0, 0]\n  // let cov3 = [\n  //   [0.48907391, 0.02377247, -0.16140441, -0.24788451],\n  //   [0.02377247, 0.40132075, -0.19141678, 0.09189226],\n  //   [-0.16140441, -0.19141678, 0.41230111, -0.03428392],\n  //   [-0.24788451, 0.09189226, -0.03428392, 0.16998822]\n  // ]\n  // mu3.forEach(m => mvn3.pushMu(m))\n  // x3.forEach(x => mvn3.pushX(x))\n  // cov3.forEach(a => a.forEach(c => mvn3.pushCov(c)))\n\n  // mvn3.compute()\n  // console.log('mvn3', mvn3.p, mvn3.cp, mvn3.Eup)\n\n  var mvn4 = new Module.MVNHandle(2);\n  let mu4 = [29437.599765014198, 2597.693806908243]\n  let x4 = [31777.245955648243, 30]\n  let cov4 = [[3025.039702728439, 266.94183507340136], [266.94183507340136, 23.556035726765433]]\n  mu4.forEach(m => mvn4.pushMu(m))\n  x4.forEach(x => mvn4.pushX(x))\n  cov4.forEach(a => a.forEach(c => mvn4.pushCov(c)))\n  mvn4.compute()\n  console.log('mvn4', mvn4.p, mvn4.cp, mvn4.Eup)\n}\n","import { Data, NumNode } from \"../../../../Formula/type\"\nimport { precompute, optimize } from \"../../../../Formula/optimization\"\nimport { ddx, zero_deriv } from \"../../../../Formula/differentiate\"\nimport { DynStat } from '../../../..//PageCharacter/CharacterDisplay/Tabs/TabOptimize/common'\nimport { SubstatKey, allSubstatKeys, ICachedArtifact } from \"../../../../Types/artifact\"\nimport { SlotKey, Rarity, allArtifactSets } from '../../../../Types/consts';\nimport Artifact from \"../../../../Data/Artifacts/Artifact\"\nimport { crawlUpgrades } from \"./artifactUpgradeCrawl\"\nimport { gaussianPE, mvnPE_good } from \"./mvncdf\"\nimport { fillBuffer } from \"../../../../Formula/addedUtils\"\n\ntype GaussianMixture = {\n  gmm: {\n    phi: number,  // Item weight; must sum to 1.\n    cp: number,   // Constraint probability\n    mu: number,\n    sig2: number\n  }[],\n  lower: number,\n  upper: number,\n}\nexport type Query = {\n  formulas: NumNode[],\n  curBuild: QueryBuild,\n\n  thresholds: number[],\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n}\nexport type QueryResult = {\n  id: string,\n  rollsLeft: number,\n  subs: SubstatKey[],\n  statsBase: DynStat,\n  evalFn: (values: DynStat) => StructuredNumber[],\n  skippableDerivs: boolean[],\n\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture,\n  thresholds: number[],\n  fourthsubOpts?: { sub: SubstatKey, subprob: number }[],\n\n  evalMode: 'fast' | 'slow',\n}\ntype StructuredNumber = {\n  v: number,\n  grads: number[],\n}\n\nexport type QueryArtifact = {\n  id: string,\n  level: number,\n  rarity: Rarity,\n  slot: SlotKey,\n  values: DynStat,\n  subs: SubstatKey[]\n}\nexport type QueryBuild = { [key in SlotKey]: QueryArtifact | undefined }\ntype InternalQuery = {\n  rollsLeft: number,\n  subs: SubstatKey[],\n  calc4th: boolean,\n  stats: DynStat,\n  thresholds: number[],\n  objectiveEval: (values: DynStat) => { v: number, ks: number[] }[],\n  scale: (key: SubstatKey) => number,\n}\ntype InternalResult = {\n  prob: number,\n  upAvg: number,\n  distr: GaussianMixture\n}\nexport type UpgradeOptResult = {\n  query: Query,\n  arts: QueryResult[],\n}\n\nfunction toStats(build: QueryBuild): DynStat {\n  let stats: DynStat = {}\n  Object.values(build).forEach(a => {\n    if (a) Object.entries(a.values).forEach(([key, value]) => stats[key] = (stats[key] ?? 0) + value)\n  })\n  return stats\n}\n\nexport function evalArtifact(objective: Query, art: QueryArtifact, slow = false, calc4th = false): QueryResult {\n  let newBuild = { ...objective.curBuild }\n  newBuild[art.slot] = art\n  let newStats = toStats(newBuild)\n  const statsBase = { ...newStats }\n  let scale = (key: SubstatKey) => key.endsWith('_') ? Artifact.substatValue(key, art.rarity) / 1000 : Artifact.substatValue(key, art.rarity) / 10\n\n  const rollsLeft = Artifact.rollsRemaining(art.level, art.rarity) - (4 - art.subs.length)\n  if (art.subs.length === 4) calc4th = false\n\n  if (!calc4th) {\n    const iq: InternalQuery = {\n      rollsLeft, subs: art.subs, calc4th,\n      stats: newStats,\n      thresholds: objective.thresholds,\n      objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v: v, ks: art.subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n      scale,\n    }\n\n    const out = slow ? gmmNd(iq) : fastUB(iq);\n    return {\n      id: art.id,\n      subs: art.subs,\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      ...out,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n  else {\n    const msOption = Object.keys(art.values).filter(v => !(art.subs as string[]).includes(v)).filter(v => !(allArtifactSets as readonly string[]).includes(v))\n    if (msOption.length !== 1) throw Error('Failed to extract artifact main stat')\n    const mainStat = msOption[0]\n\n    const subsToConsider = allSubstatKeys.filter(s => !art.subs.includes(s) && s !== mainStat)\n    const results = subsToConsider.map(nxtsub => {\n      const subs = [...art.subs, nxtsub]\n      const iq: InternalQuery = {\n        rollsLeft, subs, calc4th,\n        stats: newStats,\n        thresholds: objective.thresholds,\n        objectiveEval: (stats) => objective.evalFn(stats).map(({ v, grads }) => ({ v, ks: subs.map(key => grads[allSubstatKeys.indexOf(key)] * scale(key)) })),\n        scale,\n      }\n\n      const out = slow ? gmmNd(iq) : fastUB(iq);\n      return { ...out, p2: subProb(nxtsub, [...art.subs, mainStat as SubstatKey]) }\n    })\n\n    const ptot = results.reduce((a, { prob: p, p2 }) => a + p * p2, 0)\n    const upAvgtot = ptot < 1e-6 ? 0 : results.reduce((a, { prob: p, p2, upAvg }) => a + p * p2 * upAvg, 0) / ptot\n    const distrtot = results.reduce((dtot, { p2, distr }) => {\n      dtot.lower = Math.min(dtot.lower, distr.lower)\n      dtot.upper = Math.max(dtot.upper, distr.upper)\n      dtot.gmm.push(...distr.gmm.map(({ phi, cp, mu, sig2 }) => ({ phi: p2 * phi, cp, mu, sig2 })))\n      return dtot\n    }, { gmm: [], lower: Infinity, upper: -Infinity } as GaussianMixture)\n\n    return {\n      id: art.id,\n      subs: art.subs, fourthsubOpts: subsToConsider.map(sub => ({ sub, subprob: subProb(sub, [...art.subs, mainStat as SubstatKey]) })),\n      rollsLeft: rollsLeft,\n      statsBase: statsBase,\n\n      prob: ptot,\n      upAvg: upAvgtot,\n      distr: distrtot,\n      evalFn: objective.evalFn,\n      skippableDerivs: objective.skippableDerivs,\n      thresholds: objective.thresholds,\n\n      evalMode: slow ? 'slow' : 'fast',\n    }\n  }\n}\n\n\n// Estimates an upper bound for summary statistics by approximating each formula/constraint indepenently,\n//   then taking a min() over all the formulas. The approximations use derivatives to construct a linear\n//   approximation of the damage formula, which we can use to treat the substats as a weighted sum of random\n//   variables. Then do some math to get the expected mean & variance of the weighted sum and approximate\n//   the distribution with a Gaussian.\nfunction fastUB({ rollsLeft, subs, stats, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  // Evaluate derivatives at center of 4-D upgrade distribution\n  let stats2 = { ...stats }\n  subs.forEach((subKey, i) => {\n    const b = calc4th && (i === 3) ? 1 : 0\n    stats2[subKey] = (stats2[subKey] ?? 0) + 17 / 2 * (rollsLeft / 4 + b) * scale(subKey)\n  })\n\n  const N = rollsLeft\n  const obj = objectiveEval(stats2);\n  let p_min = 1;\n  let upAvgUB = -1;\n  let apxDist: GaussianMixture = { gmm: [], lower: obj[0].v, upper: obj[0].v };\n\n  // Iterate over objectives, aggregate by min() to construct an upper bound.\n  for (let ix = 0; ix < obj.length; ix++) {\n    const { v, ks } = obj[ix];\n    const ksum = ks.reduce((a, b) => a + b)\n    const ksum2 = ks.reduce((a, b) => a + b * b, 0)\n\n    const mean = v\n    const variance = (147 / 8 * ksum2 - 289 / 64 * ksum * ksum) * N + (calc4th ? 5 / 4 * ks[3] * ks[3] : 0)\n\n    const { p, upAvg } = gaussianPE(mean, variance, thresholds[ix])\n    if (ix === 0) {\n      upAvgUB = upAvg\n      apxDist = { gmm: [{ phi: 1, mu: mean, sig2: variance, cp: 1 }], lower: mean - 4 * Math.sqrt(variance), upper: mean + 4 * Math.sqrt(variance) }\n    }\n    p_min = Math.min(p, p_min)\n  }\n\n  return { prob: p_min, upAvg: upAvgUB, distr: apxDist }\n}\n\n// Accurately estimates the summary statistics by approximating each formula/constraint on the scale of a\n//   single roll, and iterating across all combinations of roll outcomes. This approximation works much better\n//   because the linear approximation is more valid on the smaller region. Also the substat upgrade values\n//   are conditionally independent given the number of rolls in each, giving much better justification for the\n//   Gaussian approximation.\n// The splits across roll combinations means `gmmNd` gives an N-dimensional Gaussian mixture model.\nfunction gmmNd({ rollsLeft, stats, subs, thresholds, calc4th, scale, objectiveEval }: InternalQuery): InternalResult {\n  const appx: GaussianMixture = { gmm: [], lower: thresholds[0], upper: thresholds[0] }\n\n  let lpe: { l: number, p: number, upAvg: number, cp: number }[] = []\n  crawlUpgrades(rollsLeft, (ns, p) => {\n    let stat2 = { ...stats }\n    if (calc4th) ns[3] += 1\n    subs.forEach((subKey, i) => {\n      stat2[subKey] = (stat2[subKey] ?? 0) + 17 / 2 * (ns[i]) * scale(subKey)\n    })\n\n    const obj = objectiveEval(stat2);\n    let mu = obj.map(o => o.v)\n    let cov = obj.map(o1 => obj.map(o2 => o1.ks.reduce((pv, cv, k) => pv + o1.ks[k] * o2.ks[k] * ns[k], 0)))\n    const res = mvnPE_good(mu, cov, thresholds)\n    lpe.push({ l: p, ...res })\n\n    // Feels a little bad to discard everything but the first axis, but can change later\n    appx.gmm.push({ phi: p, mu: mu[0], sig2: cov[0][0], cp: res.cp })\n    appx.lower = Math.min(appx.lower, mu[0] - 4 * Math.sqrt(cov[0][0]))\n    appx.upper = Math.max(appx.upper, mu[0] + 4 * Math.sqrt(cov[0][0]))\n  })\n\n  // Aggregate gaussian mixture statistics.\n  let p_ret = 0, upAvg_ret = 0\n  lpe.forEach(({ l, p, upAvg, cp }) => {\n    // It's quite often that `p` becomes 0 here... should I use log likelihoods instead?\n    p_ret += l * p * cp;\n    upAvg_ret += l * p * cp * upAvg;\n  })\n\n  if (p_ret < 1e-10) return { prob: 0, upAvg: 0, distr: appx }\n  upAvg_ret = upAvg_ret / p_ret\n  return { prob: p_ret, upAvg: upAvg_ret, distr: appx }\n}\n\nexport function querySetup(formulas: NumNode[], thresholds: number[], curBuild: QueryBuild, data: Data = {}): Query {\n  let toEval: NumNode[] = []\n  formulas.forEach(f => {\n    toEval.push(f, ...allSubstatKeys.map(sub => ddx(f, fo => fo.path[1], sub)))\n  })\n  // Opt loop a couple times to ensure all constants folded?\n  let evalOpt = optimize(toEval, data, ({ path: [p] }) => p !== \"dyn\")\n  evalOpt = optimize(evalOpt, data, ({ path: [p] }) => p !== \"dyn\")\n  const [evalFn, mapping, buffer] = precompute(evalOpt, f => f.path[1])\n\n  let stats = toStats(curBuild)\n  fillBuffer(stats, mapping, buffer)\n  const dmg0 = evalFn()[0]\n\n  const skippableDerivs = allSubstatKeys.map(sub => formulas.every(f => zero_deriv(f, f => f.path[1], sub)))\n  const structuredEval = (stats: DynStat) => {\n    Object.values(mapping).forEach(k => buffer[k] = 0)  // Need to reset buffer before evaluating\n    fillBuffer(stats, mapping, buffer)\n    const out = evalFn()\n    return formulas.map((_, i) => {\n      const ix = i * (1 + allSubstatKeys.length)\n      return { v: out[ix], grads: allSubstatKeys.map((sub, si) => out[ix + 1 + si]) }\n    })\n  }\n\n  return { formulas: formulas, thresholds: [dmg0, ...thresholds], curBuild: curBuild, evalFn: structuredEval, skippableDerivs: skippableDerivs }\n}\n\nexport function toQueryArtifact(art: ICachedArtifact, fixedLevel?: number) {\n  if (fixedLevel === undefined) fixedLevel = art.level\n  const mainStatVal = Artifact.mainStatValue(art.mainStatKey, art.rarity, fixedLevel)  // 5* only\n  const buildData = {\n    id: art.id, slot: art.slotKey, level: art.level, rarity: art.rarity,\n    values: {\n      [art.setKey]: 1,\n      [art.mainStatKey]: art.mainStatKey.endsWith('_') ? mainStatVal / 100 : mainStatVal,\n      ...Object.fromEntries(art.substats.map(substat =>\n        [substat.key, substat.key.endsWith('_') ? substat.accurateValue / 100 : substat.accurateValue]))\n    },\n    subs: art.substats.reduce((sub: SubstatKey[], x) => {\n      if (x.key !== \"\") sub.push(x.key)\n      return sub\n    }, [])\n  }\n  delete buildData.values[\"\"]\n  return buildData\n}\n\nexport function cmpQ(a: QueryResult, b: QueryResult) {\n  if (b.prob > 1e-5 || a.prob > 1e-5) return b.prob * b.upAvg - a.prob * a.upAvg\n\n  const meanA = a.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  const meanB = b.distr.gmm.reduce((pv, { phi, mu }) => pv + phi * mu, 0)\n  return meanB - meanA\n}\n\nconst fWeight: StrictDict<SubstatKey, number> = {\n  hp: 6, atk: 6, def: 6,\n  hp_: 4, atk_: 4, def_: 4, eleMas: 4, enerRech_: 4,\n  critRate_: 3, critDMG_: 3\n}\nconst fWeightTot = Object.values(fWeight).reduce((a, b) => a + b)\nfunction subProb(sub: SubstatKey, excluded: SubstatKey[]) {\n  if (excluded.includes(sub)) return 0\n  const denom = fWeightTot - excluded.reduce((a, b) => a + (fWeight[b] ?? 0), 0)\n  return fWeight[sub] / denom\n}\n","import { Button, CardContent, Grid, Box } from '@mui/material';\nimport React, { useEffect, useState, useContext, useMemo, useCallback } from 'react';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { DataContext } from '../../../../Context/DataContext';\nimport Assets from '../../../../Assets/Assets';\nimport {\n  Line,\n  Area,\n  ComposedChart,\n  Legend,\n  ReferenceLine,\n  ReferenceDot,\n  ResponsiveContainer,\n  Tooltip,\n  TooltipProps,\n  XAxis,\n  YAxis,\n  Label,\n} from 'recharts';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport { QueryResult } from './artifactQuery';\nimport { allUpgradeValues } from './artifactUpgradeCrawl'\nimport { uiInput as input } from '../../../../Formula';\nimport ArtifactCardPico from '../../../../Components/Artifact/ArtifactCardPico'\nimport { allSlotKeys, SlotKey } from '../../../../Types/consts';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { gaussPDF } from '../../../../Util/MathUtil'\n\ntype Data = {\n  upgradeOpt: QueryResult,\n  showTrue?: boolean,\n  objMin: number,\n  objMax: number,\n  ix?: number,\n}\ntype ChartData = {\n  x: number,\n  est?: number,\n  estCons?: number,\n  exact?: number,\n  exactCons?: number,\n  expInc?: number,\n}\n\n// linspace with non-inclusive endpoint.\nfunction linspace(lower = 0, upper = 1, steps = 50): number[] {\n  var arr: number[] = [];\n  var step = (upper - lower) / steps;\n  for (let i = 0; i < steps; ++i) {\n    arr.push(lower + i * step);\n  }\n  return arr\n}\n\nconst nbins = 50;\nconst plotPoints = 500;\nexport default function UpgradeOptChartCard({ upgradeOpt, objMin, objMax }: Data) {\n  const [calcExacts, setCalcExacts] = useState(false);\n\n  const { database } = useContext(DatabaseContext)\n  const bla = database.arts.get(upgradeOpt.id)\n  if (!bla) {\n    throw new Error(`artifact ${upgradeOpt.id} not found.`)\n  }\n\n  const constrained = (upgradeOpt.thresholds.length > 1)\n\n  const slot = bla.slotKey;\n  const { data } = useContext(DataContext)\n  const artifacts = useMemo(() =>\n    allSlotKeys.map(k => [k, database.arts.get(data.get(input.art[k].id).value ?? \"\")]),\n    [data, database]) as Array<[SlotKey, ICachedArtifact | undefined]>;\n\n  const gauss = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, mu, sig2 }) => pv + phi * gaussPDF(x, mu, sig2), 0)\n  const gaussConstrained = (x: number) => upgradeOpt.distr.gmm.reduce(\n    (pv, { phi, cp, mu, sig2 }) => pv + cp * phi * gaussPDF(x, mu, sig2), 0)\n  const thresh = upgradeOpt.thresholds;\n  const thr0 = thresh[0];\n  // const perc = (x: number) => 100 * (x - thr0) / thr0;\n  const perc = useCallback((x: number) => 100 * (x - thr0) / thr0, [thr0])\n\n  const miin = objMin\n  const maax = objMax\n\n  let ymax = 0\n  let dataEst: ChartData[] = linspace(miin, maax, plotPoints).map(v => {\n    const est = gauss(v)\n    ymax = Math.max(ymax, est)\n    return { x: perc(v), est: est, estCons: gaussConstrained(v) }\n  })\n  if (ymax === 0) ymax = nbins / (maax - miin)\n\n  // go back and add delta distributions.\n  let deltas: { [key: number]: number } = {}\n  let deltasConstrained: { [key: number]: number } = {}\n  upgradeOpt.distr.gmm.forEach(({ phi, mu, sig2, cp }) => {\n    if (sig2 <= 0) {\n      deltas[mu] = (deltas[mu] ?? 0) + phi\n      deltasConstrained[mu] = (deltasConstrained[mu] ?? 0) + phi * cp\n    }\n  })\n  Object.entries(deltas).forEach(([mu, p]) => dataEst.push({ x: perc(parseFloat(mu)), est: p * nbins / (maax - miin), estCons: deltasConstrained[mu] * nbins / (maax - miin) }))\n\n  dataEst.sort((a, b) => a.x - b.x)\n  let xpercent = (thr0 - miin) / (maax - miin)\n\n  const [trueData, setTrueData] = useState<ChartData[]>([]);\n  const [trueP, setTrueP] = useState(-1);\n  const [trueE, setTrueE] = useState(-1);\n\n  useEffect(() => {\n    // When `calcExacts` is pressed, we may want to sink/swim this artifact to its proper spot.\n    // Or not b/c people only really need a fuzzy ordering anyways.\n    if (!calcExacts) return;\n    const exactData = allUpgradeValues(upgradeOpt)\n    let true_p = 0\n    let true_e = 0\n\n    let bins = new Array(nbins).fill(0)\n    let binsConstrained = new Array(nbins).fill(0)\n    let binstep = (maax - miin) / nbins\n\n    exactData.forEach(({ p, v }) => {\n      let whichBin = Math.min(Math.trunc((v[0] - miin) / binstep), nbins - 1)\n      bins[whichBin] += p\n\n      if (v.every((val, ix) => ix === 0 || val > thresh[ix])) {\n        binsConstrained[whichBin] += p\n        if (v[0] > thr0) {\n          true_p += p\n          true_e += p * (v[0] - thr0)\n        }\n      }\n    })\n    if (true_p > 0) true_e = true_e / true_p\n\n    let dataExact: ChartData[] = bins.map((dens, ix) => ({ x: perc(miin + ix * binstep), exact: dens / binstep, exactCons: binsConstrained[ix] / binstep }))\n    setTrueP(true_p)\n    setTrueE(true_e)\n    setTrueData(dataExact)\n  }, [calcExacts, maax, miin, thr0, thresh, upgradeOpt, perc]);\n\n  if (trueData.length === 0) {\n    let binstep = (maax - miin) / nbins\n    for (let i = 0; i < nbins; i++) {\n      trueData.push({ x: perc(miin + i * binstep), exact: 0, exactCons: 0 })\n    }\n  }\n\n  // if trueP/E have been calculated, otherwise use upgradeOpt's estimate\n  const reportP = (trueP >= 0) ? trueP : upgradeOpt.prob\n  const reportD = (trueE >= 0) ? trueE : upgradeOpt.upAvg\n  let chartData = dataEst.concat(trueData)\n\n  // console.log('repd', reportD, upgradeOpt.upAvg)\n\n  const CustomTooltip = ({ active, payload, label, }: TooltipProps<string, string>) => {\n    if (!active) return null;\n    // I kinda want the [average increase] to only appear when hovering the white dot.\n    return (\n      <div className=\"custom-tooltip\">\n        <p className=\"label\"></p>\n        <p className=\"desc\">prob. upgrade{trueP >= 0 ? '' : ' (est.)'}: {(100 * reportP).toFixed(1)}%</p>\n        <p className=\"desc\">average increase{trueE >= 0 ? '' : ' (est.)'}: {reportD <= 0 ? \"\" : \"+\"}{(100 * reportD / thr0).toFixed(1)}%</p>\n      </div>\n    )\n  };\n\n  return <CardLight>\n    <CardContent>\n      <ResponsiveContainer width=\"100%\" aspect={2.5} key={upgradeOpt.id}>\n        <ComposedChart data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 20 }}>\n          <XAxis dataKey=\"x\" type=\"number\" domain={['auto', 'auto']} allowDecimals={false} tickFormatter={v => `${v <= 0 ? \"\" : \"+\"}${v}%`} >\n            <Label value='Relative Damage Potential' position='insideBottom' style={{ fill: '#eaebed' }} offset={-10} />\n          </XAxis>\n          <YAxis type=\"number\" domain={[0, ymax]} tick={false} >\n            <Label value='Probability' position='insideLeft' angle={-90} style={{ fill: '#eaebed' }} />\n          </YAxis>\n          <Legend verticalAlign='top' height={36} />\n\n          <defs>\n            <linearGradient id={`splitOpacity${upgradeOpt.id}`} x1=\"0\" y1=\"0\" x2={xpercent} y2=\"0\">\n              <stop offset={1} stopColor='orange' stopOpacity={0} />\n              <stop offset={0} stopColor='orange' stopOpacity={1} />\n            </linearGradient>\n          </defs>\n\n          <Line dataKey=\"dne\" stroke='red' name='Current Damage' />\n          {constrained && !calcExacts && <Area type=\"monotone\" dataKey=\"est\" stroke=\"grey\" dot={false} fill='grey' legendType=\"none\" tooltipType='none' opacity={.5} activeDot={false} />}\n          {constrained && calcExacts && <Area type=\"stepAfter\" dataKey=\"exact\" dot={false} legendType=\"none\" tooltipType='none' opacity={.7} activeDot={false} fill='grey' stroke='grey' />}\n          <Area type=\"monotone\" dataKey=\"estCons\" stroke=\"orange\" dot={false} fill={`url(#splitOpacity${upgradeOpt.id})`} opacity={.5} name={`Estimated Distribution`} activeDot={false} />\n          {calcExacts && <Area type=\"stepAfter\" dataKey=\"exactCons\" dot={false} opacity={.7} name={`Exact${constrained ? ' Constrained' : ''} Distribution (Histogram)`} activeDot={false} />}\n\n          <ReferenceLine x={perc(thr0)} stroke=\"red\" strokeDasharray=\"3 3\" name=\"Current Damage\" />\n          <ReferenceDot x={perc(thr0 + reportD)} y={(gaussConstrained(thr0 + reportD) || ymax) / 2} shape={<circle radius={1} opacity={.5} />} />\n\n          <Tooltip content={<CustomTooltip />} cursor={false} />\n        </ComposedChart>\n      </ResponsiveContainer>\n\n      <Grid direction=\"row\" container spacing={0.75} columns={12}>\n        {artifacts.map(([sk, art]: [SlotKey, ICachedArtifact | undefined]) => {\n          if (sk !== slot)\n            return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><ArtifactCardPico slotKey={sk} artifactObj={art} /></Grid>\n          return <Grid item key={`${sk}_${upgradeOpt.id}`} xs={1}><Button variant='contained' style={{ height: \"100%\", width: '100%' }}\n            onClick={() => setCalcExacts(true)}\n            startIcon={<Box\n              sx={{\n                position: \"absolute\",\n                width: \"70%\", height: \"70%\",\n                left: \"50%\", top: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                opacity: 0.7,\n              }}\n              component=\"img\"\n              src={Assets.slot[sk]}\n            />}\n            sx={{ minWidth: 0 }} />\n          </Grid>\n        })}\n      </Grid>\n\n      <br />\n      <span>Click above to calculate Exact upgrade distribution</span>\n      <br />\n\n    </CardContent>\n  </CardLight>\n}\n","import { faCalculator } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Alert, Box, Button, CardContent, Grid, Link, Skeleton, Typography, Pagination } from '@mui/material';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CardDark from '../../../../Components/Card/CardDark';\nimport CardLight from '../../../../Components/Card/CardLight';\nimport CharacterCard from '../../../../Components/Character/CharacterCard';\nimport StatFilterCard from '../TabOptimize/Components/StatFilterCard';\nimport ArtifactCard from \"../../../../PageArtifact/ArtifactCard\";\nimport BonusStatsCard from '../TabOptimize/Components/BonusStatsCard';\nimport { HitModeToggle, ReactionToggle } from '../../../../Components/HitModeEditor';\nimport OptimizationTargetSelector from '../TabOptimize/Components/OptimizationTargetSelector';\nimport ArtifactSetConfig from '../TabOptimize/Components/ArtifactSetConfig';\n\nimport React, { Suspense, useCallback, useContext, useMemo, useRef, useState } from 'react';\nimport { Trans } from \"react-i18next\";\nimport { DataContext, dataContextObj } from '../../../../Context/DataContext';\nimport { DatabaseContext } from '../../../../Database/Database';\nimport { optimize } from '../../../../Formula/optimization';\nimport { NumNode } from '../../../../Formula/type';\nimport { uiInput as input } from '../../../../Formula/index';\nimport useCharacterReducer from '../../../../ReactHooks/useCharacterReducer';\nimport useCharSelectionCallback from '../../../../ReactHooks/useCharSelectionCallback';\nimport useTeamData, { getTeamData } from '../../../../ReactHooks/useTeamData';\nimport useBuildSetting from '../TabOptimize/useBuildSetting';\nimport { dynamicData } from '../TabOptimize/foreground';\nimport { allSlotKeys, CharacterKey, SlotKey } from '../../../../Types/consts';\nimport { clamp, objectKeyMap, objPathValue } from '../../../../Util/Util';\nimport { mergeData, uiDataForTeam } from '../../../../Formula/api';\nimport { querySetup, evalArtifact, toQueryArtifact, cmpQ, QueryArtifact, QueryBuild, UpgradeOptResult } from './artifactQuery'\nimport UpgradeOptChartCard from \"./UpgradeOptChartCard\"\nimport { CheckBox, CheckBoxOutlineBlank } from '@mui/icons-material';\nimport MainStatSelectionCard from '../TabOptimize/Components/MainStatSelectionCard';\nimport { CharacterContext } from '../../../../Context/CharacterContext';\nimport ArtifactLevelSlider from '../../../../Components/Artifact/ArtifactLevelSlider';\nimport { ICachedArtifact } from '../../../../Types/artifact';\nimport { DynStat } from '../TabOptimize/common';\n\n\nexport default function TabUpopt() {\n  const { character, character: { key: characterKey } } = useContext(CharacterContext)\n  const { database } = useContext(DatabaseContext)\n\n  const characterDispatch = useCharacterReducer(characterKey)\n  const onClickTeammate = useCharSelectionCallback()\n\n  const noArtifact = useMemo(() => !database.arts.values.length, [database])\n\n  const { buildSetting, buildSettingDispatch } = useBuildSetting(characterKey)\n  const { optimizationTarget, levelLow, levelHigh } = buildSetting\n  const teamData = useTeamData(characterKey)\n  const { characterSheet, target: data } = teamData?.[characterKey as CharacterKey] ?? {}\n\n  const [artifactUpgradeOpts, setArtifactUpgradeOpts] = useState(undefined as UpgradeOptResult | undefined)\n\n  const [show20, setShow20] = useState(true)\n  const [check4th, setCheck4th] = useState(true)\n  const [useFilters, setUseMainStatFilter] = useState(false)\n\n  // Because upgradeOpt is a two-stage estimation method, we want to expand (slow-estimate) our artifacts lazily as they are needed.\n  // Lazy method means we need to take care to never 'lift' any artifacts past the current page, since that may cause a user to miss artifacts\n  //  that are lifted in the middle of an expansion. Increase lookahead to mitigate this issue.\n  const upgradeOptExpandSink = useCallback(({ query, arts }: UpgradeOptResult, start: number, expandTo: number): UpgradeOptResult => {\n    const lookahead = 5\n    // if (querySaved === undefined) return upOpt\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .map(art => toQueryArtifact(art, 20))\n\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    const fixedList = arts.slice(0, start)\n    let arr = arts.slice(start)\n\n    let i = 0\n    const end = Math.min(expandTo - start + lookahead, arr.length);\n    do {\n      for (; i < end; i++) {\n        let arti = qaLookup[arr[i].id]\n        if (arti) arr[i] = evalArtifact(query, arti, true, check4th);\n      }\n\n      // sort on only bottom half to prevent lifting\n      arr.sort(cmpQ)\n      for (i = 0; i < end; i++) {\n        if (arr[i].evalMode === 'fast') break\n      }\n    } while (i < end)\n\n    return { query, arts: [...fixedList, ...arr] }\n  }, [database, check4th])\n\n  // Paging logic\n  const [pageIdex, setpageIdex] = useState(0)\n  const invScrollRef = useRef<HTMLDivElement>(null)\n\n  const artifactsToDisplayPerPage = 5;\n  const { artifactsToShow, numPages, currentPageIndex, minObj0, maxObj0 } = useMemo(() => {\n    if (!artifactUpgradeOpts) return { artifactsToShow: [], numPages: 0, toShow: 0, minObj0: 0, maxObj0: 0 }\n    const numPages = Math.ceil(artifactUpgradeOpts.arts.length / artifactsToDisplayPerPage)\n    const currentPageIndex = clamp(pageIdex, 0, numPages - 1)\n    const toShow = artifactUpgradeOpts.arts.slice(currentPageIndex * artifactsToDisplayPerPage, (currentPageIndex + 1) * artifactsToDisplayPerPage)\n    const thr = toShow.length > 0 ? toShow[0].thresholds[0] : 0\n\n    return {\n      artifactsToShow: toShow, numPages, currentPageIndex,\n      minObj0: toShow.reduce((a, b) => Math.min(b.distr.lower, a), thr),\n      maxObj0: toShow.reduce((a, b) => Math.max(b.distr.upper, a), thr)\n    }\n  }, [artifactUpgradeOpts, artifactsToDisplayPerPage, pageIdex])\n\n  const setPage = useCallback(\n    (e, value) => {\n      if (!artifactUpgradeOpts) return\n      invScrollRef.current?.scrollIntoView({ behavior: \"smooth\" })\n      let start = (currentPageIndex + 1) * artifactsToDisplayPerPage\n      let end = value * artifactsToDisplayPerPage\n      let zz = upgradeOptExpandSink(artifactUpgradeOpts, start, end)\n      setArtifactUpgradeOpts(zz)\n      setpageIdex(value - 1);\n    },\n    [setpageIdex, setArtifactUpgradeOpts, invScrollRef, currentPageIndex, artifactsToDisplayPerPage, artifactUpgradeOpts, upgradeOptExpandSink],\n  )\n\n  const generateBuilds = useCallback(async () => {\n    const { statFilters, optimizationTarget, mainStatKeys, levelLow, levelHigh, artSetExclusion } = buildSetting\n\n    if (!characterKey || !optimizationTarget) return\n    const teamData = await getTeamData(database, characterKey, 0, [])\n    if (!teamData) return\n    const workerData = uiDataForTeam(teamData.teamData, characterKey)[characterKey as CharacterKey]?.target.data![0]\n    if (!workerData) return\n    Object.assign(workerData, mergeData([workerData, dynamicData])) // Mark art fields as dynamic\n    let optimizationTargetNode = objPathValue(workerData.display ?? {}, optimizationTarget) as NumNode | undefined\n    if (!optimizationTargetNode) return\n    setArtifactUpgradeOpts(undefined)\n    setpageIdex(0)\n\n    const valueFilter: { value: NumNode, minimum: number }[] = Object.entries(statFilters).map(([key, value]) => {\n      if (key.endsWith(\"_\")) value = value / 100\n      return { value: input.total[key], minimum: value }\n    }).filter(x => x.value && x.minimum > -Infinity)\n\n    const equippedArts = database.chars.get(characterKey)?.equippedArtifacts ?? {} as StrictDict<SlotKey, string>\n    const curEquip: QueryBuild = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art ? toQueryArtifact(art) : undefined\n    })\n    const curEquipSetKeys = objectKeyMap(allSlotKeys, slotKey => {\n      const art = database.arts.get(equippedArts[slotKey] ?? \"\")\n      return art?.setKey ?? ''\n    })\n    function respectSexExclusion(art: ICachedArtifact) {\n      const newSK = { ...curEquipSetKeys }\n      newSK[art.slotKey] = art.setKey\n      const skc: DynStat = {}\n      allSlotKeys.forEach(slotKey => skc[newSK[slotKey]] = (skc[newSK[slotKey]] ?? 0) + 1)\n      let pass = Object.entries(skc).every(([setKey, num]) => {\n        if (!artSetExclusion[setKey]) return true\n        switch (num) {\n          case 0: case 1:\n            return true\n          case 2: case 3:\n            return !artSetExclusion[setKey].includes(2)\n          case 4: case 5:\n            return !artSetExclusion[setKey].includes(4)\n          default:\n            throw Error('error in respectSex: num > 5')\n        }\n      })\n      if (!pass) return false\n\n      if (!artSetExclusion['rainbow']) return true\n      const nRainbow = Object.values(skc).reduce((a, b) => a + (b % 2), 0)\n      switch (nRainbow) {\n        case 0: case 1:\n          return true\n        case 2: case 3:\n          return !artSetExclusion['rainbow'].includes(2)\n        case 4: case 5:\n          return !artSetExclusion['rainbow'].includes(4)\n        default:\n          throw Error('error in respectSex: nRainbow > 5')\n      }\n    }\n\n    const queryArts: QueryArtifact[] = database.arts.values\n      .filter(art => art.rarity === 5)\n      .filter(respectSexExclusion)\n      .filter(art => show20 || art.level !== 20)\n      .filter(art => !useFilters || !mainStatKeys[art.slotKey]?.length || mainStatKeys[art.slotKey]?.includes(art.mainStatKey))\n      .filter(art => !useFilters || (levelLow <= art.level && art.level <= levelHigh))\n      .map(art => toQueryArtifact(art, 20))\n    let qaLookup: Dict<string, QueryArtifact> = {};\n    queryArts.forEach(art => qaLookup[art.id] = art)\n\n    let nodes = [optimizationTargetNode, ...valueFilter.map(x => x.value)]\n    nodes = optimize(nodes, workerData, ({ path: [p] }) => p !== \"dyn\");\n    const query = querySetup(nodes, valueFilter.map(x => x.minimum), curEquip, data);\n    let artUpOpt = queryArts.map(art => evalArtifact(query, art, false, check4th))\n    artUpOpt = artUpOpt.sort((a, b) => b.prob * b.upAvg - a.prob * a.upAvg)\n\n    // Re-sort & slow eval\n    let upOpt = { query: query, arts: artUpOpt }\n    upOpt = upgradeOptExpandSink(upOpt, 0, 5)\n    setArtifactUpgradeOpts(upOpt);\n    console.log('result', upOpt)\n  }, [show20, check4th, useFilters, characterKey, buildSetting, data, database, setArtifactUpgradeOpts, setpageIdex, upgradeOptExpandSink])\n\n  const dataContext: dataContextObj | undefined = useMemo(() => {\n    return character && data && characterSheet && teamData && {\n      data,\n      characterSheet,\n      character,\n      mainStatAssumptionLevel: 0,\n      teamData,\n      characterDispatch\n    }\n  }, [data, characterSheet, character, teamData, characterDispatch])\n\n  return <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n    {noArtifact && <Alert severity=\"warning\" variant=\"filled\"> Opps! It looks like you haven't added any artifacts to GO yet! You should go to the <Link component={RouterLink} to=\"/artifact\">Artifacts</Link> page and add some!</Alert>}\n    {/* Build Generator Editor */}\n    {dataContext && <DataContext.Provider value={dataContext}>\n      <Grid container spacing={1} >\n        {/* 1*/}\n        <Grid item xs={12} sm={6} lg={3} display=\"flex\" flexDirection=\"column\" gap={1}>\n          {/* character card */}\n          <Box><CharacterCard characterKey={characterKey} onClickTeammate={onClickTeammate} /></Box>\n          <BonusStatsCard />\n        </Grid>\n\n        {/* 2 */}\n        <Grid item xs={12} sm={6} lg={9} display=\"flex\" flexDirection=\"column\" gap={1}>\n          <Grid container spacing={1}>\n            <Grid item lg={4} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <span>Optimization Target: </span>\n                  {<OptimizationTargetSelector\n                    optimizationTarget={optimizationTarget}\n                    setTarget={target => buildSettingDispatch({ optimizationTarget: target })}\n                    disabled={false}\n                  />}\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <StatFilterCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              {useFilters && <CardLight>\n                <CardContent sx={{ py: 1 }}>\n                  Artifact Level Filter\n                </CardContent>\n                <ArtifactLevelSlider levelLow={levelLow} levelHigh={levelHigh}\n                  setLow={levelLow => buildSettingDispatch({ levelLow })}\n                  setHigh={levelHigh => buildSettingDispatch({ levelHigh })}\n                  setBoth={(levelLow, levelHigh) => buildSettingDispatch({ levelLow, levelHigh })}\n                  disabled={false}\n                />\n                <CardContent>\n                  <MainStatSelectionCard disabled={false} />\n                </CardContent>\n              </CardLight>\n              }\n            </Grid>\n            <Grid item lg={8} display=\"flex\" flexDirection=\"column\" gap={1}>\n              <CardLight>\n                <CardContent>\n                  <ArtifactSetConfig disabled={false} />\n                </CardContent>\n              </CardLight>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item><Button startIcon={show20 ? <CheckBox /> : <CheckBoxOutlineBlank />} color={show20 ? 'success' : 'secondary'} onClick={() => setShow20(!show20)}>show lvl 20</Button></Grid>\n                    <Grid item><Button startIcon={check4th ? <CheckBox /> : <CheckBoxOutlineBlank />} color={check4th ? 'success' : 'secondary'} onClick={() => setCheck4th(!check4th)}>compute 4th sub</Button></Grid>\n                    <Grid item><Button startIcon={useFilters ? <CheckBox /> : <CheckBoxOutlineBlank />} color={useFilters ? 'success' : 'secondary'} onClick={() => setUseMainStatFilter(!useFilters)}>enable filters</Button></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n          </Grid>\n          <Grid container spacing={1}>\n            <Grid item lg={12}>\n              <CardLight>\n                <CardContent>\n                  <Grid container spacing={1}>\n                    <Grid item>\n                      <Button\n                        disabled={!characterKey || !optimizationTarget || !objPathValue(data?.getDisplay(), optimizationTarget)}\n                        color={(characterKey) ? \"success\" : \"warning\"}\n                        onClick={generateBuilds}\n                        startIcon={<FontAwesomeIcon icon={faCalculator} />}\n                      >Calc Upgrade Priority</Button>\n                    </Grid>\n                    <Grid item><HitModeToggle size=\"small\" /></Grid>\n                    <Grid item><ReactionToggle size=\"small\" /></Grid>\n                  </Grid>\n                </CardContent>\n              </CardLight>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n\n            <Grid item lg={12} spacing={1}>\n              <Grid container display=\"flex\" flexDirection=\"column\" gap={1}>\n                {noArtifact && <Alert severity=\"info\" variant=\"filled\">Looks like you haven't added any artifacts yet. If you want, there are <Link color=\"warning.main\" component={RouterLink} to=\"/scanner\">automatic scanners</Link> that can speed up the import process!</Alert>}\n                <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: 600, minHeight: 5000 }} />}>\n                  {/* <Grid item display=\"flex\" flexDirection=\"column\" gap={1}> */}\n                  {artifactsToShow.map(art =>\n                    <Grid container key={art.id + 'asdfsf'} spacing={1}>\n                      <Grid item xs={5} sm={4} md={4} lg={3} xl={3} >\n                        <ArtifactCard artifactId={art.id} editor />\n                      </Grid>\n                      <Grid item xs={7} sm={8} md={8} lg={9} xl={9}>\n                        <UpgradeOptChartCard upgradeOpt={art} objMax={maxObj0} objMin={minObj0} />\n                      </Grid>\n                    </Grid>\n                  )}\n                  {/* </Grid> */}\n                </Suspense>\n              </Grid>\n            </Grid>\n\n            {numPages > 1 && <CardDark ><CardContent>\n              <Grid container>\n                <Grid item flexGrow={1}>\n                  <Pagination count={numPages} page={currentPageIndex + 1} onChange={setPage} />\n                </Grid>\n                <Grid item>\n                  <ShowingArt numShowing={artifactsToShow.length} total={artifactUpgradeOpts?.arts.length} />\n                </Grid>\n              </Grid>\n            </CardContent></CardDark>}\n          </Grid>\n        </Grid>\n      </Grid>\n    </DataContext.Provider>\n    }\n  </Box >\n}\n\nfunction ShowingArt({ numShowing, total }) {\n  return <Typography color=\"text.secondary\">\n    <Trans i18nKey=\"showingNum\" count={numShowing} value={total} >\n      Showing <b>{{ count: numShowing }}</b> out of {{ value: total }} Artifacts\n    </Trans>\n  </Typography>\n}\n","import { MenuItem } from '@mui/material';\nimport { useContext } from 'react';\nimport ColorText from '../../Components/ColoredText';\nimport DropdownButton from '../../Components/DropdownMenu/DropdownButton';\nimport { CharacterContext } from '../../Context/CharacterContext';\nimport { sgt } from '../../Data/SheetUtil';\n\nexport default function TravelerElementSelect() {\n  const { character, characterSheet, characterDispatch } = useContext(CharacterContext)\n  const { elementKey = \"anemo\", } = character\n\n  if (!(\"talents\" in characterSheet.sheet)) return null\n\n  return <DropdownButton color={elementKey} title={<strong>{sgt(`element.${elementKey}`)}</strong>}>\n    {Object.keys(characterSheet.sheet.talents).map(eleKey =>\n      <MenuItem key={eleKey} selected={elementKey === eleKey} disabled={elementKey === eleKey} onClick={() => characterDispatch({ elementKey: eleKey })}>\n        <strong><ColorText color={eleKey}>{sgt(`element.${eleKey}`)}</ColorText></strong></MenuItem>)}\n  </DropdownButton>\n}\n","import { BarChart, Calculate, FactCheck, Groups, Person, TrendingUp } from '@mui/icons-material';\nimport { Box, Button, CardContent, Skeleton, Tab, Tabs } from '@mui/material';\nimport { Suspense, useCallback, useContext, useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link as RouterLink, Navigate, Route, Routes, useMatch, useNavigate, useParams } from 'react-router-dom';\nimport CardDark from '../../Components/Card/CardDark';\nimport CardLight from '../../Components/Card/CardLight';\nimport CloseButton from '../../Components/CloseButton';\nimport { HitModeToggle, InfusionAuraDropdown, ReactionToggle } from '../../Components/HitModeEditor';\nimport { CharacterContext, CharacterContextObj } from '../../Context/CharacterContext';\nimport { DataContext, dataContextObj } from '../../Context/DataContext';\nimport { FormulaDataContext, FormulaDataWrapper } from '../../Context/FormulaDataContext';\nimport CharacterSheet from '../../Data/Characters/CharacterSheet';\nimport useBoolState from '../../ReactHooks/useBoolState';\nimport useCharacter from '../../ReactHooks/useCharacter';\nimport useCharacterReducer from '../../ReactHooks/useCharacterReducer';\nimport usePromise from '../../ReactHooks/usePromise';\nimport useTeamData from '../../ReactHooks/useTeamData';\nimport useTitle from '../../ReactHooks/useTitle';\nimport { allCharacterKeys, CharacterKey } from '../../Types/consts';\nimport { CustomMultiTargetButton } from '../CustomMultiTarget';\nimport CharSelectDropdown from './CharSelectDropdown';\nimport FormulaModal from './FormulaModal';\nimport LevelSelect from '../../Components/LevelSelect';\nimport StatModal from './StatModal';\nimport TabBuild from './Tabs/TabOptimize';\nimport TabOverview from './Tabs/TabOverview';\nimport TabTalent from './Tabs/TabTalent';\nimport TabTeambuffs from './Tabs/TabTeambuffs';\nimport TabUpopt from './Tabs/TabUpgradeOpt';\nimport TravelerElementSelect from './TravelerElementSelect';\n\nexport default function CharacterDisplay() {\n  const navigate = useNavigate();\n  const onClose = useCallback(() => navigate(\"/characters\"), [navigate])\n  let { characterKey } = useParams<{ characterKey?: CharacterKey }>();\n  const invalidKey = !allCharacterKeys.includes(characterKey as any ?? \"\")\n  if (invalidKey)\n    return <Navigate to=\"/characters\" />\n\n  return <Box my={1} display=\"flex\" flexDirection=\"column\" gap={1}>\n    <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={1000} />}>\n      {characterKey && <CharacterDisplayCard characterKey={characterKey} onClose={onClose} />}\n    </Suspense>\n  </Box>\n}\n\ntype CharacterDisplayCardProps = {\n  characterKey: CharacterKey,\n  onClose?: () => void,\n}\nfunction CharacterDisplayCard({ characterKey, onClose }: CharacterDisplayCardProps) {\n  const character = useCharacter(characterKey)\n  const characterSheet = usePromise(() => CharacterSheet.get(characterKey), [characterKey])\n  const teamData = useTeamData(characterKey)\n  const { target: charUIData } = teamData?.[characterKey] ?? {}\n  let { params: { tab = \"overview\" } } = useMatch({ path: \"/characters/:charKey/:tab\", end: false }) ?? { params: { tab: \"overview\" } }\n  const { t } = useTranslation()\n  useTitle(`${t(`char_${characterKey}_gen:name`)} - ${t(`page_character:tabs.${tab}`)}`)\n  const characterDispatch = useCharacterReducer(character?.key ?? \"\")\n\n  const dataContextValue: dataContextObj | undefined = useMemo(() => {\n    if (!teamData || !charUIData) return undefined\n    return {\n      data: charUIData,\n      teamData,\n      oldData: undefined,\n    }\n  }, [charUIData, teamData])\n\n  const characterContextValue: CharacterContextObj | undefined = useMemo(() => {\n    if (!character || !characterSheet) return undefined\n    return {\n      character,\n      characterSheet,\n      characterDispatch\n    }\n  }, [character, characterSheet, characterDispatch])\n  return <CardDark >\n    {dataContextValue && characterContextValue ? <CharacterContext.Provider value={characterContextValue}><DataContext.Provider value={dataContextValue}>\n      <FormulaDataWrapper><CardContent sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n        <Box display=\"flex\" >\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" flexGrow={1}>\n            <CharSelectDropdown />\n            <TravelerElementSelect />\n            <DetailStatButton />\n            <CustomMultiTargetButton />\n            <FormulasButton />\n          </Box>\n          {!!onClose && <CloseButton onClick={onClose} />}\n        </Box>\n        <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\n          {character && <LevelSelect level={character.level} ascension={character.ascension} setBoth={characterDispatch} />}\n          <HitModeToggle size=\"small\" />\n          <InfusionAuraDropdown />\n          <ReactionToggle size=\"small\" />\n        </Box>\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n        <CharacterPanel />\n        <CardLight>\n          <TabNav tab={tab} />\n        </CardLight>\n      </CardContent></FormulaDataWrapper>\n    </DataContext.Provider></CharacterContext.Provider> : <Skeleton variant='rectangular' width='100%' height={1000} />\n    }\n  </CardDark >\n}\nfunction CharacterPanel() {\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" width=\"100%\" height={500} />}>\n    <Routes>\n      {/* Character Panel */}\n      <Route index element={<TabOverview />} />\n      <Route path=\"/talent\" element={<TabTalent />} />\n      <Route path=\"/teambuffs\" element={<TabTeambuffs />} />\n      <Route path=\"/optimize\" element={<TabBuild />} />\n      <Route path=\"/upgradeOpt\" element={<TabUpopt />} />\n    </Routes>\n  </Suspense>\n}\nfunction TabNav({ tab }: { tab: string }) {\n  const { t } = useTranslation(\"page_character\")\n  return <Tabs\n    value={tab}\n    variant=\"scrollable\"\n    allowScrollButtonsMobile\n    sx={{\n      \"& .MuiTab-root:hover\": {\n        transition: \"background-color 0.25s ease\",\n        backgroundColor: \"rgba(255,255,255,0.1)\"\n      },\n    }}\n  >\n    <Tab sx={{ minWidth: \"20%\" }} value=\"overview\" label={t(\"tabs.overview\")} icon={<Person />} component={RouterLink} to=\"\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"talent\" label={t(\"tabs.talent\")} icon={<FactCheck />} component={RouterLink} to=\"talent\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"teambuffs\" label={t(\"tabs.teambuffs\")} icon={<Groups />} component={RouterLink} to=\"teambuffs\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"optimize\" label={t(\"tabs.optimize\")} icon={<TrendingUp />} component={RouterLink} to=\"optimize\" />\n    <Tab sx={{ minWidth: \"20%\" }} value=\"upgradeOpt\" label={t(\"tabs.upgradeOpt\")} icon={<Calculate />} component={RouterLink} to=\"upgradeOpt\" />\n  </Tabs>\n}\n\n\nfunction DetailStatButton() {\n  const [open, onOpen, onClose] = useBoolState()\n  return <>\n    <Button color=\"info\" startIcon={<BarChart />} onClick={onOpen}>Detailed Stats</Button>\n    <StatModal open={open} onClose={onClose} />\n  </>\n}\nfunction FormulasButton() {\n  const { onModalOpen } = useContext(FormulaDataContext)\n  return <>\n    <Button color=\"info\" startIcon={<Calculate />} onClick={onModalOpen}>Formulas {\"&\"} Calcs</Button>\n    <FormulaModal />\n  </>\n}\n","import { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardActionArea, CardContent, IconButton, Skeleton, Tooltip, Typography } from \"@mui/material\"\nimport { Suspense, useCallback, useContext, useMemo } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport Assets from \"../Assets/Assets\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from '../Components/Character/CharacterAutocomplete'\nimport LocationName from \"../Components/Character/LocationName\"\nimport ConditionalWrapper from \"../Components/ConditionalWrapper\"\nimport ImgIcon from \"../Components/Image/ImgIcon\"\nimport { StarsDisplay } from \"../Components/StarDisplay\"\nimport StatIcon from \"../Components/StatIcon\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport KeyMap, { valueString } from \"../KeyMap\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\n\ntype WeaponCardProps = { weaponId: string, onClick?: (weaponId: string) => void, onEdit?: (weaponId: string) => void, onDelete?: (weaponId: string) => void, canEquip?: boolean, extraButtons?: JSX.Element }\nexport default function WeaponCard({ weaponId, onClick, onEdit, onDelete, canEquip = false, extraButtons }: WeaponCardProps) {\n  const { t } = useTranslation([\"page_weapon\", \"ui\"]);\n  const { database } = useContext(DatabaseContext)\n  const databaseWeapon = useWeapon(weaponId)\n  const weapon = databaseWeapon\n  const weaponSheet = usePromise(() => weapon?.key ? WeaponSheet.get(weapon.key) : undefined, [weapon?.key])\n\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const wrapperFunc = useCallback(children => <CardActionArea onClick={() => onClick?.(weaponId)} >{children}</CardActionArea>, [onClick, weaponId],)\n  const falseWrapperFunc = useCallback(children => <Box >{children}</Box>, [])\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => database.weapons.set(weaponId, { location: charKey }), [database, weaponId],)\n\n  const UIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n\n  if (!weapon || !weaponSheet || !UIData) return null;\n  const { level, ascension, refinement, id, location = \"\", lock } = weapon\n  const weaponTypeKey = UIData.get(input.weapon.type).value!\n  const stats = [input.weapon.main, input.weapon.sub, input.weapon.sub2].map(x => UIData.get(x))\n  const img = weaponSheet.getImg(ascension)\n\n  return <Suspense fallback={<Skeleton variant=\"rectangular\" sx={{ width: \"100%\", height: \"100%\", minHeight: 300 }} />}>\n    <CardLight sx={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", justifyContent: \"space-between\" }}>\n      <ConditionalWrapper condition={!!onClick} wrapper={wrapperFunc} falseWrapper={falseWrapperFunc}>\n        <Box className={`grad-${weaponSheet.rarity}star`} sx={{ position: \"relative\", pt: 2, px: 2, }}>\n          {!onClick && <IconButton color=\"primary\" onClick={() => database.weapons.set(id, { lock: !lock })} sx={{ position: \"absolute\", right: 0, bottom: 0, zIndex: 2 }}>\n            {lock ? <Lock /> : <LockOpen />}\n          </IconButton>}\n          <Box sx={{ position: \"relative\", zIndex: 1 }}>\n            <Box component=\"div\" sx={{ display: \"flex\", alignItems: \"center\", gap: 1, mb: 1 }}>\n              <ImgIcon sx={{ fontSize: \"1.5em\" }} src={Assets.weaponTypes?.[weaponTypeKey]} />\n              <Typography noWrap sx={{ textAlign: \"center\", backgroundColor: \"rgba(100,100,100,0.35)\", borderRadius: \"1em\", px: 1 }}><strong>{weaponSheet.name}</strong></Typography>\n            </Box>\n            <Typography component=\"span\" variant=\"h5\">Lv. {level}</Typography>\n            <Typography component=\"span\" variant=\"h5\" color=\"text.secondary\">/{ascensionMaxLevel[ascension]}</Typography>\n            <Typography variant=\"h6\">Refinement <strong>{refinement}</strong></Typography>\n            <Typography><StarsDisplay stars={weaponSheet.rarity} colored /></Typography>\n          </Box>\n          <Box sx={{ height: \"100%\", position: \"absolute\", right: 0, top: 0 }}>\n            <Box\n              component=\"img\"\n              src={img ?? \"\"}\n              width=\"auto\"\n              height=\"100%\"\n              sx={{ float: \"right\" }}\n            />\n          </Box>\n        </Box>\n        <CardContent>\n          {stats.map(node => {\n            if (!node.info.key) return null\n            const displayVal = valueString(node.value, node.unit, !node.unit ? 0 : undefined)\n            return <Box key={node.info.key} sx={{ display: \"flex\" }}>\n              <Typography flexGrow={1}>{StatIcon[node.info.key!]} {KeyMap.get(node.info.key)}</Typography>\n              <Typography>{displayVal}</Typography>\n            </Box>\n          })}\n        </CardContent>\n      </ConditionalWrapper>\n      <Box sx={{ p: 1, display: \"flex\", gap: 1, justifyContent: \"space-between\", alignItems: \"center\" }}>\n        {canEquip\n          ? <CharacterAutocomplete size=\"small\" sx={{ flexGrow: 1 }} disable={(v: any) => v === \"\"}\n            showDefault defaultIcon={<BusinessCenter />} defaultText={t(\"ui:inventory\")}\n            value={location} onChange={equipOnChar} filter={filter} disableClearable />\n          : <LocationName location={location} />}\n        <ButtonGroup>\n          {!!onEdit && <Tooltip title={<Typography>{t`page_weapon:edit`}</Typography>} placement=\"top\" arrow>\n            <Button color=\"info\" onClick={() => onEdit(id)} >\n              <FontAwesomeIcon icon={faEdit} className=\"fa-fw\" />\n            </Button>\n          </Tooltip>}\n          {!!onDelete && <Button color=\"error\" onClick={() => onDelete(id)} disabled={!!location || lock} >\n            <FontAwesomeIcon icon={faTrashAlt} className=\"fa-fw\" />\n          </Button>}\n          {extraButtons}\n        </ButtonGroup>\n      </Box>\n    </CardLight>\n  </Suspense>\n}\n","import { strPadLeft } from \"./Util\"\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = 60 * SECOND_MS\nexport const HOUR_MS = 60 * MINUTE_MS\nexport const DAY_MS = 24 * HOUR_MS\n\nexport function msToUnits(ms: number) {\n  let milliseconds = ms % 1000\n  let seconds = Math.floor((ms / 1000) % 60)\n  let minutes = Math.floor((ms / (1000 * 60)) % 60)\n  let hours = Math.floor((ms / (1000 * 60 * 60)))\n  return { hours, minutes, seconds, milliseconds }\n}\nexport function timeString(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)} ${timeText}`;\n}\nexport function timeStringMs(ms: number) {\n  //shows only in terms of hours/minutes. there are better calculations for days using Date functions.\n  let { hours, minutes, seconds, milliseconds } = msToUnits(ms)\n  let timeText = \"Minutes\"\n  if (hours) timeText = \"Hours\"\n  return `${hours ? `${hours}:` : \"\"}${strPadLeft(minutes, '0', 2)}:${strPadLeft(seconds, '0', 2)}.${strPadLeft(milliseconds, '0', 3)} ${timeText}`;\n}\n","import { WeaponKey } from \"../Types/consts\";\nimport { ICachedWeapon } from \"../Types/weapon\";\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\";\nimport { FilterConfigs, SortConfigs } from \"./SortByFilters\";\nimport i18n from \"../i18n\";\nexport const weaponSortKeys = [\"level\", \"rarity\"]\nexport type WeaponSortKey = typeof weaponSortKeys[number]\n\nexport function weaponSortConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): SortConfigs<WeaponSortKey, ICachedWeapon> {\n  return {\n    level: {\n      getValue: wp => wp.level * wp.ascension ?? 0,\n      tieBreaker: \"rarity\"\n    },\n    rarity: {\n      getValue: wp => weaponSheets?.[wp.key]?.rarity,\n      tieBreaker: \"level\"\n    }\n  }\n}\nexport function weaponFilterConfigs(weaponSheets: Record<WeaponKey, WeaponSheet>): FilterConfigs<\"rarity\" | \"weaponType\" | \"name\", ICachedWeapon> {\n  return {\n    rarity: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.rarity),\n    weaponType: (wp, filter) => filter.includes(weaponSheets?.[wp.key]?.weaponType),\n    // TODO: Add types to this. filter may or may not be an array?\n    name: (wp, filter) => i18n.t(`weaponNames_gen:${wp.key}`).toLowerCase().includes(filter.toLowerCase()),\n  }\n}\n","var Module=typeof Module!==\"undefined\"?Module:{};var objAssign=Object.assign;var moduleOverrides=objAssign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window===\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";var ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\";var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err(\"exiting due to exception: \"+toLog)}var fs;var nodePath;var requireNodeFS;if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require(\"path\").dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}requireNodeFS=(()=>{if(!nodePath){fs=require(\"fs\");nodePath=require(\"path\")}});read_=function shell_read(filename,binary){requireNodeFS();filename=nodePath[\"normalize\"](filename);return fs.readFileSync(filename,binary?null:\"utf8\")};readBinary=(filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret});readAsync=((filename,onload,onerror)=>{requireNodeFS();filename=nodePath[\"normalize\"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})});if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);if(typeof module!==\"undefined\"){module[\"exports\"]=Module}process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",function(reason){throw reason});quit_=((status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)});Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!==\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText});if(ENVIRONMENT_IS_WORKER){readBinary=(url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)})}readAsync=((url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=(()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()});xhr.onerror=onerror;xhr.send(null)})}setWindowTitle=(title=>document.title=title)}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);objAssign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var POINTER_SIZE=4;function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text)}}function convertJsFunctionToWasm(func,sig){if(typeof WebAssembly.Function===\"function\"){var typeNames={\"i\":\"i32\",\"j\":\"i64\",\"f\":\"f32\",\"d\":\"f64\"};var type={parameters:[],results:sig[0]==\"v\"?[]:[typeNames[sig[0]]]};for(var i=1;i<sig.length;++i){type.parameters.push(typeNames[sig[i]])}return new WebAssembly.Function(type,func)}var typeSection=[1,0,1,96];var sigRet=sig.slice(0,1);var sigParam=sig.slice(1);var typeCodes={\"i\":127,\"j\":126,\"f\":125,\"d\":124};typeSection.push(sigParam.length);for(var i=0;i<sigParam.length;++i){typeSection.push(typeCodes[sigParam[i]])}if(sigRet==\"v\"){typeSection.push(0)}else{typeSection=typeSection.concat([1,typeCodes[sigRet]])}typeSection[1]=typeSection.length-2;var bytes=new Uint8Array([0,97,115,109,1,0,0,0].concat(typeSection,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));var module=new WebAssembly.Module(bytes);var instance=new WebAssembly.Instance(module,{\"e\":{\"f\":func}});var wrappedFunc=instance.exports[\"f\"];return wrappedFunc}var freeTableIndexes=[];var functionsInTableMap;function getEmptyTableSlot(){if(freeTableIndexes.length){return freeTableIndexes.pop()}try{wasmTable.grow(1)}catch(err){if(!(err instanceof RangeError)){throw err}throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\"}return wasmTable.length-1}function updateTableMap(offset,count){for(var i=offset;i<offset+count;i++){var item=getWasmTableEntry(i);if(item){functionsInTableMap.set(item,i)}}}var tempRet0=0;var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!==\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(text)}}function getCFunc(ident){var func=Module[\"_\"+ident];return func}function ccall(ident,returnType,argTypes,args,opts){var toC={\"string\":function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret},\"array\":function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}};function convertReturnValue(ret){if(returnType===\"string\")return UTF8ToString(ret);if(returnType===\"boolean\")return Boolean(ret);return ret}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);function onDone(ret){if(stack!==0)stackRestore(stack);return convertReturnValue(ret)}ret=onDone(ret);return ret}var ALLOC_STACK=1;var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heap,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heap[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heap.subarray&&UTF8Decoder){return UTF8Decoder.decode(heap.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=heap[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heap[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heap[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heap[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder){return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr))}else{var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}}function stringToUTF16(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module[\"HEAP8\"]=HEAP8=new Int8Array(buf);Module[\"HEAP16\"]=HEAP16=new Int16Array(buf);Module[\"HEAP32\"]=HEAP32=new Int32Array(buf);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buf);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buf);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buf);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buf);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buf)}var INITIAL_MEMORY=Module[\"INITIAL_MEMORY\"]||16777216;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;var runtimeKeepaliveCounter=0;function keepRuntimeAlive(){return noExitRuntime||runtimeKeepaliveCounter>0}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function exitRuntime(){runtimeExited=true}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};function abort(what){{if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -s ASSERTIONS=1 for more info.\";var e=new WebAssembly.RuntimeError(what);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}var wasmBinaryFile;wasmBinaryFile=\"assembly.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch===\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":asmLibraryArg,\"wasi_snapshot_preview1\":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module[\"asm\"][\"__indirect_function_table\"];addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}instantiateAsync();return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback(Module);continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){getWasmTableEntry(func)()}else{getWasmTableEntry(func)(callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}function demangle(func){return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func}function jsStackTrace(){var error=new Error;if(!error.stack){try{throw new Error}catch(e){error=e}if(!error.stack){return\"(no stack trace available)\"}}return error.stack.toString()}function setWasmTableEntry(idx,func){wasmTable.set(idx,func);wasmTableMirror[idx]=func}function ___cxa_allocate_exception(size){return _malloc(size+16)+16}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-16;this.set_type=function(type){HEAP32[this.ptr+4>>2]=type};this.get_type=function(){return HEAP32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAP32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAP32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationGroup=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationGroup){attachFinalizer=(handle=>handle);return handle}finalizationGroup=new FinalizationGroup(function(iter){for(var result=iter.next();!result.done;result=iter.next()){var $$=result.value;if(!$$.ptr){console.warn(\"object already deleted: \"+$$.ptr)}else{releaseClassHandle($$)}}});attachFinalizer=(handle=>{finalizationGroup.register(handle,handle.$$,handle.$$);return handle});detachFinalizer=(handle=>{finalizationGroup.unregister(handle.$$)});return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}return getWasmTableEntry(ptr).apply(null,args)}function getDynCaller(sig,ptr){var argCache=[];return function(){argCache.length=arguments.length;for(var i=0;i<arguments.length;i++){argCache[i]=arguments[i]}return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=(()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)});whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])},enumerable:true,configurable:true};if(setter){desc.set=(()=>{throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(v=>{throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],function(types){var getterReturnType=types[0];var desc={get:function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)}}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:function(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:function(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=(value=>value<<bitshift>>>bitshift)}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(()=>lengthBytesUTF8(value))}else{getLength=(()=>value.length)}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=(()=>HEAPU16);shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=(()=>HEAPU32);shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value===\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function _abort(){abort(\"\")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize)}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var ASSERTIONS=false;var asmLibraryArg={\"__cxa_allocate_exception\":___cxa_allocate_exception,\"__cxa_throw\":___cxa_throw,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_class_property\":__embind_register_class_property,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_void\":__embind_register_void,\"abort\":_abort,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap};var asm=createWasm();var ___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=function(){return(___wasm_call_ctors=Module[\"___wasm_call_ctors\"]=Module[\"asm\"][\"__wasm_call_ctors\"]).apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return(_malloc=Module[\"_malloc\"]=Module[\"asm\"][\"malloc\"]).apply(null,arguments)};var _free=Module[\"_free\"]=function(){return(_free=Module[\"_free\"]=Module[\"asm\"][\"free\"]).apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return(___getTypeName=Module[\"___getTypeName\"]=Module[\"asm\"][\"__getTypeName\"]).apply(null,arguments)};var ___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=function(){return(___embind_register_native_and_builtin_types=Module[\"___embind_register_native_and_builtin_types\"]=Module[\"asm\"][\"__embind_register_native_and_builtin_types\"]).apply(null,arguments)};var ___errno_location=Module[\"___errno_location\"]=function(){return(___errno_location=Module[\"___errno_location\"]=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};var stackSave=Module[\"stackSave\"]=function(){return(stackSave=Module[\"stackSave\"]=Module[\"asm\"][\"stackSave\"]).apply(null,arguments)};var stackRestore=Module[\"stackRestore\"]=function(){return(stackRestore=Module[\"stackRestore\"]=Module[\"asm\"][\"stackRestore\"]).apply(null,arguments)};var stackAlloc=Module[\"stackAlloc\"]=function(){return(stackAlloc=Module[\"stackAlloc\"]=Module[\"asm\"][\"stackAlloc\"]).apply(null,arguments)};var calledRun;function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function procExit(code){EXITSTATUS=code;if(!keepRuntimeAlive()){if(Module[\"onExit\"])Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\nexport {Module};\n"],"names":["ArtifactLevelSlider","levelLow","levelHigh","setLow","setHigh","setBoth","dark","disabled","showLevelText","useState","sliderLow","setsliderLow","sliderHigh","setsliderHigh","setSlider","useCallback","e","value","TypeError","l","h","useEffect","sx","width","display","alignItems","bgcolor","onChange","val","clamp","px","pl","undefined","inputProps","textAlign","startAdornment","flexGrow","mx","getAriaLabel","onChangeCommitted","valueLabelDisplay","min","max","step","marks","CardHeaderCustom","avatar","title","action","gap","p","variant","ConditionalSelector","conditional","Object","keys","states","length","SimpleConditionalSelector","ExclusiveConditionalSelector","MultipleConditionalSelector","useContext","CharacterContext","character","characterDispatch","data","DataContext","setConditional","v","conditionalValues","deepClone","layeredAssignment","path","deletePropPath","conditionalValue","get","entries","stateKey","badge","getStateBadge","name","condName","getCondName","Button","fullWidth","size","borderRadius","color","onClick","startIcon","CheckBox","CheckBoxOutlineBlank","state","SqBadge","DropdownButton","MenuItem","selected","Divider","map","st","ButtonGroup","orientation","disableElevation","isSelected","isElement","disp","stateName","badgeColor","badgeText","props","children","ml","key","key18","ns","values","Translate","useBadge","ConditionalDisplay","fields","hideHeader","hideDesc","condVal","flatMap","CardDark","evalIfFunc","HeaderDisplay","header","CardContent","pb","DocumentDisplay","sections","teamBuffOnly","sectionDisplays","s","i","canShow","teamBuff","SectionDisplay","section","filter","Box","flexDirection","FieldsSectionDisplay","TextSectionDisplay","hideDivider","text","icon","description","displayTitle","InfoTooltip","Typography","LevelSelect","level","ascension","useLow","t","useTranslation","ascensionMaxLevels","ascensionMaxLevelLow","ascensionMaxLevel","setLevel","maxLevelLow","maxLevel","findIndex","ascenML","setAscension","lowerAscension","palette","contentDark","main","height","whiteSpace","ambiguousLevelLow","ambiguousLevel","milestoneLevelsLow","milestoneLevels","lv","as","DisabledButton","styled","theme","backgroundColor","primary","secondary","TextButton","CharSelectDropdown","characterSheet","showModal","setshowModal","setCharacter","useCharSelectionCallback","CharacterSelectionModal","show","onHide","onSelect","ThumbSide","src","thumbImgSide","FormulaModal","modalOpen","FormulaDataContext","setFormulaData","onCloseHandler","ModalWrapper","open","onClose","CardHeader","CloseButton","pt","CalculationDisplay","contextData","getDisplaySections","Suspense","fallback","Skeleton","mr","mb","Nodes","FormulaCalc","displayNs","sectionKey","usePromise","getDisplayHeader","every","isEmpty","CardLight","ImgIcon","m","node","FormulaAccordian","contextNode","expanded","setExpanded","handleChange","isExpanded","scrollRef","useRef","setTimeout","current","scrollIntoView","behavior","Accordion","ref","AccordionSummary","expandIcon","ExpandMore","info","KeyMap","valueString","unit","allAmpReactions","AmpReactionModeText","reaction","trigger","subVariant","AccordionDetails","formulas","subform","expand","other","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","FlexButtonGroup","StatInput","placeholder","defaultValue","onValueChange","percent","onReset","restProps","CustomNumberInput","flexBasis","float","endAdornment","flexShrink","Replay","EnemyExpandCard","setexpanded","toggle","eLvlNode","input","eDefRed","eDefIgn","Grid","container","spacing","item","Chip","label","allElementsWithPhy","element","EnemyResText","Collapse","in","timeout","unmountOnExit","EnemyEditor","content","isFinite","uncoloredEleIcons","bsProps","xs","md","enemyOverride","eLvl","enemyLevel","enemyDefIgn_","enemyDefRed_","component","href","target","rel","contentLight","type","statKey","eleKey","elementImmunity","Number","MAX_VALUE","Infinity","cols","lg","StatModal","Stack","BonusStatsEditor","MainStatsCards","allInputPremodKeys","wrapperFunc","bonusStats","setFilter","columns","StatEditorList","statKeys","statFilters","setStatFilters","mainSubKeys","mainReadNodes","k","mainEditKeys","otherStatKeys","allEleDmgKeys","allEleResKeys","miscStatkeys","includes","StatDisplayContent","nodes","extra","oldData","FieldDisplay","rn","ListItem","oldValue","elementKey","specialNode","charEle","isMelee","otherStatReadNodes","useMemo","eles","allElements","concat","n","some","miscStatReadNodes","StatDisplayCard","justifyContent","StatIcon","py","Worker_fn","Worker","makeid","disallowed","characters","charactersLength","_","result","charAt","Math","floor","random","Error","readKey","operation","operands","accu","isShallow","f","deleteKey","a","base","flower","forEach","art","plume","sands","goblet","circlet","collapseAffine","allKeys","addedRegisters","distributeProd","branch","bval","ge","lt","cmp","foldProd","constant","source","console","log","sum","ni","newID","coeff","sumKeys","newNodes","mapFormulas","fMops","toFold","orig","reduce","todistrib","mapped","pop","prod","fAops","goodboyes","nofold","tofold","tot","instKeys","Set","resolveStack","shift","has","push","getV","stats","add","unusedKeys","forEachNodes","delete","elimLinDepStats","statsMin","statsMax","sets","j","set","slotUpperLower","smin","smax","sk","statsUpperLower","lower","upper","fixedStats","f2","foldSum","branchVal","out","allOperations","NaN","reduceFormula","allStats","slotArts","rows","mat","dyn","record","Array","fill","selectedPivots","c","pivot","r","abs","ri","depOn","w","replaceWith","thresholdToConstBranchForm","br2","bv2","ge2","lt2","left","right","countSlotUsage","b","slotKey","allArtifactSets","con","sumM","monomials","flat","prodM","cartesian","monos","ret","nxt","terms","constantM","readM","tag","foldLikeTerms","mono","mon","sort","termsA","termsB","ai","splice","expandPoly","inheritTags","varMap","tagMap","varTags","lookup","hsh","hashNode","z","cmpNode","next","newTag","stat2tag","sop","toSOP","slotsLeft","sCount","fromEntries","slotUsage","filterProductPossible","pivotInplace","A","Aij","findPiv1","minloc","findPiv2","minMax","precompute","compute","mapping","buffer","fillBuffer","minval","toLinearUpperBound","toPureRead","slope","mon1","intercept","op","flippedResOp","flipOps","resf","d","handleResArg","rop","cop","thresh","minVal","maxVal","em","denom","minEM","maxEM","loc","sqrt","below","nodesToMap","t2","nt","lins","err","bounds","nVar","boundScale","scaleProd","soln","cons","coords","objective","Ab","tableau","Ai","cj","ijTrack","ij","targ","side","ncol","backtrack","solveLP","slice","wi","lub","lin","constVal","pv","thresholdExclusions","excl","exc","pruneAll","minimum","arts","numTop","exclusion","forced","should","deps","pruneNodeRange","reaffine","pruneOrder","pruneArtRange","count","x","newArts","forceRename","affineNodes","topLevelAffine","visit","isAffine","_op","dynKeys","nonConst","assertUnreachable","nextDynKey","affine","affineMap","Map","customRead","reaffineArt","stat","constantFold","objectMap","objectKeyMap","allSlotKeys","slot","id","offsets","baseValue","progress","noRainbow","rainbow","noSwitchIn","noSwitchOut","list","newList","greaterEqual","greater","baseRange","wrap","artRanges","computeArtRange","otherArtRanges","addArtRange","read","newRange","computeNodeRange","nodeRange","operandRanges","threshold","pass","fail","newOperands","op1","op2","ranges","range","reads","_f","computeMinMax","minMaxes","mergeBuilds","builds","maxNum","mergePlot","plots","scale","round","plot","build","kind","SetEffectDisplay","setKey","setNumKey","conditionalsOnly","sheet","ArtifactSheet","document","setEffectDocument","useBuildSetting","characterKey","database","DatabaseContext","buildSettings","buildSetting","setBuildSetting","follow","buildSettingDispatch","ArtifactSetConfig","dataContext","artSetExclusion","setOpen","onOpen","artifactSheets","artSetKeyList","reverse","useForceUpdate","dbDirty","forceUpdate","followAny","artSlotCount","allowRainbow2","allowRainbow4","allow2","allow4","exclude2","exclude4","artifactCondCount","fakeDataContextObj","currentContext","UIData","artSet","resetArtConds","tconditional","setAllExclusion","setnum","exclude","artSetExclusion_","faChartLine","className","faBan","Settings","Trans","i18nKey","AllSetAllowExcludeCard","setNum","numAllow","numExclude","gutterBottom","num","endIcon","ArtifactSetCard","slotCount","large","setExclusionSet","slots","set4CondNums","setEffects","doc","rarity","defIconSrc","stars","paddingTop","opacity","artifactSlotIcon","parseInt","levels","AssumeFullLevelToggle","mainStatAssumptionLevel","setmainStatAssumptionLevel","lvl","BonusStatsCard","bonusStatsKeys","Monospace","fontFamily","BorderLinearProgress","LinearProgress","BuildAlert","status","tested","skipped","failed","total","startTime","finishTime","characterName","hasTotal","generatingBuilds","unskipped","testedString","toLocaleString","unskippedString","skippedText","durationString","timeStringMs","performance","now","subtitle","Alert","severity","toFixed","ArtifactCardNano","artifactId","pSlotKey","showLocation","BGComponent","useArtifact","actionWrapperFunc","CardActionArea","useTheme","Assets","mainStatKey","substats","location","mainStatLevel","mainStatUnit","ele","alpha","ConditionalWrapper","condition","wrapper","position","ArtifactTooltip","slotIcons","maxHeight","maxWidth","pointerEvents","Artifact","LocationIcon","overflow","bottom","zIndex","BootstrapTooltip","placement","disableInteractive","cacheValueString","SubstatDisplay","numRolls","rolls","rollColor","alignContent","CharacterSheet","marginTop","BusinessCenter","OptimizationTargetContext","createContext","StatDisplayComponent","Masonry","sm","xl","Section","optimizationTarget","displayNsReads","nodeKey","emphasize","JSON","stringify","WeaponCardNano","weaponId","weapon","useWeapon","weaponSheet","WeaponSheet","computeUIData","dataObjForWeapon","refinement","WeaponNameTooltip","getImg","hasRefinement","WeaponStat","BuildDisplayItem","index","compareBuild","extraButtons","equippedArtifacts","newOld","setNewOld","close","equipBuild","window","confirm","newBuild","chars","equipArtifacts","weapons","statProviderContext","dataContext_","artNanos","oldId","newId","currentlyEquipped","CompareArtifactModal","flexWrap","SetBadges","setToSlots","slotarr1","slotarr","SetBadge","artifactSheet","numInSet","setActive","SetToolTipTitle","onEquip","containerProps","minWidth","ArtifactCard","canExclude","canEquip","ChevronRight","fontSize","ChartCard","chartData","plotBase","setPlotBase","showDownload","setshowDownload","showMin","setshowMin","displayData","downloadData","increasingX","y","minimumData","point","last","allData","sKey","Tooltip","Info","Download","DataDisplay","Chart","plotNode","valueNode","TextArea","resize","minHeight","readOnly","selectionStart","selectionEnd","plotBaseUnit","valueUnit","ResponsiveContainer","ComposedChart","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tick","tickFormatter","YAxis","allowDecimals","ZAxis","Legend","Scatter","line","lineType","isAnimationActive","Line","stroke","connectNulls","strokeWidth","artifactsSlotsToSelectMainStats","MainStatSelectionCard","mainStatKeys","numSel","mt","cursor","StatFilterCard","defThreads","navigator","hardwareConcurrency","initialTabOptimizeDBState","equipmentPriority","threads","useOptimizeDBState","useDBState","UseEquipped","useEquippedArts","useBoolState","tempEquipmentPriority","setOptimizeDBState","ck","setPrio","setPrioRank","fromIndex","toIndex","arr","removePrio","addPrio","resetPrio","numAbove","indexOf","numUseEquippedChar","numUnlisted","SelectItem","rank","maxRank","setRank","onRemove","NewItem","onAdd","useCharacter","equippedWeapon","KeyboardDoubleArrowUp","KeyboardArrowUp","KeyboardArrowDown","KeyboardDoubleArrowDown","Close","CharacterCardPico","WeaponCardPico","aId","ArtifactCardPico","artifactObj","char","Add","UseExcluded","artsDirty","useExcludedArts","numExcludedArt","dynamic","setReadNodeKeys","dynamicData","allMainStatKeys","allSubstatKeys","compactArtifacts","allowPartial","mainStatVal","endsWith","substat","accurateValue","reduceSubProblem","subp","constraints","depth","filters","mins","maxw","minw","unionFilterUpperLower","tagNodePairs","reducedNodes","tagsToKill","newTerms","reducePolynomial","toNumNode","active","newOptTarget","newConstraints","newMins","newArtExcl","feasibleKeys","feasible4sets","feasible2sets","allowedCnts","cnt","reducedExcl","fi","wixs","ws","baseC","li","ixs0","w0","accum","ix","baseBuffer","ixsi","applyLinearForm","newFilters","filterVec","filterIxs","slotVals","filterArtsVec2","minww","maxww","slotUpperLowerVecW","cache","toArtifactBySlotVec","allKeysList","problemSetup","optimizationTargetNode","artSetExclFull","objectKeyValueMap","constraintsEP","opttargetEP","slotUL","slotUpperLowerVec","statsUpperLowerVec","minMaxEst","ixs","ww","baseVal","wtot","minMaxWeightVec","initialProblem","initialReducedProblem","TabBuild","compareData","initGlobalSettings","tcMode","buildStatus","setBuildStatus","setchartData","setArtsDirty","maxWorkers","setMaxWorkers","useCharacterReducer","onClickTeammate","noArtifact","buildDate","maxBuildsToShow","teamData","useTeamData","buildsArts","numBuilds","currentPageIndex","setCurrentPageIndex","numPages","ceil","maxArtsToShowPerPage","setPageIdx","cancelToken","generateBuilds","fetchContinueWork","fetchWork","requestShareWork","sender","command","subproblem","workQueue","numBuild","_count","minFilterCount","buildValues","minCount","maxIter","maxSplitIters","cantTakeList","filteredArts","mainStats","split","getTeamData","workerData","uiDataForTeam","assign","mergeData","objPathValue","targetNode","valueFilter","cancelled","Promise","optimize","plotBaseNode","artsVec","masterInfo","ready","idleWorkers","busyWorkerIDs","workers","finalizedList","worker","setup","maxBuilds","postMessage","finalize","finalized","onmessage","subproblems","terminate","splitCommand","counts","pruned","prepruned","toLoop","work","then","buildTimer","setInterval","any","all","results","clearInterval","plotData","artifactIds","Date","Link","RouterLink","to","CharacterCard","getDisplay","TrendingUp","maxBuildsToShowList","OptimizationTargetSelector","setTarget","SolidToggleButtonGroup","exclusive","ToggleButton","PageBrowser","pageIdx","setPageIdex","Provider","BuildList","DataContextWrapper","join","providerValue","Pagination","page","CompareBuildButton","artId","onShow","newArt","artmap","dataProviderValue","arrow","Difference","numToShowMap","ArtifactFilterDisplay","lazy","ArtifactSwapModal","onChangeId","clickHandler","filterOptionReducer","slotKeys","useReducer","initialFilterOption","filterOption","filterOptionDispatch","brPt","useMediaQueryUp","filterConfigs","artifactFilterConfigs","artIdList","filterFunc","filterFunction","disableSlotFilter","rarityHandler","handleMultiSelect","allRarities","WeaponSwapModal","weaponTypeKey","weaponSheets","weaponFilterConfigs","sortConfigs","weaponSortConfigs","setRarity","searchTerm","setSearchTerm","deferredSearchTerm","useDeferredValue","weaponIdList","weaponType","sortFunction","star","TextField","autoFocus","InputProps","WeaponCard","WeaponEditor","EquipmentSection","setweaponId","showWeapon","hideWeapon","breakpoint","useMediaQuery","breakpoints","up","weaponDoc","initCharMeta","rvFilter","deferredRvFilter","deferredRvSet","footer","LargeWeaponSwapButton","ArtifactSectionCard","onEdit","WeaponSwapButton","effFilter","ArtifactSwapButton","editor","ArtSwapCard","SwapHoriz","hasEquipped","unequipArts","aid","setCharMeta","setRVFilter","deferredrvFilter","artid","currentEfficiency","maxEfficiency","currentEfficiency_","maxEfficiency_","rvField","PercentBadge","valid","rvmField","borderBottomRightRadius","borderBottomLeftRadius","SubstatToggle","selectedKeys","field","TabOverview","onScroll","CharacterProfileCard","EquipmentRow","team","navigate","useNavigate","constellation","tlvl","auto","skill","burst","tBoost","favorite","colored","top","Favorite","FavoriteBorder","getLevelString","cardImg","tKey","Badge","badgeContent","overlap","anchorOrigin","vertical","horizontal","padding","lineHeight","getTalentOfKey","img","constellationName","talentSpacing","CharacterTalentPane","grlg","constellationCards","SkillDisplayCard","talentKey","onClickTitle","ReactionDisplay","tText","asc","enabled","style","talentLimits","talent","actionWrapeprFunc","setTalentLevel","newTalentLevelKey","levelBoost","talentSheet","headerAction","TabTeambuffs","TeamBuffDisplay","ResonanceDisplay","TeammateDisplay","teamBuffs","getTeamBuff","premod","enemy","resonanceSheets","res","desc","titleTypographyProps","activeCharacterKey","teamMateKey","onClickHandler","dataBundle","teammateCharacterContext","teamConditional","teamMateDataContext","CharacterAutocomplete","charKey","disable","labelText","defaultText","defaultIcon","PersonAdd","showDefault","onClickHeader","artifactChildren","CharArtifactCondDisplay","weaponChildren","CharWeaponCondDisplay","characterChildren","CharTalentCondDisplay","isTeammateCard","sn","getTalent","sheets","sts","zero_deriv","funct","binding","diff","ddx","ops","da","db","numerator","arg1","arg2","quadrinomials","quadrinomial","nextRow","prev","gaussPDF","mu","sig2","exp","PI","sig_arr","sigr","sigma","ss","N","ssum","trunc","crawlUpgrades","fn","i1","i2","i3","i4","allUpgradeValues","statsBase","rollsLeft","subs","skippableDerivs","fourthsubOpts","evalFn","vals","sub","upVals","p_upVals","isNaN","p_val","subprob","stats2","p_upVals2","gaussianPE","mean","variance","upAvg","sign","erf","y2","phi","toStats","evalArtifact","slow","calc4th","curBuild","newStats","msOption","mainStat","subsToConsider","nxtsub","iq","thresholds","objectiveEval","grads","ks","gmmNd","fastUB","p2","subProb","ptot","prob","upAvgtot","distrtot","dtot","distr","gmm","cp","evalMode","subKey","obj","p_min","upAvgUB","apxDist","ksum","appx","lpe","stat2","o","cov","o1","o2","cv","mvn","Module","xi","pushX","mui","pushMu","pushCov","Eup","mvnPE_good","p_ret","upAvg_ret","querySetup","toEval","fo","evalOpt","dmg0","structuredEval","si","toQueryArtifact","fixedLevel","buildData","cmpQ","meanA","fWeight","hp","atk","def","hp_","atk_","def_","eleMas","enerRech_","critRate_","critDMG_","fWeightTot","excluded","nbins","UpgradeOptChartCard","upgradeOpt","objMin","objMax","calcExacts","setCalcExacts","bla","constrained","artifacts","gaussConstrained","thr0","perc","miin","maax","ymax","dataEst","steps","linspace","est","estCons","deltas","deltasConstrained","parseFloat","xpercent","trueData","setTrueData","trueP","setTrueP","trueE","setTrueE","exactData","true_p","true_e","bins","binsConstrained","binstep","whichBin","dataExact","dens","exact","exactCons","reportP","reportD","CustomTooltip","payload","aspect","margin","Label","offset","angle","verticalAlign","x1","y1","x2","stopColor","stopOpacity","Area","dot","legendType","tooltipType","activeDot","ReferenceLine","ReferenceDot","shape","radius","direction","TabUpopt","artifactUpgradeOpts","setArtifactUpgradeOpts","show20","setShow20","check4th","setCheck4th","useFilters","setUseMainStatFilter","upgradeOptExpandSink","start","expandTo","query","queryArts","qaLookup","fixedList","end","arti","pageIdex","setpageIdex","invScrollRef","artifactsToShow","toShow","minObj0","maxObj0","thr","setPage","zz","respectSexExclusion","newSK","curEquipSetKeys","skc","equippedArts","curEquip","artUpOpt","upOpt","faCalculator","ShowingArt","numShowing","TravelerElementSelect","sgt","talents","CharacterDisplay","useParams","allCharacterKeys","my","CharacterDisplayCard","charUIData","useMatch","params","tab","useTitle","dataContextValue","characterContextValue","DetailStatButton","CustomMultiTarget","FormulasButton","TabNav","CharacterPanel","Tabs","allowScrollButtonsMobile","Tab","Person","FactCheck","Groups","Calculate","BarChart","onModalOpen","onDelete","cs","falseWrapperFunc","equipOnChar","lock","falseWrapper","noWrap","displayVal","disableClearable","faEdit","faTrashAlt","SECOND_MS","MINUTE_MS","HOUR_MS","DAY_MS","msToUnits","ms","milliseconds","seconds","minutes","hours","timeString","timeText","strPadLeft","weaponSortKeys","getValue","wp","tieBreaker","i18n","toLowerCase","read_","readAsync","readBinary","fs","nodePath","requireNodeFS","objAssign","moduleOverrides","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","scriptDirectory","require","__dirname","filename","binary","readFileSync","Uint8Array","onload","onerror","readFile","replace","module","ex","ExitStatus","reason","toThrow","keepRuntimeAlive","self","currentScript","substr","lastIndexOf","url","xhr","XMLHttpRequest","send","responseText","responseType","response","bind","warn","wasmBinary","wasmMemory","noExitRuntime","WebAssembly","abort","ABORT","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","heap","idx","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ArrayToString","HEAPU8","stringToUTF8","outPtr","maxBytesToWrite","outIdx","startIdx","u","charCodeAt","stringToUTF8Array","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","len","wasmTable","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runtimeKeepaliveCounter","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","RuntimeError","wasmBinaryFile","isDataURI","startsWith","isFileURI","getBinary","file","callRuntimeCallbacks","callbacks","callback","func","arg","getWasmTableEntry","wasmTableMirror","funcPtr","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","release_ref","getShiftFromSize","embind_charCodes","readLatin1String","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","toString","prototype","constructor","BindingError","throwBindingError","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","hasOwnProperty","rawType","registeredInstance","options","ignoreDuplicateRegistrations","cb","ClassHandle_isAliasOf","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","iter","done","register","unregister","ClassHandle_clone","preservePointerOnDelete","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","arguments","apply","argCount","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","destructors","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","Emval","toHandle","nonConstNoSmartPtrRawPointerToWireType","simpleReadValueFromPointer","pointer","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","call","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","dynCall","sig","args","dynCallLegacy","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","heap32VectorToArray","firstElement","array","runDestructors","del","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","validateThis","this_","emval_free_list","emval_handle_array","count_emval_handles","get_first_emval","toValue","floatReadValueFromPointer","integerReadValueFromPointer","signed","codes","embind_init_charCodes","calledRun","asmLibraryArg","_malloc","primitiveType","minRange","maxRange","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","numArguments","exposePublicSymbol","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","replacePublicSymbol","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","Symbol","substring","method","memberFunction","fieldName","getterReturnType","getterSignature","getter","getterContext","setterArgumentType","setterSignature","setter","setterContext","enumerable","configurable","defineProperty","__emval_decref","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","getLength","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","lengthBytesUTF8","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","isVoid","dest","copyWithin","requestedSize","receiveInstance","instance","buf","exports","unshift","removeRunDependency","receiveInstantiationResult","instantiateArrayBuffer","receiver","fetch","credentials","catch","resolve","reject","getBinaryPromise","instantiate","instantiateStreaming","createWasm","run","doRun","postRun","preRun","runCaller"],"sourceRoot":""}