{"version":3,"file":"static/js/923.1aaae137.chunk.js","mappings":"oYAuBe,SAASA,EAAT,GAA0J,IAA1HC,EAAyH,EAAzHA,KAAyH,IAAnHC,UAAAA,OAAmH,MAAvG,EAAuG,EAApGC,EAAoG,EAApGA,OAAQC,EAA4F,EAA5FA,SAA4F,IAAlFC,OAAAA,OAAkF,MAAzE,kBAAM,GAAmE,EAA/CC,EAA+C,EAA7DC,aACnGC,GAAeC,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,OAAoB,IACpD,GAAwCC,EAAAA,EAAAA,UAA0BL,EAAmB,CAACA,IAAJ,OAA4BM,EAAAA,KAA9G,eAAOL,EAAP,KAAqBM,EAArB,MAEAC,EAAAA,EAAAA,YAAU,kBAAMR,GAAoBO,EAAgB,CAACP,MAAoB,CAACA,IAE1E,IAAMS,EAAgBP,GAAoB,OAAI,IAAIQ,IAAIC,EAAAA,KAAgBZ,QAAO,SAAAa,GAAI,OAAIb,EAAOG,EAAaU,OACtGb,QAAO,SAAAa,GAAI,aAAIX,EAAaY,SAAb,OAAsBX,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAeU,UAArC,aAAsB,EAAsBE,eAC3DC,MAAK,SAACC,EAAGC,GAAJ,mBAAU,iBAACf,QAAD,IAACA,GAAD,UAACA,EAAee,UAAhB,aAAC,EAAmBC,cAApB,QAA8B,IAA9B,iBAAoChB,QAApC,IAAoCA,GAApC,UAAoCA,EAAec,UAAnD,aAAoC,EAAmBE,cAAvD,QAAiE,MAF9C,GAIrC,OAAKhB,GAEE,SAAC,IAAD,CAAciB,KAAMxB,EAAMyB,QAASvB,EAAnC,UACL,UAAC,IAAD,YACE,SAAC,IAAD,CAAawB,GAAI,CAAEC,GAAI,GAAvB,UACE,UAAC,KAAD,CAAMC,WAAS,EAAf,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,SAAU,EAArB,UACE,SAAC,IAAD,CAAcC,MAAOzB,EAAc0B,SAAUpB,EAAiBqB,WAAY5B,EAAkB6B,KAAK,aAEnG,SAAC,KAAD,CAAML,MAAI,EAAV,UACE,SAAC,IAAD,CAAaM,QAASjC,YAI5B,SAAC,IAAD,KACA,SAAC,IAAD,WAAa,SAAC,KAAD,CAAM0B,WAAS,EAACQ,QAAS,EAAzB,SACVtB,EAAauB,KAAI,SAAAC,GAAc,IAAD,EACvBC,EAAchC,EAAa+B,GACjC,OAAO,SAAC,KAAD,CAAMT,MAAI,EAAiBW,GAAI,EAAGC,GAAI,EAAtC,UACL,SAAC,IAAD,CAAWf,GAAI,CAAEgB,OAAQ,QAAzB,UACE,UAAC,IAAD,CAAgBP,QAAS,WAAQjC,IAAUC,EAASmC,IAAcZ,GAAI,CAAEiB,QAAS,QAAjF,WACE,SAAC,IAAD,CAAKC,UAAU,MAAMC,IAAKN,EAAYO,OAAO7C,GAAYyB,GAAI,CAAEqB,MAAO,IAAKL,OAAQ,QAAUM,UAAS,gBAAWT,EAAYhB,OAAvB,WACtG,UAAC,IAAD,CAAKG,GAAI,CAAEI,SAAU,EAAGmB,GAAI,GAA5B,WACE,SAAC,IAAD,CAAYC,QAAQ,YAApB,SAAiCX,EAAYY,QAC7C,UAAC,IAAD,YAAY,SAAC,IAAD,CAASN,IAAG,UAAEO,EAAAA,EAAAA,mBAAF,aAAE,EAAqBb,EAAYpB,cAA3D,KAA2E,SAAC,IAAD,CAAOkC,MAAOd,EAAYhB,OAAQ+B,SAAO,gBANrGhB,WAa3B,SAAC,IAAD,KACA,SAAC,IAAD,CAAaZ,GAAI,CAAEC,GAAI,GAAvB,UACE,SAAC,IAAD,CAAa4B,OAAK,EAACpB,QAASjC,WAjCR,O,4eCCb,SAASsD,EAAT,GAKiB,IAAD,EAJnBC,EAImB,EAJ7BC,SAI6B,IAH7BC,OAAAA,OAG6B,SAF7BlC,EAE6B,EAF7BA,QACAmC,EAC6B,EAD7BA,aAEQC,GAAMC,EAAAA,EAAAA,GAAe,MAArBD,EACAE,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KAEAG,GAAaF,EAAAA,EAAAA,YAAWG,EAAAA,GAAxBD,SACFE,GAASC,EAAAA,EAAAA,GAAUZ,GACzB,SAAwFW,QAAxF,IAAwFA,EAAAA,EAAU,GAAlG,IAAQE,IAAAA,OAAR,MAAc,GAAd,MAAkBC,MAAAA,QAAlB,MAA0B,EAA1B,OAA6BC,WAAAA,QAA7B,OAA0C,EAA1C,QAA6CvE,UAAAA,QAA7C,OAAyD,EAAzD,GAA4DwE,GAA5D,EAA4DA,KAA5D,KAAkEC,SAAAA,QAAlE,OAA6E,GAA7E,GAAiFC,GAAjF,EAAiFA,GAC3EpC,IAAc/B,EAAAA,EAAAA,GAAWC,EAAAA,EAAAA,IAAgB6D,GAAM,CAACA,IAEhDM,IAAiBC,EAAAA,EAAAA,cAAY,SAACC,GAClCZ,EAASa,aAAaD,EAAWrB,KAChC,CAACA,EAAcS,IAEZc,IAAWH,EAAAA,EAAAA,cAAY,SAAAN,GAC3BA,GAAQU,EAAAA,EAAAA,IAAMV,EAAO,EAAG,IACxB,IAAMtE,EAAYiF,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAIZ,GAASY,KAClEP,GAAe,CAAEL,MAAAA,EAAOtE,UAAAA,MACvB,CAAC2E,KAEEQ,IAAeP,EAAAA,EAAAA,cAAY,WAC/B,IAAMQ,EAAiBH,EAAAA,GAAAA,WAA4B,SAAAC,GAAO,OAAc,KAAVZ,IAAgBA,KAAUY,KACtDP,GAA9B3E,KAAcoF,EAA+B,CAAEpF,UAAWA,GAAY,GACtD,CAAEA,UAAWoF,MAChC,CAACT,GAAgB3E,GAAWsE,KAEzBe,IAAiB9E,EAAAA,EAAAA,GAAWkE,GAAWa,EAAAA,EAAAA,IAAmBb,SAAYc,EAAW,CAACd,KAClFpE,GAAegF,GAAiB,SAACG,GAAD,OAAQA,EAAGtE,aAAemE,GAAeI,oBAAgBF,EACzFG,GAAsBL,IAAkBA,GAAeI,cAEvDE,IAAcf,EAAAA,EAAAA,cAAY,SAACgB,GAAD,OAAgClB,IAAMT,EAAS4B,kBAAkBnB,GAAIkB,KAAU,CAAC3B,EAAUS,KACpHvE,IAASyE,EAAAA,EAAAA,cACb,SAACkB,GAAD,OAAwBA,EAAGL,iBAAH,OAAqBnD,SAArB,IAAqBA,QAArB,EAAqBA,GAAapB,cAC1D,CAACoB,KAGH,IAAkC7B,EAAAA,EAAAA,WAAS,GAA3C,iBAAOsF,GAAP,MAAkBC,GAAlB,MACMC,GAAG,OAAG3D,SAAH,IAAGA,QAAH,EAAGA,GAAaO,OAAO7C,KAGhCY,EAAAA,EAAAA,YAAU,WACR,GAAK0B,IAAgBqC,IAAkBrC,GAAY+B,OAAZ,OAAoBF,QAApB,IAAoBA,OAApB,EAAoBA,EAAQE,MAC/D/B,GAAYhB,QAAU,IAAMgD,GAAQ,IAAMtE,GAAY,GAAI,CAC5D,cAA2BkG,EAAAA,GAAAA,GAA3B,GAAO5B,EAAP,KAActE,EAAd,KACA2E,GAAe,CAAEL,MAAAA,EAAOtE,UAAAA,OAEzB,CAACsC,GAAa6B,EAAQQ,GAAgBL,GAAOtE,KAGhD,IAAMmG,IAAeC,EAAAA,EAAAA,UAAQ,kBAAM9D,IAAe6B,IAAUkC,EAAAA,EAAAA,IAAc,CAAC/D,GAAYwB,MAAMwC,EAAAA,EAAAA,IAAiBnC,OAAW,CAAC7B,GAAa6B,IACvI,OAAO,SAAC,IAAD,CAAc5C,OAAQiC,EAAchC,QAASA,EAAS+E,eAAgB,CAAEC,SAAU,MAAlF,UAA0F,UAAC,IAAD,YAC/F,SAAC,IAAD,CAAsBxG,UAAWA,GAAWD,KAAMgG,GAAW9F,OAAQ,kBAAM+F,IAAa,IAAQ9F,SAAU,SAAAuG,GAAC,OAAI9B,GAAe,CAAEN,IAAKoC,KAAMtG,OAAQE,GAAcA,aAAcqF,MAC/K,SAAC,IAAD,UACGpD,IAAe6D,KAAgB,UAAC,KAAD,CAAMxE,WAAS,EAACQ,QAAS,IAAzB,WAC9B,SAAC,KAAD,CAAMP,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAvB,UACE,UAAC,KAAD,CAAMhF,WAAS,EAACQ,QAAS,IAAzB,WACE,SAAC,KAAD,CAAMP,MAAI,EAAC8E,GAAI,EAAGC,GAAI,GAAtB,UACE,SAAC,IAAD,CAAKhE,UAAU,MAAMC,IAAKqD,GAAKlD,UAAS,eAAUT,GAAYhB,OAAtB,QAAoCG,GAAI,CAAE+E,SAAU,IAAK1D,MAAO,OAAQL,OAAQ,OAAQmE,aAAc,QAEhJ,SAAC,KAAD,CAAMhF,MAAI,EAAC8E,GAAI,EAAGC,GAAI,GAAtB,UACE,SAAC,IAAD,WAAY,2BAAQrE,GAAYuE,wBAItC,UAAC,KAAD,CAAMjF,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGlF,GAAI,CAAEiB,QAAS,OAAQoE,cAAe,SAAUC,IAAK,GAA/E,WACE,SAAC,IAAD,CAAKrE,QAAQ,OAAOqE,IAAK,EAAGC,SAAS,OAAOC,eAAe,gBAA3D,UACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAQ/E,QAAS,kBAAM8D,IAAa,IAApC,0BAA6C1D,SAA7C,IAA6CA,QAA7C,EAA6CA,GAAaY,YAA1D,QAAkE,qBACtD,OAAXZ,SAAW,IAAXA,QAAA,EAAAA,GAAa4E,iBAAiB,UAAC,IAAD,CAAgBC,MAAK,qBAAgB5C,IAArC,WAC7B,SAAC,IAAD,wCACA,SAAC,IAAD,KACC,OAAI6C,MAAM,GAAGC,QAAQjF,KAAI,SAAAiC,GAAG,OAC3B,SAAC,IAAD,CAAoBnC,QAAS,kBAAMyC,GAAe,CAAEJ,WAAYF,EAAM,KAAMiD,SAAU/C,KAAgBF,EAAM,EAAIrC,SAAUuC,KAAgBF,EAAM,EAAhJ,8BACiBA,EAAM,IADRA,SAIlBV,QAGL,UAAC,IAAD,CAAKjB,QAAQ,OAAOqE,IAAK,EAAGC,SAAS,OAAOC,eAAe,gBAA3D,WACE,UAAC,IAAD,CAAaxF,GAAI,CAAE8F,QAAS,SAAA3D,GAAC,OAAIA,EAAE4D,QAAQC,aAAaC,OAAxD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAmB3F,SAAUgD,GAAUjD,MAAOwC,GAC5CqD,eAAe,OACfC,WAAY,CAAEC,IAAK,EAAGC,IAAK,GAAIrG,GAAI,CAAEsG,UAAW,WAChDtG,GAAI,CAAEqB,MAAO,OAAQL,OAAQ,OAAQuF,GAAI,OAG5C1F,KAAe,SAAC,IAAD,CAAQb,GAAI,CAAEuG,GAAI,GAAKhG,UAAWM,GAAY2F,eAAe3D,IAAQpC,QAASiD,GAA9E,UAA4F,mCAAWF,EAAAA,GAAkBjF,SACxIsC,KAAe,SAAC,IAAD,CAAgB6E,MAAO,eAAvB,SACb7E,GAAY4F,gBAAgB9F,KAAI,YAAe,IAAD,eAAZ+F,EAAY,KAARC,EAAQ,KAEvCC,EADYF,IAAOlD,EAAAA,GAAkBmD,GACnB,cAAUD,GAAV,cAAwBA,EAAxB,YAA8BlD,EAAAA,GAAkBmD,IAClEd,EAAWa,IAAO7D,IAAS8D,IAAOpI,GACxC,OAAO,SAAC,IAAD,CAA8BsH,SAAUA,EAAUtF,SAAUsF,EAAUpF,QAAS,kBAAMyC,GAAe,CAAEL,MAAO6D,EAAInI,UAAWoI,KAA5H,SAAoIC,GAApI,UAAkBF,EAAlB,YAAwBC,aAKrC,SAAC,IAAD,CAAQE,MAAM,QAAQpG,QAAS,kBAAMwC,IAAMT,EAASa,aAAa,CAAEN,MAAOA,IAAQE,KAAK6D,UAAW/D,IAAO,SAAC,IAAD,KAAW,SAAC,IAAD,IAApH,SACGA,GAAO,SAAW,iBAGvB,SAAC,IAAD,WAAY,SAAC,IAAD,CAAOpB,MAAOd,GAAYhB,YACtC,SAAC,IAAD,CAAY2B,QAAQ,YAApB,UAAgC,4BAASX,GAAYkG,iBACrD,SAAC,IAAD,CAAYC,cAAY,EAAxB,SAA0BnG,GAAYkG,aAAelG,GAAYoG,mBAAmBvC,GAAawC,IAAIC,EAAAA,GAAAA,OAAAA,aAA0B9G,UAC/H,UAAC,IAAD,CAAKY,QAAQ,OAAOoE,cAAc,SAASC,IAAK,EAAhD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYI,MAAO,aAAc0B,qBAAsB,CAAE5F,QAAS,gBAClE,SAAC,IAAD,KACA,SAAC,KAAD,UACG,CAAC2F,EAAAA,GAAAA,OAAAA,KAAmBA,EAAAA,GAAAA,OAAAA,IAAkBA,EAAAA,GAAAA,OAAAA,MAAmBxG,KAAI,SAAC0G,EAAMC,GACnE,IAAMC,EAAI7C,GAAawC,IAAIG,GAC3B,OAAIE,EAAEC,UAAYD,EAAElH,MAAc,MAC3B,SAAC,KAAD,CAAmCgH,KAAME,EAAGrG,UAAWuG,EAAAA,IAAhCF,EAAEG,KAAK9E,aAI1CP,GAAQxB,GAAY8G,WAAY,SAAC,IAAD,CAAiBC,SAAU/G,GAAY8G,sBAK/E1F,GAAUgB,KAAM,SAAC,IAAD,CAAajD,GAAI,CAAEC,GAAI,GAAvB,UACf,UAAC,KAAD,CAAMC,WAAS,EAACQ,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMP,MAAI,EAACC,SAAU,EAArB,UACE,SAAC,IAAD,CAAuByH,aAAW,EAACrH,KAAK,QAAQsH,aAAa,SAAC,IAAD,IAAoBC,YAAa5F,EAAE,aAAc9B,MAAO2C,GAAU1C,SAAU4D,GAAaxF,OAAQA,GAAQsJ,QAAS,SAACC,GAAD,MAAkB,KAANA,GAAUC,kBAAgB,OAEvN,SAAC,KAAD,CAAM/H,MAAI,EAACC,SAAU,MAClBL,IAAW,SAAC,KAAD,CAAMI,MAAI,EAAV,UAAW,SAAC,IAAD,CAAaH,GAAI,CAAEgB,OAAQ,QAAUa,OAAK,EAACpB,QAASV","sources":["Components/Weapon/WeaponSelectionModal.tsx","PageWeapon/WeaponEditor.tsx"],"sourcesContent":["import { Box, CardActionArea, CardContent, Divider, Grid, Typography } from \"@mui/material\"\nimport { useEffect, useState } from \"react\"\nimport Assets from \"../../Assets/Assets\"\nimport usePromise from \"../../ReactHooks/usePromise\"\nimport { allWeaponKeys, allWeaponTypeKeys, WeaponKey, WeaponTypeKey } from \"../../Types/consts\"\nimport WeaponSheet from \"../../Data/Weapons/WeaponSheet\"\nimport CardDark from \"../Card/CardDark\"\nimport CardLight from \"../Card/CardLight\"\nimport CloseButton from \"../CloseButton\"\nimport ImgIcon from \"../Image/ImgIcon\"\nimport ModalWrapper from \"../ModalWrapper\"\nimport { Stars } from \"../StarDisplay\"\nimport WeaponToggle from \"../ToggleButton/WeaponToggle\"\n\ntype WeaponSelectionModalProps = {\n  show: boolean,\n  ascension?: number,\n  onHide: () => void,\n  onSelect: (wKey: WeaponKey) => void,\n  filter?: (sheet: WeaponSheet) => boolean,\n  weaponFilter?: WeaponTypeKey,\n}\n\nexport default function WeaponSelectionModal({ show, ascension = 0, onHide, onSelect, filter = () => true, weaponFilter: propWeaponFilter }: WeaponSelectionModalProps) {\n  const weaponSheets = usePromise(WeaponSheet.getAll, [])\n  const [weaponFilter, setWeaponfilter] = useState<WeaponTypeKey[]>(propWeaponFilter ? [propWeaponFilter] : [...allWeaponTypeKeys])\n\n  useEffect(() => propWeaponFilter && setWeaponfilter([propWeaponFilter]), [propWeaponFilter])\n\n  const weaponIdList = !weaponSheets ? [] : [...new Set(allWeaponKeys)].filter(wKey => filter(weaponSheets[wKey]))\n    .filter(wKey => weaponFilter.includes(weaponSheets?.[wKey]?.weaponType))\n    .sort((a, b) => (weaponSheets?.[b]?.rarity ?? 0) - (weaponSheets?.[a]?.rarity ?? 0))\n\n  if (!weaponSheets) return null\n\n  return <ModalWrapper open={show} onClose={onHide}>\n    <CardDark>\n      <CardContent sx={{ py: 1 }}>\n        <Grid container>\n          <Grid item flexGrow={1}>\n            <WeaponToggle value={weaponFilter} onChange={setWeaponfilter} disabled={!!propWeaponFilter} size=\"small\" />\n          </Grid >\n          <Grid item>\n            <CloseButton onClick={onHide} />\n          </Grid >\n        </Grid>\n      </CardContent>\n      <Divider />\n      <CardContent><Grid container spacing={1}>\n        {weaponIdList.map(weaponKey => {\n          const weaponSheet = weaponSheets[weaponKey]\n          return <Grid item key={weaponKey} lg={3} md={4}>\n            <CardLight sx={{ height: \"100%\" }} >\n              <CardActionArea onClick={() => { onHide(); onSelect(weaponKey) }} sx={{ display: \"flex\" }}>\n                <Box component=\"img\" src={weaponSheet.getImg(ascension)} sx={{ width: 100, height: \"auto\" }} className={` grad-${weaponSheet.rarity}star`} />\n                <Box sx={{ flexGrow: 1, px: 1 }}>\n                  <Typography variant=\"subtitle1\">{weaponSheet.name}</Typography>\n                  <Typography><ImgIcon src={Assets.weaponTypes?.[weaponSheet.weaponType]} /> <Stars stars={weaponSheet.rarity} colored /></Typography>\n                </Box>\n              </CardActionArea>\n            </CardLight>\n          </Grid>\n        })}\n      </Grid></CardContent>\n      <Divider />\n      <CardContent sx={{ py: 1 }}>\n        <CloseButton large onClick={onHide} />\n      </CardContent>\n    </CardDark>\n  </ModalWrapper>\n}\n","import { BusinessCenter, Lock, LockOpen } from \"@mui/icons-material\"\nimport { Box, Button, ButtonGroup, CardContent, CardHeader, Divider, Grid, ListItem, MenuItem, Typography } from \"@mui/material\"\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport { useTranslation } from \"react-i18next\"\nimport CardDark from \"../Components/Card/CardDark\"\nimport CardLight from \"../Components/Card/CardLight\"\nimport CharacterAutocomplete from \"../Components/Character/CharacterAutocomplete\"\nimport CloseButton from \"../Components/CloseButton\"\nimport CustomNumberInput, { CustomNumberInputButtonGroupWrapper } from \"../Components/CustomNumberInput\"\nimport DocumentDisplay from \"../Components/DocumentDisplay\"\nimport DropdownButton from \"../Components/DropdownMenu/DropdownButton\"\nimport { FieldDisplayList, NodeFieldDisplay } from \"../Components/FieldDisplay\"\nimport ModalWrapper from \"../Components/ModalWrapper\"\nimport { Stars } from \"../Components/StarDisplay\"\nimport WeaponSelectionModal from \"../Components/Weapon/WeaponSelectionModal\"\nimport CharacterSheet from \"../Data/Characters/CharacterSheet\"\nimport { ascensionMaxLevel, lowRarityMilestoneLevels } from \"../Data/LevelData\"\nimport WeaponSheet from \"../Data/Weapons/WeaponSheet\"\nimport { DatabaseContext } from \"../Database/Database\"\nimport { DataContext } from \"../DataContext\"\nimport { uiInput as input } from \"../Formula\"\nimport { computeUIData, dataObjForWeapon } from \"../Formula/api\"\nimport usePromise from \"../ReactHooks/usePromise\"\nimport useWeapon from \"../ReactHooks/useWeapon\"\nimport { CharacterKey } from \"../Types/consts\"\nimport { ICachedWeapon } from \"../Types/weapon\"\nimport { clamp } from \"../Util/Util\"\n\ntype WeaponStatsEditorCardProps = {\n  weaponId: string\n  footer?: boolean\n  onClose?: () => void\n  extraButtons?: JSX.Element\n}\nexport default function WeaponEditor({\n  weaponId: propWeaponId,\n  footer = false,\n  onClose,\n  extraButtons\n}: WeaponStatsEditorCardProps) {\n  const { t } = useTranslation(\"ui\")\n  const { data } = useContext(DataContext)\n\n  const { database } = useContext(DatabaseContext)\n  const weapon = useWeapon(propWeaponId)\n  const { key = \"\", level = 0, refinement = 0, ascension = 0, lock, location = \"\", id } = weapon ?? {}\n  const weaponSheet = usePromise(WeaponSheet.get(key), [key])\n\n  const weaponDispatch = useCallback((newWeapon: Partial<ICachedWeapon>) => {\n    database.updateWeapon(newWeapon, propWeaponId)\n  }, [propWeaponId, database])\n\n  const setLevel = useCallback(level => {\n    level = clamp(level, 1, 90)\n    const ascension = ascensionMaxLevel.findIndex(ascenML => level <= ascenML)\n    weaponDispatch({ level, ascension })\n  }, [weaponDispatch])\n\n  const setAscension = useCallback(() => {\n    const lowerAscension = ascensionMaxLevel.findIndex(ascenML => level !== 90 && level === ascenML)\n    if (ascension === lowerAscension) weaponDispatch({ ascension: ascension + 1 })\n    else weaponDispatch({ ascension: lowerAscension })\n  }, [weaponDispatch, ascension, level])\n\n  const characterSheet = usePromise(location ? CharacterSheet.get(location) : undefined, [location])\n  const weaponFilter = characterSheet ? (ws) => ws.weaponType === characterSheet.weaponTypeKey : undefined\n  const initialWeaponFilter = characterSheet && characterSheet.weaponTypeKey\n\n  const equipOnChar = useCallback((charKey: CharacterKey | \"\") => id && database.setWeaponLocation(id, charKey), [database, id])\n  const filter = useCallback(\n    (cs: CharacterSheet) => cs.weaponTypeKey === weaponSheet?.weaponType,\n    [weaponSheet],\n  )\n\n  const [showModal, setshowModal] = useState(false)\n  const img = weaponSheet?.getImg(ascension)\n\n  //check the levels when switching from a 5* to a 1*, for example.\n  useEffect(() => {\n    if (!weaponSheet || !weaponDispatch || weaponSheet.key !== weapon?.key) return\n    if (weaponSheet.rarity <= 2 && (level > 70 || ascension > 4)) {\n      const [level, ascension] = lowRarityMilestoneLevels[0]\n      weaponDispatch({ level, ascension })\n    }\n  }, [weaponSheet, weapon, weaponDispatch, level, ascension])\n\n\n  const weaponUIData = useMemo(() => weaponSheet && weapon && computeUIData([weaponSheet.data, dataObjForWeapon(weapon)]), [weaponSheet, weapon])\n  return <ModalWrapper open={!!propWeaponId} onClose={onClose} containerProps={{ maxWidth: \"md\" }}><CardLight>\n    <WeaponSelectionModal ascension={ascension} show={showModal} onHide={() => setshowModal(false)} onSelect={k => weaponDispatch({ key: k })} filter={weaponFilter} weaponFilter={initialWeaponFilter} />\n    <CardContent >\n      {weaponSheet && weaponUIData && <Grid container spacing={1.5}>\n        <Grid item xs={12} sm={3}>\n          <Grid container spacing={1.5}>\n            <Grid item xs={6} sm={12}>\n              <Box component=\"img\" src={img} className={`grad-${weaponSheet.rarity}star`} sx={{ maxWidth: 256, width: \"100%\", height: \"auto\", borderRadius: 1 }} />\n            </Grid>\n            <Grid item xs={6} sm={12}>\n              <Typography><small>{weaponSheet.description}</small></Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={9} sx={{ display: \"flex\", flexDirection: \"column\", gap: 1 }}>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\n            <ButtonGroup>\n              <Button onClick={() => setshowModal(true)} >{weaponSheet?.name ?? \"Select a Weapon\"}</Button>\n              {weaponSheet?.hasRefinement && <DropdownButton title={`Refinement ${refinement}`}>\n                <MenuItem>Select Weapon Refinement</MenuItem>\n                <Divider />\n                {[...Array(5).keys()].map(key =>\n                  <MenuItem key={key} onClick={() => weaponDispatch({ refinement: key + 1 })} selected={refinement === (key + 1)} disabled={refinement === (key + 1)}>\n                    {`Refinement ${key + 1}`}\n                  </MenuItem>)}\n              </DropdownButton>}\n              {extraButtons}\n            </ButtonGroup>\n          </Box>\n          <Box display=\"flex\" gap={1} flexWrap=\"wrap\" justifyContent=\"space-between\">\n            <ButtonGroup sx={{ bgcolor: t => t.palette.contentLight.main }} >\n              <CustomNumberInputButtonGroupWrapper >\n                <CustomNumberInput onChange={setLevel} value={level}\n                  startAdornment=\"Lv. \"\n                  inputProps={{ min: 1, max: 90, sx: { textAlign: \"center\" } }}\n                  sx={{ width: \"100%\", height: \"100%\", pl: 2 }}\n                />\n              </CustomNumberInputButtonGroupWrapper>\n              {weaponSheet && <Button sx={{ pl: 1 }} disabled={!weaponSheet.ambiguousLevel(level)} onClick={setAscension}><strong>/ {ascensionMaxLevel[ascension]}</strong></Button>}\n              {weaponSheet && <DropdownButton title={\"Select Level\"} >\n                {weaponSheet.milestoneLevels.map(([lv, as]) => {\n                  const sameLevel = lv === ascensionMaxLevel[as]\n                  const lvlstr = sameLevel ? `Lv. ${lv}` : `Lv. ${lv}/${ascensionMaxLevel[as]}`\n                  const selected = lv === level && as === ascension\n                  return <MenuItem key={`${lv}/${as}`} selected={selected} disabled={selected} onClick={() => weaponDispatch({ level: lv, ascension: as })}>{lvlstr}</MenuItem>\n                })}\n              </DropdownButton>}\n            </ButtonGroup>\n\n            <Button color=\"error\" onClick={() => id && database.updateWeapon({ lock: !lock }, id)} startIcon={lock ? <Lock /> : <LockOpen />}>\n              {lock ? \"Locked\" : \"Unlocked\"}\n            </Button>\n          </Box>\n          <Typography><Stars stars={weaponSheet.rarity} /></Typography>\n          <Typography variant=\"subtitle1\"><strong>{weaponSheet.passiveName}</strong></Typography>\n          <Typography gutterBottom>{weaponSheet.passiveName && weaponSheet.passiveDescription(weaponUIData.get(input.weapon.refineIndex).value)}</Typography>\n          <Box display=\"flex\" flexDirection=\"column\" gap={1}>\n            <CardDark >\n              <CardHeader title={\"Main Stats\"} titleTypographyProps={{ variant: \"subtitle2\" }} />\n              <Divider />\n              <FieldDisplayList>\n                {[input.weapon.main, input.weapon.sub, input.weapon.sub2].map((node, i) => {\n                  const n = weaponUIData.get(node)\n                  if (n.isEmpty || !n.value) return null\n                  return <NodeFieldDisplay key={n.info.key} node={n} component={ListItem} />\n                })}\n              </FieldDisplayList>\n            </CardDark>\n            {data && weaponSheet.document && <DocumentDisplay sections={weaponSheet.document} />}\n          </Box>\n        </Grid>\n      </Grid>}\n    </CardContent>\n    {footer && id && <CardContent sx={{ py: 1 }}>\n      <Grid container spacing={1}>\n        <Grid item flexGrow={1}>\n          <CharacterAutocomplete showDefault size=\"small\" defaultIcon={<BusinessCenter />} defaultText={t(\"inventory\")} value={location} onChange={equipOnChar} filter={filter} disable={(v: any) => v === \"\"} disableClearable />\n        </Grid>\n        <Grid item flexGrow={2} />\n        {!!onClose && <Grid item><CloseButton sx={{ height: \"100%\" }} large onClick={onClose} /></Grid>}\n      </Grid>\n    </CardContent>}\n  </CardLight ></ModalWrapper>\n}\n"],"names":["WeaponSelectionModal","show","ascension","onHide","onSelect","filter","propWeaponFilter","weaponFilter","weaponSheets","usePromise","WeaponSheet","useState","allWeaponTypeKeys","setWeaponfilter","useEffect","weaponIdList","Set","allWeaponKeys","wKey","includes","weaponType","sort","a","b","rarity","open","onClose","sx","py","container","item","flexGrow","value","onChange","disabled","size","onClick","spacing","map","weaponKey","weaponSheet","lg","md","height","display","component","src","getImg","width","className","px","variant","name","Assets","stars","colored","large","WeaponEditor","propWeaponId","weaponId","footer","extraButtons","t","useTranslation","data","useContext","DataContext","database","DatabaseContext","weapon","useWeapon","key","level","refinement","lock","location","id","weaponDispatch","useCallback","newWeapon","updateWeapon","setLevel","clamp","ascensionMaxLevel","ascenML","setAscension","lowerAscension","characterSheet","CharacterSheet","undefined","ws","weaponTypeKey","initialWeaponFilter","equipOnChar","charKey","setWeaponLocation","cs","showModal","setshowModal","img","lowRarityMilestoneLevels","weaponUIData","useMemo","computeUIData","dataObjForWeapon","containerProps","maxWidth","k","xs","sm","borderRadius","description","flexDirection","gap","flexWrap","justifyContent","hasRefinement","title","Array","keys","selected","bgcolor","palette","contentLight","main","startAdornment","inputProps","min","max","textAlign","pl","ambiguousLevel","milestoneLevels","lv","as","lvlstr","color","startIcon","passiveName","gutterBottom","passiveDescription","get","input","titleTypographyProps","node","i","n","isEmpty","ListItem","info","document","sections","showDefault","defaultIcon","defaultText","disable","v","disableClearable"],"sourceRoot":""}